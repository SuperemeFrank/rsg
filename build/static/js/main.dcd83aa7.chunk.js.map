{"version":3,"sources":["Components/Utils/CommonFunc.js","Components/ContentPages/MSTR2020/WindowsCustom/CustomerInfoAndInstallationDirect/WinCustomerInfoAndInstallationDirect.js","Components/ButtonBar/SelectAllButtonBar/SelectAllButtonBar.js","Components/Navigation/Navigation.js","assets/Icons/info.svg","assets/MSTR2020/LINUX/Lin20Maps4Generator.js","assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomMaps4Generator.js","assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressMaps4Generator.js","Components/ContentPages/MSTR2020/WindowsCustom/Summary/WinSummary.js","index.js","assets/Icons/Windows.png","assets/Icons/Linux.png","App.js","Containers/ResponseFileBuilder/ResponseFileBuilder.js","Containers/ResponseFileBuilder/InstallationOsControl/InstallationOsControl.js","Components/ConfigurationContent/ConfigurationContent.js","Components/ContentPages/LicenseAgreePage/LicenseAgreePage.js","assets/LicenseAgreementContent.js","Components/ContentPages/MSTR2020/Linux/CustomerInfoAndInstallationDirect/LinCustomerInfoAndInstallationDirect.js","Components/ContentPages/MSTR2020/Linux/FeatureSelection/LinFeatureSelection.js","Components/ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep1.js","Components/ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep2.js","Components/ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep3.js","Components/ContentPages/MSTR2020/Linux/IdentityManager/LinIdentityManager.js","Components/ContentPages/MSTR2020/Linux/RegisteringAsService/LinRegisteringAsService.js","Components/ContentPages/MSTR2020/Linux/Summary/LinSummary.js","Components/ReferencePicture/ReferencePicture.js","Components/ContentPages/MSTR2020/Linux/TelemetryConfiguration/LinTelemetryConfiguration.js","Components/ContentPages/MSTR2020/Linux/TopologyConfiguration/LinTopologyConfiguration.js","Components/ContentPages/MSTR2020/WindowsCustom/FeatureSelection/WinFeatureSelection.js","Components/ContentPages/MSTR2020/WindowsCustom/IdentityConfiguration/WinIdentityConfiguration.js","Components/ContentPages/MSTR2020/WindowsCustom/IntelligenceServerConfiguration/WinIntelligenceServerConfiguration.js","Components/ContentPages/MSTR2020/WindowsCustom/NarrowcastServerConfiguration/WinNarrowcastServerConfiguration.js","Components/ContentPages/MSTR2020/WindowsCustom/OfficeConfiguration/WinOfficeConfiguration.js","Components/ContentPages/MSTR2020/WindowsCustom/PortalMDXVDS/WinPortalMDXVDS.js","Components/Utils/CommonCss.module.css","Components/ContentPages/MSTR2020/WindowsCustom/TelemetryConfiguration/WinTelemetryConfiguration.js","Components/ContentPages/MSTR2020/WindowsCustom/TopologyConfiguration/WinTopologyConfiguration.js","Components/ContentPages/MSTR2020/WindowsCustom/WebMobileVDS/WinWebMobileVDS.js","serviceWorker.js","Components/ButtonBar/MainButtonBar/MainButtonBar.js","assets/MSTR2020/LINUX/Lin20GeneratorComment.js","Components/ContentPages/MSTR2020/WindowsCustom/CustomerInfoAndInstallationDirect/WinCustomerInfoAndInstallationDirect.spec.js","assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressGeneratorComment.js","Components/Utils/CreateTree.js","../src sync /^/.//.*$","assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomGeneratorComment.js","assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomMaps.js","Components/ContentPages/LicenseAgreePage/LicenseAgreePage.module.css","Components/Navigation/Navigation.module.css","assets/MSTR2020/LINUX/pics/1 Customer Information.png","assets/MSTR2020/LINUX/pics/10 register as a service.png","assets/MSTR2020/LINUX/pics/2 Install Location.png","assets/MSTR2020/LINUX/pics/3 Select Components.png","assets/MSTR2020/LINUX/pics/4 Identity Server 1.png","assets/MSTR2020/LINUX/pics/5 Identity Server 2.png","assets/MSTR2020/LINUX/pics/6 Identity Server 3.png","assets/MSTR2020/LINUX/pics/7 Identity Server Manager.png","assets/MSTR2020/LINUX/pics/8 Telemetry Server.png","assets/MSTR2020/LINUX/pics/9 Topology Configure.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/1 - Customer Information.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/10 MicroStrategy Mobile Server (ASP .NET) Virtual Directory Name.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/11 MicroStrategy Subscription Portal Virtual Directory Name.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/12 MicroStrategy MDX Cube Provider Virtual Directory Name.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/13 Office URL.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/14 Office Configuration.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/15 Intelligence Setting.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/16 MicroStrategy Narrowcast Server setting.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/17 Automatically restart.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/3 Install Destination Location.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/4 Select Features.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/5 Open Source Download.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/6 Topology Configuration.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/7 Identity Configuration.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/8 Telemetry Server Configuration.png","assets/MSTR2020/WINDOWS_CUSTOM/pics/9 MicroStrategy Web (ASP .NET) setting.png","Components/FileGenerator/FileGenerator.js","assets/MSTR2020/LINUX/Lin20Maps.js"],"names":["setFormFieldValue","fieldName","stateName","props","form","setFieldsValue","getFieldValue","getOriginState","generateSummary","sumFrame","undefined","length","content","i","item","checkDependencyStates","visibleDependStates","push","key","label","printState","state","children","value","toString","stateArray","curState","RegistrationForm","nextStep","validateFieldsAndScroll","err","values","backStep","generateFormContent","formInfo","getFieldDecorator","map","section","index","Item","className","rules","required","message","whitespace","pattern","passwd","Password","onChange","e","setOriginState","target","backToLicensePage","setBasicState","pageObjects","formSections","customerInfos","this","installDirInfos","commonClasses","type","align","span","colNav","winCustomerNavHeight","join","headlineTop","validateForm","steps","deepestStep","useOs","useMode","useVersion","colContent","headlineSub","divider","orientation","colPics","buttonBar","description","src","require","alt","buttons","buttonBack","onClick","buttonNext","React","Component","CustomerInfo","Form","create","name","styleName","selectBarButtons","selectAll","unselectAll","showErrorMsg","btnBarErrorMsg","Step","Steps","setCurrentStepStatus","stepNumber","Navigation","version","mode","os","win20customPages","win20expressPages","lin20Pages","count","stepList","page","res","hasPage","dependStates","dependOnState","id","title","sidebarLabel","status","current","cur","curSteps","onChangeSiderBar","direction","size","initiateSideBar","module","exports","linState2PrefixMap","Map","linState2CommentMap","comment","licenseAgreementAccept","userRegistrationUser","userRegistrationCompany","userRegistrationCdKey","installInstance","installOperation","suiteHomeDirectory","intelligenceActive","reportServicesActive","oLAPServicesActive","distributionServicesActive","transactionServicesActive","webReporterActive","webAnalystActive","webProfessionalActive","portletsActive","gISConnectorsActive","webServicesActive","mobileServerActive","communityConnectorsActive","commandManagerActive","systemManagerActive","platformAnalyticsActive","enterpriseManagerActive","integrityManagerActive","identityServerActive","identityManagerActive","identityMobileActive","telemetryServerActive","libraryWebMobileActive","collaborationActive","certificateStoreActive","exportActive","webUniversalDeployDirectory","portletsInstallDirectory","gISConnectorsInstallDirectory","communityConnectorsInstallDirectory","webServicesInstallDirectory","mobileServerInstallDirectory","commandManagerInstallDirectory","systemManagerInstallDirectory","platformAnalyticsInstallDirectory","identityServerInstallDirectory","identityManagerInstallDirectory","identityMobileInstallDirectory","cpuCountNumber","telemetryServerClusterEnable","telemetryServerClusterLocalnode","telemetryServerClusterRemotenodes","identityServerTomcatDir","identityServerServerDBHost","identityServerOverwriteDb","identityServerServerPortOne","identityServerServerPortTwo","identityServerServerSslCert","identityServerServerSslKey","identityServerServerCaCert","identityServerGatewayPort","identityServerGatewayUseSameCert","identityServerGatewaySslCert","identityServerGatewaySslKey","identityServerGatewayCaCert","identityManagerApacheDir","identityManagerUseSameDBSetting","identityMDB","identityManagerDBInstance","identityManagerOverwriteDb","servicesRegistrationMachineEnvironment","servicesRegistrationServerHosts","registerServices","registerServicesUser","intelligenceVisible","reportServicesVisible","oLAPServicesVisible","distributionServicesVisible","transactionServicesVisible","webReporterVisible","webAnalystVisible","webProfessionalVisible","portletsVisible","gISConnectorsVisible","webServicesVisible","mobileServerVisible","communityConnectorsVisible","commandManagerVisible","integrityManagerVisible","systemManagerVisible","platformAnalyticsVisible","enterpriseManagerVisible","identityServerVisible","identityManagerVisible","identityMobileVisible","telemetryServerVisible","libraryWebMobileVisible","collaborationVisible","certificateStoreVisible","exportVisible","installOnDemandStyle","installOnDemandSourceLocation","installOnDemandUrl","installOnDemandBypassCertificateChecking","installOnDemandUser","installOnDemandPassword","winCustomState2PrefixMap","winCustomState2CommentMap","expressMode","forceReboot","logFile","hideWelcomeDialog","hideUserRegistrationDialog","userFirstName","userLastName","userEmail","companyName","licenseKey","hideLicenseDetailDialog","hideSetupExpressDialog","hideSuiteTargetDialog","commonFiles","hideComponentSelectionDialog","developerVisible","dataServerVisible","developerSelect","identityServerSelect","telemetryServerSelect","libraryWebMobileSelect","dataServerSelect","exportSelect","hideServicesRegConfigDialog","multipleMachineEnvironment","serversInCluster","hideTelemetryServerConfigDialog","telemetryServerLocalNode","telemetryServerRemoteNodes","hideIdentityConfigDialog","expressSkipIdentityConfig","caCertificateChain","serverCertificate","serverCertificateKey","serverCertificateKeyPasswordFile","smtpServer","smtpServerPort","smtpUseSSL","smtpUser","smtpUserPassword","smtpEmail","fqdn","hideOpenSourceSoftwareDialogDialog","agreeToDownloadOpenSourceSoftware","hideServerDefinitionSettingDialog","hideAnalyticsSettingDialog","HideWebVirtualDirectoryDialog","hideMobileVirtualDirectoryDialog","hidePortalVirtualDirectoryDialog","hideWebServicesVirtualDirectoryDialog","hideOfficeWebServicesURLDialog","hideMSOfficeLoadOptionsDialog","hideIntelligenceServiceAccountDialog","hideNarrowcastServiceAccountDialog","hideSummaryDialog","hideFinishDialog","winExpressState2PrefixMap","winExpressState2CommentMap","Summary","downloadTxtFile","element","document","createElement","generateWinCustomFile","generateWinExpressFile","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","winSummaryNavHeight","summaryContainer","customSummaryInfo","expressSummaryInfo","checked","ReactDOM","render","getElementById","serviceWorker","App","ResponseFileBuilder","Object","keys","includes","setState","agreeLicense","initialPage","installVersion","operateSystem","toLowerCase","InstallationOsControl","preState","win20CustomStates","win20ExpressStates","lin20States","configurationContent","win20ExpressWholeSteps","win20CustomWholeSteps","lin20WholeSteps","generateSteps","pageArray","forEach","installation","win20CustomPages","win20ExpressPages","Option","Select","licenseAgreePage","modeSelection","inputBox","classes","licenseModeSelector","style","width","defaultValue","licensePage","licenseContainer","inputBoxesContainer","operationSys","licenseVersionBotMargin","disabled","licenseAgreementContent","CustomerInfoAndInstallationDirect","sideEffects","addValue","installDir","LinCustomerNavHeight","FeatureSelection","maps","childrenMap","parentMap","dependencyMap","disSelectableMap","feature2StateMap","featureKey2StateMap","checkedKeys","showErrorWarning","forceUpdate","featureContainerStyle","featureScrollableContainer","featureScrollableContainerError","btnBarStyle","selectBtnBarError","removeErrorWarning","selectBtnBar","specialCheckingCaseHandler","nodeKey","match","set","get","specialUnCheckingCaseHandler","onCheck","info","node","eventKey","checkNode","uncheckNode","onSelectNode","selectedKeys","dirState","featureDirectory2StateMap","initialMaps","featureDependencies","getInitialCheckedKeys","featureDirectInput","linFeatureNavHeight","checkable","checkStrictly","onSelect","createTree","clickNext","clickBack","IdentityConfigStep1","apacheTomcatDir","databaseConnection","linIdentity1NavHeight","IdentityConfigurationStep1","IdentityConfigStep2","sslCertificate","linIdentity2NavHeight","IdentityConfigurationStep2","IdentityConfigStep3","checkboxChange","gatewayPort","gatewayCertificate","diffServer","linIdentity3NavHeight","IdentityConfigurationStep3","IdentityConfiguration","apacheHttpServer","dbInstance","managerDBConfig","linIdentityManagerNavHeight2","linIdentityManagerNavHeight1","IdentitySetting","RegisteringAsService","registerService","linRegServiceNavHeight","RegisteringAsServiceSetting","checkFeatureSelected","feature","generateLinuxFile","linSummaryNavHeight","summaryInfo","referencePicture","displayPics","Os","generateDisplayPics","referPic","pictures","picState","pic2StateMap","picture","img","height","marginTop","backdrop","controller","close","zoom","rotate","flip","pagination","TelemetryConfiguration","domains","remove","k","filter","add","nextKeys","concat","uuid","localNode","clusterForm","InitialKeys","getInitialKeys","initialValue","remoteServers","marginRight","linTeleNavHeight","TelemetryConfigurationSetting","TopologyConfiguration","formItems","linTopoNavHeight","TopologyConfig","defaultCheckedKeys","splice","indexOf","downloadOpenSourceSoftware","winFeatureSelectNavHeight","smptServer","authenticate","winIdentityNavHeight","IntelligenceServerConfiguration","compareToISPassword","rule","callback","iServerConfig","isAccountSetting","validator","winIntelligNavHeight","IntelligenceServerSetting","NarrowcastServerConfiguration","compareToNSPassword","nsServerConfig","nsAccountSetting","winNarrowcastNavHeight","NarrowcastServerSetting","OfficeConfiguration","webServiceURL","winOfficeNavHeight","OfficeConfigurationSetting","PortalMDXVDS","portalVDS","mdxVDS","portalSetting","mdxSetting","winPortalMDXNavHeight","PortalMDXVDSSetting","winTeleNavHeight","winTopoNavHeight","WebMobileVDS","webVDS","mobileVDS","webVDSSetting","mobileVDSSetting","winWebMobileNavHeight","WebMobileVDSSetting","isLocalhost","Boolean","window","location","hostname","register","config","navigator","process","origin","addEventListener","swUrl","fetch","then","response","contentType","headers","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","error","configure","adapter","Adapter","describe","it","wrapper","mount","setProps","expect","find","toHaveLength","TreeNode","Tree","tree","disableCheckbox","placement","generateTooltipTitle","treeNode","dependsOnList","dependedByList","tooltipProductDescription","tooltipRequireFor","tooltipRequiredBy","featureTree","parentId","mapChildren","dependencies","childrenArray","checkAndDisableAllDependencyNodes","setStateTrue","checkAllAncestorNodes","disableAllAncestorNodes","parentKey","enableDependencyNodes","isDependenciesOfCheckedNodes","enableParentNodes","setStateFalse","has","removeAllChildrenNodes","uncheckAncestorNodes","parentChildren","checkAllChildrenNodes","validateAtLeastOneChecked","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","generateValueFromArray","array","inputValue","linComments","guide"],"mappings":"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","file":"static/js/main.dcd83aa7.chunk.js","sourcesContent":[" import React from 'react'; import 'antd/dist/antd.css';\n\n\n/**\n     *Get the value of a state and set the value to a specific field in the current form page\n     * @param {string} fieldName the field you want to set\n     * @param {string} stateName the state that you want to get value from and put the value to the field\n     */\nexport const setFormFieldValue = (fieldName, stateName, props) => {\n           const { setFieldsValue, getFieldValue } = props.form;\n           if (\n               getFieldValue(fieldName) !== props.getOriginState(stateName)\n           ) {\n               setFieldsValue({\n                   [fieldName]: props.getOriginState(stateName)\n               });\n           }\n       };\n\n\n/**\n * Generate a tree-like summary list based on a specific structural data\n * The output jsx will be like \n * <ul>\n *    <li>\n *        <ul>\n *          <li>\n *              ...\n *          </li>\n *        </ul>\n *    </li>\n *    ...\n * </ul>\n * @param {Array} sumFrame an array that follow the structure to generate Summary content\n * @param {Object} props an object passed with some necessary methods \n * to communicate with states in the higher component level\n * @return {Object} an jsx object contains a tree-like structure   \n */\nexport const generateSummary = (sumFrame, props) => {\n    if (sumFrame === undefined || sumFrame === null || sumFrame.length === 0) {\n        return null;\n    }\n    let content = [];\n    for (let i = 0; i < sumFrame.length; i++) {\n        let item = sumFrame[i];\n        if (checkDependencyStates(item.visibleDependStates, props)) {\n            content.push(\n                <li key={item.label}>\n                    {' '}\n                    {item.label} {printState(item.state, props)}\n                    {generateSummary(item.children, props)}\n                </li>\n            );\n        }\n    }\n    if (content.length === 0) {\n        return null;\n    }\n\n    return <ul>{content}</ul>;\n    \n};\n\n/**\n * Get the value of a state of higher level component and output it as String type\n * @param {String} state the name of the state get value from\n * @param {Object} props an object passed with some necessary methods \n * to communicate with states in the higher component level\n * @returns {String} return the value of a state as String\n */\nconst printState = (state, props) => {\n\n    let value = props.getOriginState(state);\n    if (value === undefined || value === null) {\n        return null;\n    }\n    return typeof value === 'string' ? value : value.toString();\n};\n\n\n/**\n * Return true either the stateArray is empty or has at least one state \n * which status is true\n * @param {Array} stateArray an array that contains states to check, \n * the state must be available and are boolean type\n * @param {Object} props an object passed with some necessary methods \n * to communicate with states in the higher component level\n * @return {boolean} \n * true, if the stateArray is empty or has at least one state \n * which status is true\n * false, otherwise\n */\nconst checkDependencyStates = (stateArray, props) => {\n    if (stateArray.length === 0) {\n        return true;\n    }\n    for (let i = 0; i < stateArray.length; i++) {\n        let curState = stateArray[i];\n        if (props.getOriginState(curState) === undefined || props.getOriginState(curState) === null) {\n            return false;\n        }\n        if (props.getOriginState(curState)) {\n            return true;\n        }\n    }\n\n    return false;\n}","/**\n * @file The Component combines the input for Customer information and Installation Directory together\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\n\nimport { Form, Input, Button, Row, Col, Divider } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport 'antd/dist/antd.css';\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 0;\n\nclass RegistrationForm extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n\n    /**\n     * Change the state of initialPage to go back to License Agreement page\n     */\n    backToLicensePage = () => {\n        this.props.setBasicState('initialPage', true);\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .customerInfos) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .installDirInfos) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winCustomerNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm = {this.props.form.validateFieldsAndScroll}\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Customer Information\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections.customerInfos\n                        )}\n                        <p className={commonClasses.headlineSub}>\n                            Installation Directory\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections\n                                .installDirInfos\n                        )}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <div className={commonClasses.buttonBar}>\n                    <div className={commonClasses.description}>\n                        You are creating a configuration file for\n                        <img\n                            src={require('../../../../../assets/Icons/Windows.png')}\n                            alt=\"Operating System\"\n                        />\n                    </div>\n                    <div className={commonClasses.buttons}>\n                        <Button\n                            className={commonClasses.buttonBack}\n                            type=\"default\"\n                            onClick={this.backToLicensePage}\n                        >\n                            Back\n                        </Button>\n                        <Button\n                            className={commonClasses.buttonNext}\n                            type=\"primary\"\n                            onClick={this.nextStep}\n                        >\n                            Next\n                        </Button>\n                    </div>\n                </div>\n            </Form>\n        );\n    }\n}\n\nconst CustomerInfo = Form.create({ name: 'register' })(RegistrationForm);\n\nexport default CustomerInfo;\n","import React from 'react';\nimport commonClasses from '../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport { Button } from 'antd';\n\nconst buttonBar = props => (\n    <div>\n        <div className={props.styleName}>\n            <div className={commonClasses.selectBarButtons}>\n                <Button type=\"link\" onClick={props.selectAll}>\n                    Select All\n                </Button>\n                <Button type=\"link\" onClick={props.unselectAll}>\n                    Clear All\n                </Button>\n            </div>\n        </div>\n        {props.showErrorMsg ? (\n            <div className={commonClasses.btnBarErrorMsg}>\n                Please select at least one product.\n            </div>\n        ) : null}\n    </div>\n);\n\nexport default buttonBar;\n"," import React from 'react'; import 'antd/dist/antd.css';\nimport { Steps } from 'antd';\nimport win20customPages from '../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\nimport win20expressPages from '../../assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressPageObjects.json';\nimport lin20Pages from '../../assets/MSTR2020/LINUX/Lin20PageObjects.json';\n// import classes from './Navigation.module.css'\nimport './Navigation.css';\n\nconst { Step } = Steps;\n\n/**\n * Jump to a specific page when a sidebar node is clicked\n * by changing the 'steps' state.\n * @param {Number} curSteps the step number that the clicked sidebar node represent for\n * @param {Object} props the props from parent component\n */\nconst onChangeSiderBar = (curSteps, props) => {\n    if (props.validateForm !== undefined) {\n        props.validateForm((err, value) => {\n            if (!err) {\n                if (curSteps <= props.deepestStep) {\n                    props.setOriginState('steps', curSteps);\n                }\n            }\n        });\n    }else {\n        if (curSteps <= props.deepestStep) {\n            props.setOriginState('steps', curSteps);\n        }\n    }\n    \n};\n\n/**\n * Dynamically set the status style of each sidebar node\n * @param {Number} stepNumber the step number of current sidebar node\n * @param {Object} props   the props from parent component\n */\nconst setCurrentStepStatus = (stepNumber, props) => {\n    return props.steps === stepNumber\n        ? 'process'\n        : props.deepestStep > stepNumber\n        ? 'finish'\n        : 'wait';\n};\n\n/**\n * Generate a sidebar JSX corresponding to the\n * pages that need to be displayed\n * @param {Object} pageObjects object that contains information for each page\n * @param {Object} props the props from parent component\n * @return {Object} JSX Object that can be rendered as a sidebar\n */\nconst initiateSideBar = (pageObjects, props) => {\n    let count = 0;\n    let stepList = pageObjects.map(page => {\n        let res = null;\n        let hasPage = false; // whether to put the in the steps\n        let dependStates = page.dependOnState;\n\n        //the page should be displayed if it has no dependent product or any of its dependent product is chosen\n        if (dependStates.length === 0) {\n            hasPage = true;\n        } else {\n            for (let i = 0; i < dependStates.length; i++) {\n                if (props.getOriginState(dependStates[i])) {\n                    hasPage = true;\n                    break;\n                }\n            }\n        }\n\n        if (hasPage) {\n            res = (\n                <Step\n                    key={page.id}\n                    title={page.sidebarLabel}\n                    status={setCurrentStepStatus(count, props)}\n                    \n                />\n            );\n            count++;\n        }\n        return res;\n    });\n    return (\n        <Steps\n            current={props.steps}\n            onChange={cur => onChangeSiderBar(cur, props)} //when a node is clicked\n            direction=\"vertical\"\n            size=\"small\"\n        >\n            {stepList}\n        </Steps>\n    );\n};\n\nconst Navigation = props => {\n    let version = props.useVersion;\n    let mode = props.useMode;\n    let os = props.useOs;\n    const isWin20Custom = () => {\n        return version === '2020' && mode === 'custom' && os === 'windows';\n    };\n\n    const isWin20Express = () => {\n        return version === '2020' && mode === 'express' && os === 'windows';\n    };\n\n    const isLinux20 = () => {\n        return version === '2020' && os === 'linux';\n    };\n\n    let pageObjects = null;\n    if (isWin20Custom()) {\n        pageObjects = win20customPages;\n    } else if (isWin20Express()) {\n        pageObjects = win20expressPages;\n    } else if (isLinux20()) {\n        pageObjects = lin20Pages;\n    }\n\n    return initiateSideBar(pageObjects, props);\n};\n\nexport default Navigation;\n","module.exports = __webpack_public_path__ + \"static/media/info.e3ba6285.svg\";","import comment from './Lin20GeneratorComment';\n\n/**\n * Mapping prefix text to state\n * The value is prefix text for each variable in Option.txt file\n * The key is the state name\n * The prefix with '###' to comment out means we don't provide\n * things in the generator to modify it yet, it'll take default value.\n * Remove '###' to enable the variable and change the default value of its corresponding state\n * @type {Map}\n */\nexport const linState2PrefixMap = new Map([\n           ['licenseAgreementAccept', 'licenseAgreement.accept='],\n           //userRegistration\n           ['userRegistrationUser', 'userRegistration.user='],\n           ['userRegistrationCompany', 'userRegistration.company='],\n           ['userRegistrationCdKey', 'userRegistration.cdKey='],\n\n           ['installInstance', 'install.Instance='],\n           ['installOperation', 'install.Operation='],\n           //Destination Location\n           ['suiteHomeDirectory', 'suite.homeDirectory='],\n           ['suiteInstallDirectory', 'suite.installDirectory='],\n           ['suiteLogDirectory', 'suite.logDirectory='],\n           //Select Components\n           ['intelligenceActive', 'Intelligence.active='],\n           ['reportServicesActive', 'ReportServices.active='],\n           ['oLAPServicesActive', 'OLAPServices.active='],\n           ['distributionServicesActive', 'DistributionServices.active='],\n           ['transactionServicesActive', 'TransactionServices.active='],\n           ['webReporterActive', 'WebReporter.active='],\n           ['webAnalystActive', 'WebAnalyst.active='],\n           ['webProfessionalActive', 'WebProfessional.active='],\n           ['portletsActive', 'Portlets.active='],\n           ['gISConnectorsActive', 'GISConnectors.active='],\n           ['webServicesActive', 'WebServices.active='],\n           ['mobileServerActive', 'MobileServer.active='],\n           ['communityConnectorsActive', 'CommunityConnectors.active='],\n           ['commandManagerActive', 'CommandManager.active='],\n           ['systemManagerActive', 'SystemManager.active='],\n           ['platformAnalyticsActive', 'PlatformAnalytics.active='],\n           ['enterpriseManagerActive', 'EnterpriseManager.active='],\n           ['integrityManagerActive', 'IntegrityManager.active='],\n           ['identityServerActive', 'IdentityServer.active='],\n           ['identityManagerActive', 'IdentityManager.active='],\n           ['identityMobileActive', 'IdentityMobile.active='],\n           ['telemetryServerActive', 'TelemetryServer.active='],\n           ['libraryWebMobileActive', 'LibraryWebMobile.active='],\n           ['collaborationActive', 'Collaboration.active='],\n           ['certificateStoreActive', 'CertificateStore.active='],\n           ['exportActive', 'Export.active='],\n           //Directory Settings\n           ['webUniversalDeployDirectory', 'WebUniversal.deployDirectory='],\n           ['portletsInstallDirectory', 'Portlets.installDirectory='],\n           [\n               'gISConnectorsInstallDirectory',\n               'GISConnectors.installDirectory='\n           ],\n           [\n               'communityConnectorsInstallDirectory',\n               'CommunityConnectors.installDirectory='\n           ],\n           ['webServicesInstallDirectory', 'WebServices.installDirectory='],\n           [\n               'mobileServerInstallDirectory',\n               'MobileServer.installDirectory='\n           ],\n           [\n               'commandManagerInstallDirectory',\n               'CommandManager.installDirectory='\n           ],\n           [\n               'systemManagerInstallDirectory',\n               'SystemManager.installDirectory='\n           ],\n           [\n               'platformAnalyticsInstallDirectory',\n               'PlatformAnalytics.installDirectory='\n           ],\n           [\n               'identityServerInstallDirectory',\n               'IdentityServer.installDirectory='\n           ],\n           [\n               'identityManagerInstallDirectory',\n               'IdentityManager.installDirectory='\n           ],\n           [\n               'identityMobileInstallDirectory',\n               'IdentityMobile.installDirectory='\n           ],\n           ['cpuCountNumber', '### cpuCount.number='],\n           //Telemetry Server\n           [\n               'telemetryServerClusterEnable',\n               'TelemetryServer.cluster.enable='\n           ],\n           [\n               'telemetryServerClusterLocalnode',\n               'TelemetryServer.cluster.localnode='\n           ],\n           [\n               'telemetryServerClusterRemotenodes',\n               'TelemetryServer.cluster.remotenodes='\n           ],\n           //Identity Server\n           ['identityServerTomcatDir', 'IdentityServer.tomcatDir='],\n           ['identityServerServerDBHost', 'IdentityServer.serverDBHost='],\n           ['identityServerServerDBPort', 'IdentityServer.serverDBPort='],\n           ['identityServerServerDBUser', 'IdentityServer.serverDBUser='],\n           [\n               'identityServerServerDBPassword',\n               'IdentityServer.serverDBPassword='\n           ],\n           [\n               'identityServerServerDBInstance',\n               'IdentityServer.serverDBInstance='\n           ],\n           [\n               'identityServerServerLogDBInstance',\n               'IdentityServer.serverLogDBInstance='\n           ],\n           ['identityServerOverwriteDb', 'IdentityServer.overwriteDb='],\n           ['identityServerServerPortOne', 'IdentityServer.serverPortOne='],\n           ['identityServerServerPortTwo', 'IdentityServer.serverPortTwo='],\n           ['identityServerServerSslCert', 'IdentityServer.serverSslCert='],\n           ['identityServerServerSslKey', 'IdentityServer.serverSslKey='],\n           ['identityServerServerCaCert', 'IdentityServer.serverCaCert='],\n           ['identityServerGatewayPort', 'IdentityServer.gatewayPort='],\n           [\n               'identityServerGatewayUseSameCert',\n               'IdentityServer.gatewayUseSameCert='\n           ],\n           [\n               'identityServerGatewaySslCert',\n               'IdentityServer.gatewaySslCert='\n           ],\n           ['identityServerGatewaySslKey', 'IdentityServer.gatewaySslKey='],\n           ['identityServerGatewayCaCert', 'IdentityServer.gatewayCaCert='],\n           //identity Manager\n           ['identityManagerApacheDir', 'IdentityManager.apacheDir='],\n           ['identityManagerApacheUser', 'IdentityManager.apacheUser='],\n           ['identityManagerApacheGroup', 'IdentityManager.apacheGroup='],\n           [\n               'identityManagerUseSameDBSetting',\n               'IdentityManager.useSameDBSetting='\n           ],\n           ['identityManagerDBHost', 'IdentityManager.DBHost='],\n           ['identityManagerDBPort', 'IdentityManager.DBPort='],\n           ['identityManagerDBUser', 'IdentityManager.DBUser='],\n           ['identityManagerDBPassword', 'IdentityManager.DBPassword='],\n           ['identityManagerDBInstance', 'IdentityManager.DBInstance='],\n           ['identityManagerOverwriteDb', 'IdentityManager.overwriteDb='],\n           //Topology Configuration\n           [\n               'servicesRegistrationMachineEnvironment',\n               'ServicesRegistration.machine.environment='\n           ],\n           [\n               'servicesRegistrationServerHosts',\n               'ServicesRegistration.serverHosts='\n           ],\n           //Registering as a service\n           ['registerServices', 'RegisterServices='],\n           ['registerServicesUser', 'RegisterServices.user='],\n           ['registerServicesGroup', 'RegisterServices.group='],\n           //Product Visibility\n           ['intelligenceVisible', '### Intelligence.visible='],\n           ['reportServicesVisible', '### ReportServices.visible='],\n           ['oLAPServicesVisible', '### OLAPServices.visible='],\n           ['distributionServicesVisible', '### DistributionServices.visible='],\n           ['transactionServicesVisible', '### TransactionServices.visible='],\n           ['webReporterVisible', '### WebReporter.visible='],\n           ['webAnalystVisible', '### WebAnalyst.visible='],\n           ['webProfessionalVisible', '### WebProfessional.visible='],\n           ['portletsVisible', '### Portlets.visible='],\n           ['gISConnectorsVisible', '### GISConnectors.visible='],\n           ['webServicesVisible', '### WebServices.visible='],\n           ['mobileServerVisible', '### MobileServer.visible='],\n           ['communityConnectorsVisible', '### CommunityConnectors.visible='],\n           ['commandManagerVisible', '### CommandManager.visible='],\n           ['integrityManagerVisible', '### IntegrityManager.visible='],\n           ['systemManagerVisible', '### SystemManager.visible='],\n           ['platformAnalyticsVisible', '### PlatformAnalytics.visible='],\n           ['enterpriseManagerVisible', '### EnterpriseManager.visible='],\n           ['identityServerVisible', '### IdentityServer.visible='],\n           ['identityManagerVisible', '### IdentityManager.visible='],\n           ['identityMobileVisible', '### IdentityMobile.visible='],\n           ['telemetryServerVisible', '### TelemetryServer.visible='],\n           ['libraryWebMobileVisible', '### LibraryWebMobile.visible='],\n           ['collaborationVisible', '### Collaboration.visible='],\n           ['certificateStoreVisible', '### CertificateStore.visible='],\n           ['exportVisible', '### Export.visible='],\n\n           ['installOnDemandStyle', '### InstallOnDemand.style='],\n           [\n               'installOnDemandSourceLocation',\n               '### InstallOnDemand.sourceLocation='\n           ],\n           ['installOnDemandUrl', '### InstallOnDemand.url='],\n           [\n               'installOnDemandBypassCertificateChecking',\n               '### InstallOnDemand.bypassCertificateChecking='\n           ],\n           ['installOnDemandUser', '### InstallOnDemand.user='],\n           ['installOnDemandPassword', '### InstallOnDemand.password=']\n       ]);\n\n/**\n * Mapping the comments that should appear before each prefix text\n * The key is prefix text for each variable in Option.txt file\n * The value is the comments content\n * @type {Map}\n */\nexport const linState2CommentMap = new Map([\n           ['licenseAgreementAccept', comment.licenseAgreementAccept],\n           //userRegistration\n           ['userRegistrationUser', comment.userRegistrationUser],\n           ['userRegistrationCompany', comment.userRegistrationCompany],\n           ['userRegistrationCdKey', comment.userRegistrationCdKey],\n\n           ['installInstance', comment.installInstance],\n           ['installOperation', comment.installOperation],\n           //Destination Location\n           ['suiteHomeDirectory', comment.suiteHomeDirectory],\n           ['suiteInstallDirectory', ''],\n           ['suiteLogDirectory', ''],\n           //Select Components\n           ['intelligenceActive', comment.intelligenceActive],\n           ['reportServicesActive', comment.reportServicesActive],\n           ['oLAPServicesActive', comment.oLAPServicesActive],\n           ['distributionServicesActive', comment.distributionServicesActive],\n           ['transactionServicesActive', comment.transactionServicesActive],\n\n           ['webReporterActive', comment.webReporterActive],\n           ['webAnalystActive', comment.webAnalystActive],\n           ['webProfessionalActive', comment.webProfessionalActive],\n           ['portletsActive', comment.portletsActive],\n           ['gISConnectorsActive', comment.gISConnectorsActive],\n\n           ['webServicesActive', comment.webServicesActive],\n           ['mobileServerActive', comment.mobileServerActive],\n           ['communityConnectorsActive', comment.communityConnectorsActive],\n           ['commandManagerActive', comment.commandManagerActive],\n           ['systemManagerActive', comment.systemManagerActive],\n           ['platformAnalyticsActive', comment.platformAnalyticsActive],\n           ['enterpriseManagerActive', comment.enterpriseManagerActive],\n           ['integrityManagerActive', comment.integrityManagerActive],\n           ['identityServerActive', comment.identityServerActive],\n           ['identityManagerActive', comment.identityManagerActive],\n           ['identityMobileActive', comment.identityMobileActive],\n\n           ['telemetryServerActive', comment.telemetryServerActive],\n           ['libraryWebMobileActive', comment.libraryWebMobileActive],\n           ['collaborationActive', comment.collaborationActive],\n           ['certificateStoreActive', comment.certificateStoreActive],\n           ['exportActive', comment.exportActive],\n           //Directory Settings\n           ['webUniversalDeployDirectory', comment.webUniversalDeployDirectory],\n           ['portletsInstallDirectory', comment.portletsInstallDirectory],\n           [\n               'gISConnectorsInstallDirectory',\n               comment.gISConnectorsInstallDirectory\n           ],\n           [\n               'communityConnectorsInstallDirectory',\n               comment.communityConnectorsInstallDirectory\n           ],\n           ['webServicesInstallDirectory', comment.webServicesInstallDirectory],\n           [\n               'mobileServerInstallDirectory',\n               comment.mobileServerInstallDirectory\n           ],\n           [\n               'commandManagerInstallDirectory',\n               comment.commandManagerInstallDirectory\n           ],\n           [\n               'systemManagerInstallDirectory',\n               comment.systemManagerInstallDirectory\n           ],\n           [\n               'platformAnalyticsInstallDirectory',\n               comment.platformAnalyticsInstallDirectory\n           ],\n           [\n               'identityServerInstallDirectory',\n               comment.identityServerInstallDirectory\n           ],\n           [\n               'identityManagerInstallDirectory',\n               comment.identityManagerInstallDirectory\n           ],\n           [\n               'identityMobileInstallDirectory',\n               comment.identityMobileInstallDirectory\n           ],\n           ['cpuCountNumber', comment.cpuCountNumber],\n           //Telemetry Server\n           [\n               'telemetryServerClusterEnable',\n               comment.telemetryServerClusterEnable\n           ],\n           [\n               'telemetryServerClusterLocalnode',\n               comment.telemetryServerClusterLocalnode\n           ],\n           [\n               'telemetryServerClusterRemotenodes',\n               comment.telemetryServerClusterRemotenodes\n           ],\n           //Identity Server\n           ['identityServerTomcatDir', comment.identityServerTomcatDir],\n           ['identityServerServerDBHost', comment.identityServerServerDBHost],\n           ['identityServerServerDBPort', ''],\n           ['identityServerServerDBUser', ''],\n           ['identityServerServerDBPassword', ''],\n           ['identityServerServerDBInstance', ''],\n           ['identityServerServerLogDBInstance', ''],\n           ['identityServerOverwriteDb', comment.identityServerOverwriteDb],\n           ['identityServerServerPortOne', comment.identityServerServerPortOne],\n           ['identityServerServerPortTwo', comment.identityServerServerPortTwo],\n           ['identityServerServerSslCert', comment.identityServerServerSslCert],\n           ['identityServerServerSslKey', comment.identityServerServerSslKey],\n           ['identityServerServerCaCert', comment.identityServerServerCaCert],\n           ['identityServerGatewayPort', comment.identityServerGatewayPort],\n           [\n               'identityServerGatewayUseSameCert',\n               comment.identityServerGatewayUseSameCert\n           ],\n           [\n               'identityServerGatewaySslCert',\n               comment.identityServerGatewaySslCert\n           ],\n           ['identityServerGatewaySslKey', comment.identityServerGatewaySslKey],\n           ['identityServerGatewayCaCert', comment.identityServerGatewayCaCert],\n           //identity Manager\n\n           ['identityManagerApacheDir', comment.identityManagerApacheDir],\n           ['identityManagerApacheUser', ''],\n           ['identityManagerApacheGroup', ''],\n           [\n               'identityManagerUseSameDBSetting',\n               comment.identityManagerUseSameDBSetting\n           ],\n           ['identityManagerDBHost', [comment.identityMDB]],\n           ['identityManagerDBPort', ''],\n           ['identityManagerDBUser', ''],\n           ['identityManagerDBPassword', ''],\n           ['identityManagerDBInstance', comment.identityManagerDBInstance],\n           ['identityManagerOverwriteDb', comment.identityManagerOverwriteDb],\n           //Topology Configuration\n           [\n               'servicesRegistrationMachineEnvironment',\n               comment.servicesRegistrationMachineEnvironment\n           ],\n           [\n               'servicesRegistrationServerHosts',\n               comment.servicesRegistrationServerHosts\n           ],\n           //Registering as a service\n           ['registerServices', comment.registerServices],\n           ['registerServicesUser', comment.registerServicesUser],\n           ['registerServicesGroup', ''],\n           ['intelligenceVisible', comment.intelligenceVisible],\n           ['reportServicesVisible', comment.reportServicesVisible],\n           ['oLAPServicesVisible', comment.oLAPServicesVisible],\n           ['distributionServicesVisible', comment.distributionServicesVisible],\n           ['transactionServicesVisible', comment.transactionServicesVisible],\n           ['webReporterVisible', comment.webReporterVisible],\n           ['webAnalystVisible', comment.webAnalystVisible],\n           ['webProfessionalVisible', comment.webProfessionalVisible],\n           ['portletsVisible', comment.portletsVisible],\n           ['gISConnectorsVisible', comment.gISConnectorsVisible],\n           ['webServicesVisible', comment.webServicesVisible],\n           ['mobileServerVisible', comment.mobileServerVisible],\n           ['communityConnectorsVisible', comment.communityConnectorsVisible],\n           ['commandManagerVisible', comment.commandManagerVisible],\n           ['integrityManagerVisible', comment.integrityManagerVisible],\n           ['systemManagerVisible', comment.systemManagerVisible],\n           ['platformAnalyticsVisible', comment.platformAnalyticsVisible],\n           ['enterpriseManagerVisible', comment.enterpriseManagerVisible],\n           ['identityServerVisible', comment.identityServerVisible],\n           ['identityManagerVisible', comment.identityManagerVisible],\n           ['identityMobileVisible', comment.identityMobileVisible],\n           ['telemetryServerVisible', comment.telemetryServerVisible],\n           ['libraryWebMobileVisible', comment.libraryWebMobileVisible],\n           ['collaborationVisible', comment.collaborationVisible],\n           ['certificateStoreVisible', comment.certificateStoreVisible],\n           ['exportVisible', comment.exportVisible],\n           ['installOnDemandStyle', comment.installOnDemandStyle],\n           [\n               'installOnDemandSourceLocation',\n               comment.installOnDemandSourceLocation\n           ],\n           ['installOnDemandUrl', comment.installOnDemandUrl],\n           [\n               'installOnDemandBypassCertificateChecking',\n               comment.installOnDemandBypassCertificateChecking\n           ],\n           ['installOnDemandUser', comment.installOnDemandUser],\n           ['installOnDemandPassword', comment.installOnDemandPassword]\n       ]);\n","import comment from './Win20CustomGeneratorComment';\n\n/**\n * Mapping prefix text to state\n * The key is prefix text for each variable in Option.txt file\n * The value is the state name\n * @type {Map}\n */\nexport const winCustomState2PrefixMap = new Map([\n    ['expressMode', 'ExpressMode='],\n    ['propertiesFilesOverwrite', 'PropertiesFilesOverwrite='],\n    ['enableTracing', 'EnableTracing='],\n    ['hideAllDialogs', 'HideAllDialogs='],\n\n    ['forceReboot', 'ForceReboot='],\n    ['preventReboot', 'PreventReboot='],\n    ['checkTCPIP', 'CheckTCPIP='],\n    ['checkIIS', 'CheckIIS='],\n    ['createShortcuts', 'CreateShortcuts='],\n    ['checkRenameOperations', 'CheckRenameOperations='],\n    ['analyticsOverwrite', 'AnalyticsOverwrite='],\n    ['tutDeliveryOverwrite', 'TutDeliveryOverwrite='],\n    ['backupFiles', 'BackupFiles='],\n    ['runConfigWizard', 'RunConfigWizard='],\n    ['stopAllServices', 'StopAllServices='],\n    ['stopIIS', 'StopIIS='],\n    ['enableASPServices', 'EnableASPServices='],\n    ['enableASPNETServices', 'EnableASPNETServices='],\n    ['showWelcomeScreen', 'ShowWelcomeScreen='],\n    ['enterpriseManagerOverwrite', 'EnterpriseManagerOverwrite='],\n\n    ['logFile', 'LogFile='],\n\n    ['hideWelComeDialog', 'HideDialog='],\n    ['removeAll', 'RemoveAll='],\n\n    ['hideUserRegistrationDialog', 'HideDialog='],\n    ['userFirstName', 'UserFirstName='],\n    ['userLastName', 'UserLastName='],\n    ['userEmail', 'UserEmail='],\n    ['companyName', 'CompanyName='],\n    ['licenseKey', 'LicenseKey='],\n\n    ['hideLicenseDetailDialog', 'HideDialog='],\n\n    ['hideSetupExpressDialog', 'HideDialog='],\n\n    ['hideSuiteTargetDialog', 'HideDialog='],\n    ['targetDirectory', 'TargetDirectory='],\n    ['commonFiles', 'COMMONFILES='],\n\n    ['hideComponentSelectionDialog', 'HideDialog='],\n    ['developerVisible', 'DeveloperVisible='],\n    ['analystVisible', 'AnalystVisible='],\n    ['architectVisible', 'ArchitectVisible='],\n    ['serverAdminVisible', 'ServerAdminVisible='],\n    ['functionPluginVisible', 'FunctionPluginVisible='],\n    ['commandManagerVisible', 'CommandManagerVisible='],\n    ['enterpriseManagerVisible', 'EnterpriseManagerVisible='],\n    ['objectManagerVisible', 'ObjectManagerVisible='],\n    ['integrityManagerVisible', 'IntegrityManagerVisible='],\n    ['intelligenceVisible', 'IntelligenceVisible='],\n    ['intelligenceOLAPServicesVisible', 'IntelligenceOLAPServicesVisible='],\n    ['intelligenceReportServicesVisible', 'IntelligenceReportServicesVisible='],\n    [\n        'intelligenceDistributionServicesVisible',\n        'IntelligenceDistributionServicesVisible='\n    ],\n    [\n        'intelligenceTransactionServicesVisible',\n        'IntelligenceTransactionServicesVisible='\n    ],\n    ['webAnalystVisible', 'WebAnalystVisible='],\n    ['webProfessionalVisible', 'WebProfessionalVisible='],\n    ['webReporterVisible', 'WebReporterVisible='],\n    ['webServerASPNETVisible', 'WebServerASPNETVisible='],\n    ['webServerJSPVisible', 'WebServerJSPVisible='],\n    ['webServicesASPNETVisible', 'WebServicesASPNETVisible='],\n    ['webServicesJSPVisible', 'WebServicesJSPVisible='],\n    ['officeVisible', 'OfficeVisible='],\n    ['mobileVisible', 'MobileVisible='],\n    ['mobileClientVisible', 'MobileClientVisible='],\n    ['mobileServerASPVisible', 'MobileServerASPVisible='],\n    ['mobileServerJSPVisible', 'MobileServerJSPVisible='],\n    ['analyticsModulesVisible', 'AnalyticsModulesVisible='],\n    ['ncsAdminVisible', 'NCSAdminVisible='],\n    ['deliveryEngineVisible', 'DeliveryEngineVisible='],\n    ['subscriptionPortalVisible', 'SubscriptionPortalVisible='],\n    ['tutorialDeliveryInstallVisible', 'TutorialDeliveryInstallVisible='],\n    ['tutorialDeliveryConfigureVisible', 'TutorialDeliveryConfigureVisible='],\n    ['sequeLinkVisible', 'SequeLinkVisible='],\n    ['portletsVisible', 'PortletsVisible='],\n    ['mdxCubeProviderVisible', 'MDXCubeProviderVisible='],\n    ['gisConnectorsVisible', 'GISConnectorsVisible='],\n    ['systemManagerVisible', 'SystemManagerVisible='],\n    ['identityServerVisible', 'IdentityServerVisible='],\n    ['identityManagerVisible', 'IdentityManagerVisible='],\n    ['usherProfessionalVisible', 'UsherProfessionalVisible='],\n    ['telemetryServerVisible', 'TelemetryServerVisible='],\n    ['tomcatVisible', 'TomcatVisible='],\n    ['mySQLVisible', 'MySQLVisible='],\n    ['libraryWebMobileVisible', 'LibraryWebMobileVisible='],\n    ['collaborationVisible', 'CollaborationVisible='],\n    ['dataServerVisible', 'DataServerVisible='],\n    ['communityConnectorsVisible', 'CommunityConnectorsVisible='],\n    ['platformAnalyticsVisible', 'PlatformAnalyticsVisible='],\n    ['certificateStoreVisible', 'CertificateStoreVisible='],\n    ['exportVisible', 'ExportVisible='],\n    ['developerSelect', 'DeveloperSelect='],\n    ['analystSelect', 'AnalystSelect='],\n    ['architectSelect', 'ArchitectSelect='],\n    ['serverAdminSelect', 'ServerAdminSelect='],\n    ['functionPluginSelect', 'FunctionPluginSelect='],\n    ['commandManagerSelect', 'CommandManagerSelect='],\n    ['enterpriseManagerSelect', 'EnterpriseManagerSelect='],\n    ['objectManagerSelect', 'ObjectManagerSelect='],\n    ['integrityManagerSelect', 'IntegrityManagerSelect='],\n    ['intelligenceSelect', 'IntelligenceSelect='],\n    ['intelligenceOLAPServicesSelect', 'IntelligenceOLAPServicesSelect='],\n    ['intelligenceReportServicesSelect', 'IntelligenceReportServicesSelect='],\n    [\n        'intelligenceDistributionServicesSelect',\n        'IntelligenceDistributionServicesSelect='\n    ],\n    [\n        'intelligenceTransactionServicesSelect',\n        'IntelligenceTransactionServicesSelect='\n    ],\n    ['webAnalystSelect', 'WebAnalystSelect='],\n    ['webProfessionalSelect', 'WebProfessionalSelect='],\n    ['webReporterSelect', 'WebReporterSelect='],\n    ['webServerASPNETSelect', 'WebServerASPNETSelect='],\n    ['webServerJSPSelect', 'WebServerJSPSelect='],\n    ['webServicesASPNETSelect', 'WebServicesASPNETSelect='],\n    ['webServicesJSPSelect', 'WebServicesJSPSelect='],\n    ['officeSelect', 'OfficeSelect='],\n    ['mobileSelect', 'MobileSelect='],\n    ['mobileClientSelect', 'MobileClientSelect='],\n    ['mobileServerASPSelect', 'MobileServerASPSelect='],\n    ['mobileServerJSPSelect', 'MobileServerJSPSelect='],\n    ['analyticsModulesSelect', 'AnalyticsModulesSelect='],\n    ['ncsAdminSelect', 'NCSAdminSelect='],\n    ['deliveryEngineSelect', 'DeliveryEngineSelect='],\n    ['subscriptionPortalSelect', 'SubscriptionPortalSelect='],\n    ['tutorialDeliveryInstallSelect', 'TutorialDeliveryInstallSelect='],\n    ['tutorialDeliveryConfigureSelect', 'TutorialDeliveryConfigureSelect='],\n    ['sequeLinkSelect', 'SequeLinkSelect='],\n    ['portletsSelect', 'PortletsSelect='],\n    ['mdxCubeProviderSelect', 'MDXCubeProviderSelect='],\n    ['gisConnectorsSelect', 'GISConnectorsSelect='],\n    ['systemManagerSelect', 'SystemManagerSelect='],\n    ['identityServerSelect', 'IdentityServerSelect='],\n    ['identityManagerSelect', 'IdentityManagerSelect='],\n    ['usherProfessionalSelect', 'UsherProfessionalSelect='],\n    ['telemetryServerSelect', 'TelemetryServerSelect='],\n    ['tomcatSelect', 'TomcatSelect='],\n    ['mySQLSelect', 'MySQLSelect='],\n    ['libraryWebMobileSelect', 'LibraryWebMobileSelect='],\n    ['collaborationSelect', 'CollaborationSelect='],\n    ['dataServerSelect', 'DataServerSelect='],\n    ['communityConnectorsSelect', 'CommunityConnectorsSelect='],\n    ['platformAnalyticsSelect', 'PlatformAnalyticsSelect='],\n    ['certificateStoreSelect', 'CertificateStoreSelect='],\n    ['exportSelect', 'ExportSelect='],\n\n    ['hideServicesRegConfigDialog', 'HideDialog='],\n    ['multipleMachineEnvironment', 'MultipleMachineEnvironment='],\n    ['serversInCluster', 'ServersInCluster='],\n\n    ['hideTelemetryServerConfigDialog', 'HideDialog='],\n    ['telemetryServerCluster', 'TelemetryServerCluster='],\n    ['telemetryServerLocalNode', 'TelemetryServerLocalNode='],\n    ['telemetryServerRemoteNodes', 'TelemetryServerRemoteNodes='],\n\n    ['hideIdentityConfigDialog', 'HideDialog='],\n    ['expressSkipIdentityConfig', 'ExpressSkipIdentityConfig='],\n    ['caCertificateChain', 'CACertificateChain='],\n    ['serverCertificate', 'ServerCertificate='],\n    ['serverCertificateKey', 'ServerCertificateKey='],\n    ['serverCertificateKeyPasswordFile', 'ServerCertificateKeyPasswordFile='],\n    ['smtpServer', 'SMTPServer='],\n    ['smtpServerPort', 'SMTPServerPort='],\n    ['smtpUseSSL', 'SMTPUseSSL='],\n    ['smtpUser', 'SMTPUser='],\n    ['smtpUserPassword', 'SMTPUserPassword='],\n    ['smtpEmail', 'SMTPEmail='],\n    ['fqdn', 'FQDN='],\n\n    ['hideOpenSourceSoftwareDialogDialog', 'HideDialog='],\n    ['agreeToDownloadOpenSourceSoftware', 'AgreeToDownloadOpenSourceSoftware='],\n\n    ['hideServerDefinitionSettingDialog', 'HideDialog='],\n    ['overwriteServerDefinition', 'OverwriteServerDefinition='],\n\n    ['hideAnalyticsSettingDialog', 'HideDialog='],\n    ['overwriteDSN', 'OverwriteDSN='],\n\n    ['hideWebVirtualDirectoryDialog', 'HideDialog='],\n    ['webVirtualDirectory', 'VirtualDirectory='],\n    ['reconfigureWebVirtualDirectory', 'ReconfigureVirtualDirectory='],\n\n    ['hideMobileVirtualDirectoryDialog', 'HideDialog='],\n    ['mobileVirtualDirectory', 'VirtualDirectory='],\n    ['reconfigureMobileVirtualDirectory', 'ReconfigureVirtualDirectory='],\n\n    ['hidePortalVirtualDirectoryDialog', 'HideDialog='],\n    ['portalVirtualDirectory', 'VirtualDirectory='],\n    ['reconfigurePortalVirtualDirectory', 'ReconfigureVirtualDirectory='],\n\n    ['hideWebServicesVirtualDirectoryDialog', 'HideDialog='],\n    ['mdxVirtualDirectory', 'VirtualDirectory='],\n    ['reconfigureMDXVirtualDirectory', 'ReconfigureVirtualDirectory='],\n\n    ['hideOfficeWebServicesURLDialog', 'HideDialog='],\n    ['allowBlankURL', 'AllowBlankURL='],\n    ['officeURL', 'URL='],\n\n    ['hideMSOfficeLoadOptionsDialog', 'HideDialog='],\n    ['configureExcel', 'ConfigureExcel='],\n    ['configurePowerpoint', 'ConfigurePowerpoint='],\n    ['configureWord', 'ConfigureWord='],\n\n    ['hideIntelligenceServiceAccountDialog', 'HideDialog='],\n    ['isSkipAccountSetting', 'SkipAccountSetting='],\n    ['isLogin', 'Login='],\n    ['isPassword', 'Password='],\n    ['isDomain', 'Domain='],\n    ['serviceStartUp', 'ServiceStartUp='],\n\n    ['hideNarrowcastServiceAccountDialog', 'HideDialog='],\n    ['nsSkipAccountSetting', 'SkipAccountSetting='],\n    ['nsLogin', 'Login='],\n    ['nsPassword', 'Password='],\n    ['nsDomain', 'Domain='],\n\n    ['hideSummaryDialog', 'HideDialog='],\n\n    ['hideFinishDialog', 'HideDialog=']\n]);\n\n/**\n * Mapping the comments that should appear before each prefix text\n * The key is prefix text for each variable in Response.ini file\n * The value is the comments content\n * @type {Map}\n */\nexport const winCustomState2CommentMap = new Map([\n    ['expressMode', comment.expressMode],\n    ['propertiesFilesOverwrite', ''],\n    ['enableTracing', ''],\n    ['hideAllDialogs', ''],\n\n    ['forceReboot', comment.forceReboot],\n    ['preventReboot', ''],\n    ['checkTCPIP', ''],\n    ['checkIIS', ''],\n    ['createShortcuts', ''],\n    ['checkRenameOperations', ''],\n    ['analyticsOverwrite', ''],\n    ['tutDeliveryOverwrite', ''],\n    ['backupFiles', ''],\n    ['runConfigWizard', ''],\n    ['stopAllServices', ''],\n    ['stopIIS', ''],\n    ['enableASPServices', ''],\n    ['enableASPNETServices', ''],\n    ['showWelcomeScreen', ''],\n    ['enterpriseManagerOverwrite', ''],\n\n    ['logFile', comment.logFile],\n\n    ['hideWelComeDialog', comment.hideWelcomeDialog],\n    ['removeAll', ''],\n\n    ['hideUserRegistrationDialog', comment.hideUserRegistrationDialog],\n    ['userFirstName', comment.userFirstName],\n    ['userLastName', comment.userLastName],\n    ['userEmail', comment.userEmail],\n    ['companyName', comment.companyName],\n    ['licenseKey', comment.licenseKey],\n\n    ['hideLicenseDetailDialog', comment.hideLicenseDetailDialog],\n\n    ['hideSetupExpressDialog', comment.hideSetupExpressDialog],\n\n    ['hideSuiteTargetDialog', comment.hideSuiteTargetDialog],\n    ['targetDirectory', ''],\n    ['commonFiles', comment.commonFiles],\n\n    ['hideComponentSelectionDialog', comment.hideComponentSelectionDialog],\n    ['developerVisible', comment.developerVisible],\n    ['analystVisible', ''],\n    ['architectVisible', ''],\n    ['serverAdminVisible', ''],\n    ['functionPluginVisible', ''],\n    ['commandManagerVisible', ''],\n    ['enterpriseManagerVisible', ''],\n    ['objectManagerVisible', ''],\n    ['integrityManagerVisible', ''],\n    ['intelligenceVisible', ''],\n    ['intelligenceOLAPServicesVisible', ''],\n    ['intelligenceReportServicesVisible', ''],\n    ['intelligenceDistributionServicesVisible', ''],\n    ['intelligenceTransactionServicesVisible', ''],\n    ['webAnalystVisible', ''],\n    ['webProfessionalVisible', ''],\n    ['webReporterVisible', ''],\n    ['webServerASPNETVisible', ''],\n    ['webServerJSPVisible', ''],\n    ['webServicesASPNETVisible', ''],\n    ['webServicesJSPVisible', ''],\n    ['officeVisible', ''],\n    ['mobileVisible', ''],\n    ['mobileClientVisible', ''],\n    ['mobileServerASPVisible', ''],\n    ['mobileServerJSPVisible', ''],\n    ['analyticsModulesVisible', ''],\n    ['ncsAdminVisible', ''],\n    ['deliveryEngineVisible', ''],\n    ['subscriptionPortalVisible', ''],\n    ['tutorialDeliveryInstallVisible', ''],\n    ['tutorialDeliveryConfigureVisible', ''],\n    ['sequeLinkVisible', ''],\n    ['portletsVisible', ''],\n    ['mdxCubeProviderVisible', ''],\n    ['gisConnectorsVisible', ''],\n    ['systemManagerVisible', ''],\n    ['identityServerVisible', comment.identityServerVisible],\n    ['identityManagerVisible', ''],\n    ['usherProfessionalVisible', ''],\n    ['telemetryServerVisible', comment.telemetryServerVisible],\n    ['tomcatVisible', ''],\n    ['mySQLVisible', ''],\n    ['libraryWebMobileVisible', comment.libraryWebMobileVisible],\n    ['collaborationVisible', ''],\n    ['dataServerVisible', comment.dataServerVisible],\n    ['communityConnectorsVisible', ''],\n    ['platformAnalyticsVisible', ''],\n    ['certificateStoreVisible', ''],\n    ['exportVisible', comment.exportVisible],\n    ['developerSelect', comment.developerSelect],\n    ['analystSelect', ''],\n    ['architectSelect', ''],\n    ['serverAdminSelect', ''],\n    ['functionPluginSelect', ''],\n    ['commandManagerSelect', ''],\n    ['enterpriseManagerSelect', ''],\n    ['objectManagerSelect', ''],\n    ['integrityManagerSelect', ''],\n    ['intelligenceSelect', ''],\n    ['intelligenceOLAPServicesSelect', ''],\n    ['intelligenceReportServicesSelect', ''],\n    ['intelligenceDistributionServicesSelect', ''],\n    ['intelligenceTransactionServicesSelect', ''],\n    ['webAnalystSelect', ''],\n    ['webProfessionalSelect', ''],\n    ['webReporterSelect', ''],\n    ['webServerASPNETSelect', ''],\n    ['webServerJSPSelect', ''],\n    ['webServicesASPNETSelect', ''],\n    ['webServicesJSPSelect', ''],\n    ['officeSelect', ''],\n    ['mobileSelect', ''],\n    ['mobileClientSelect', ''],\n    ['mobileServerASPSelect', ''],\n    ['mobileServerJSPSelect', ''],\n    ['analyticsModulesSelect', ''],\n    ['ncsAdminSelect', ''],\n    ['deliveryEngineSelect', ''],\n    ['subscriptionPortalSelect', ''],\n    ['tutorialDeliveryInstallSelect', ''],\n    ['tutorialDeliveryConfigureSelect', ''],\n    ['sequeLinkSelect', ''],\n    ['portletsSelect', ''],\n    ['mdxCubeProviderSelect', ''],\n    ['gisConnectorsSelect', ''],\n    ['systemManagerSelect', ''],\n    ['identityServerSelect', comment.identityServerSelect],\n    ['identityManagerSelect', ''],\n    ['usherProfessionalSelect', ''],\n    ['telemetryServerSelect', comment.telemetryServerSelect],\n    ['tomcatSelect', ''],\n    ['mySQLSelect', ''],\n    ['libraryWebMobileSelect', comment.libraryWebMobileSelect],\n    ['collaborationSelect', ''],\n    ['dataServerSelect', comment.dataServerSelect],\n    ['communityConnectorsSelect', ''],\n    ['platformAnalyticsSelect', ''],\n    ['certificateStoreSelect', ''],\n    ['exportSelect', comment.exportSelect],\n\n    ['hideServicesRegConfigDialog', comment.hideServicesRegConfigDialog],\n    ['multipleMachineEnvironment', comment.multipleMachineEnvironment],\n    ['serversInCluster', comment.serversInCluster],\n\n    [\n        'hideTelemetryServerConfigDialog',\n        comment.hideTelemetryServerConfigDialog\n    ],\n    ['telemetryServerCluster', ''],\n    ['telemetryServerLocalNode', comment.telemetryServerLocalNode],\n    ['telemetryServerRemoteNodes', comment.telemetryServerRemoteNodes],\n\n    ['hideIdentityConfigDialog', comment.hideIdentityConfigDialog],\n    ['expressSkipIdentityConfig', comment.expressSkipIdentityConfig],\n    ['caCertificateChain', comment.caCertificateChain],\n    ['serverCertificate', comment.serverCertificate],\n    ['serverCertificateKey', comment.serverCertificateKey],\n    [\n        'serverCertificateKeyPasswordFile',\n        comment.serverCertificateKeyPasswordFile\n    ],\n    ['smtpServer', comment.smtpServer],\n    ['smtpServerPort', comment.smtpServerPort],\n    ['smtpUseSSL', comment.smtpUseSSL],\n    ['smtpUser', comment.smtpUser],\n    ['smtpUserPassword', comment.smtpUserPassword],\n    ['smtpEmail', comment.smtpEmail],\n    ['fqdn', comment.fqdn],\n\n    [\n        'hideOpenSourceSoftwareDialogDialog',\n        comment.hideOpenSourceSoftwareDialogDialog\n    ],\n    [\n        'agreeToDownloadOpenSourceSoftware',\n        comment.agreeToDownloadOpenSourceSoftware\n    ],\n\n    [\n        'hideServerDefinitionSettingDialog',\n        comment.hideServerDefinitionSettingDialog\n    ],\n    ['overwriteServerDefinition', ''],\n\n    ['hideAnalyticsSettingDialog', comment.hideAnalyticsSettingDialog],\n    ['overwriteDSN', ''],\n\n    ['hideWebVirtualDirectoryDialog', comment.HideWebVirtualDirectoryDialog],\n    ['webVirtualDirectory', ''],\n    ['reconfigureWebVirtualDirectory', ''],\n\n    [\n        'hideMobileVirtualDirectoryDialog',\n        comment.hideMobileVirtualDirectoryDialog\n    ],\n    ['mobileVirtualDirectory', ''],\n    ['reconfigureMobileVirtualDirectory', ''],\n\n    [\n        'hidePortalVirtualDirectoryDialog',\n        comment.hidePortalVirtualDirectoryDialog\n    ],\n    ['portalVirtualDirectory', ''],\n    ['reconfigurePortalVirtualDirectory', ''],\n\n    [\n        'hideWebServicesVirtualDirectoryDialog',\n        comment.hideWebServicesVirtualDirectoryDialog\n    ],\n    ['mdxVirtualDirectory', ''],\n    ['reconfigureMDXVirtualDirectory', ''],\n\n    ['hideOfficeWebServicesURLDialog', comment.hideOfficeWebServicesURLDialog],\n    ['allowBlankURL', ''],\n    ['officeURL', ''],\n\n    ['hideMSOfficeLoadOptionsDialog', comment.hideMSOfficeLoadOptionsDialog],\n    ['configureExcel', ''],\n    ['configurePowerpoint', ''],\n    ['configureWord', ''],\n\n    [\n        'hideIntelligenceServiceAccountDialog',\n        comment.hideIntelligenceServiceAccountDialog\n    ],\n    ['isSkipAccountSetting', ''],\n    ['isLogin', ''],\n    ['isPassword', ''],\n    ['isDomain', ''],\n    ['serviceStartUp', ''],\n\n    [\n        'hideNarrowcastServiceAccountDialog',\n        comment.hideNarrowcastServiceAccountDialog\n    ],\n    ['nsSkipAccountSetting', ''],\n    ['nsLogin', ''],\n    ['nsPassword', ''],\n    ['nsDomain', ''],\n\n    ['hideSummaryDialog', comment.hideSummaryDialog],\n\n    ['hideFinishDialog', comment.hideFinishDialog]\n]);\n","import comment from './Win20ExpressGeneratorComment';\n\n\n/**\n * Mapping prefix text to state\n * The key is prefix text for each variable in Option.txt file\n * The value is the state name\n * @type {Map}\n */\n\n export const winExpressState2PrefixMap = new Map([\n            ['expressMode', 'ExpressMode='],\n            ['hideAllDialogs', 'HideAllDialogs='],\n            ['forceReboot', 'ForceReboot='],\n            ['checkIIS', 'CheckIIS='],\n            ['runConfigWizard', 'RunConfigWizard='],\n            ['stopAllServices', 'StopAllServices='],\n            ['stopIIS', 'StopIIS='],\n            ['showWelcomeScreen', 'ShowWelcomeScreen='],\n\n            ['logFile', 'LogFile='],\n            ['hideSuiteTargetDialog ', 'HideDialog='],\n            ['targetDirectory', 'TargetDirectory='],\n\n            ['commonFiles', 'CommonFiles='],\n\n            ['hideWelcomeDialog', 'HideDialog='],\n            ['removeAll', 'RemoveAll='],\n\n            ['hideUserRegistrationDialog', 'HideDialog='],\n            ['userFirstName', 'UserFirstName='],\n            ['userLastName', 'UserLastName='],\n            ['userEmail', 'UserEmail='],\n            ['companyName', 'CompanyName='],\n            ['licenseKey', 'LicenseKey='],\n\n            ['hideLicenseDetailDialog', 'HideDialog='],\n\n            ['hideSetupExpressDialog', 'HideDialog='],\n\n            ['hideOpenSourceSoftwareDialogDialog', 'HideDialog='],\n\n            ['hideSummaryDialog', 'HideDialog='],\n\n            ['hideFinishDialog', 'HideDialog=']\n        ]);\n\n\n/**\n * Mapping the comments that should appear before each prefix text\n * The key is prefix text for each variable in Response.ini file\n * The value is the comments content\n * @type {Map}\n */\nexport const winExpressState2CommentMap = new Map([\n           ['expressMode', comment.expressMode],\n           ['hideAllDialogs', ''],\n           ['forceReboot', comment.forceReboot],\n           ['checkIIS', ''],\n           ['runConfigWizard', ''],\n           ['stopAllServices', ''],\n           ['stopIIS', ''],\n           ['showWelcomeScreen', ''],\n\n           ['logFile', comment.logFile],\n           ['hideSuiteTargetDialog ', comment.hideSuiteTargetDialog],\n           ['targetDirectory', ''],\n\n           ['commonFiles', comment.commonFiles],\n\n           ['hideWelcomeDialog', comment.hideWelcomeDialog],\n           ['removeAll', ''],\n\n           ['hideUserRegistrationDialog', comment.hideUserRegistrationDialog],\n           ['userFirstName', comment.userFirstName],\n           ['userLastName', comment.userLastName],\n           ['userEmail', comment.userEmail],\n           ['companyName', comment.companyName],\n           ['licenseKey', comment.licenseKey],\n\n           ['hideLicenseDetailDialog', comment.hideLicenseDetailDialog],\n\n           ['hideSetupExpressDialog', comment.hideSetupExpressDialog],\n\n           [\n               'hideOpenSourceSoftwareDialogDialog',\n               comment.hideOpenSourceSoftwareDialogDialog\n           ],\n\n           ['hideSummaryDialog', comment.hideSummaryDialog],\n\n           ['hideFinishDialog', comment.hideFinishDialog]\n       ]);","/**\n * @file The Component contains the whole Configuration information for user to review their choices\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\nimport { Button, Checkbox, Row, Col, Divider, Form, Icon } from 'antd';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//funcs & data\nimport {\n    generateWinCustomFile,\n    generateWinExpressFile\n} from '../../../../FileGenerator/FileGenerator';\nimport { generateSummary } from '../../../../Utils/CommonFunc';\nimport customSummaryInfo from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomSummaryStructure.json';\nimport expressSummaryInfo from '../../../../../assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressSummaryStructure.json';\n\n//css\nimport 'antd/dist/antd.css';\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport '../../../../Utils/CommonCss.css';\n\nclass Summary extends React.Component {\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     * To generate the Option.txt and download it locally\n     */\n    downloadTxtFile = () => {\n        const element = document.createElement('a');\n        let res = null;\n        if (this.props.useMode === 'custom') {\n            // custom install\n            res = generateWinCustomFile(this.props);\n        } else {\n            res = generateWinExpressFile(this.props);\n        }\n        const file = new Blob([res], {\n            type: 'text/plain'\n        });\n        element.href = URL.createObjectURL(file);\n        element.download = this.props.useMode === 'custom' ? 'Response_Custom.ini' : 'Response_Express.ini';\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    };\n\n    render() {\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winSummaryNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>Summary</p>\n                        <div>\n                            <div className={commonClasses.summaryContainer}>\n                                {this.props.useMode === 'custom'\n                                    ? generateSummary(\n                                          customSummaryInfo,\n                                          this.props\n                                      )\n                                    : generateSummary(\n                                          expressSummaryInfo,\n                                          this.props\n                                      )}\n                            </div>\n                            <Checkbox\n                                onChange={e => {\n                                    this.props.setOriginState(\n                                        'forceReboot',\n                                        e.target.checked\n                                    );\n                                }}\n                                checked={this.props.getOriginState(\n                                    'forceReboot'\n                                )}\n                            >\n                                Automatically restart this computer if needed\n                                during installation\n                            </Checkbox>\n                        </div>\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <div className={commonClasses.buttonBar}>\n                    <div className={commonClasses.description}>\n                        You are creating a configuration file for\n                        <img\n                            src={require('../../../../../assets/Icons/Windows.png')}\n                            alt=\"Operating System\"\n                        />\n                    </div>\n                    <div className={commonClasses.buttons}>\n                        <Button\n                            className={commonClasses.buttonBack}\n                            type=\"default\"\n                            onClick={this.backStep}\n                        >\n                            Back\n                        </Button>\n                        <Button\n                            className={commonClasses.buttonNext}\n                            type=\"primary\"\n                            onClick={this.downloadTxtFile}\n                        >\n                            <Icon type=\"vertical-align-bottom\" />\n                            Download File\n                        </Button>\n                    </div>\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default Summary;\n"," import React from 'react'; import 'antd/dist/antd.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/Windows.103ca560.png\";","module.exports = __webpack_public_path__ + \"static/media/Linux.12ddd52e.png\";"," import React from 'react'; import 'antd/dist/antd.css';\nimport ResponseFileBuilder from './Containers/ResponseFileBuilder/ResponseFileBuilder';\n \n\n\nfunction App() {\n    return <ResponseFileBuilder />;\n}\n\nexport default App;\n","/**\n * @file High level of the website, control the main view branches of this website.\n * user need to set the OS version, MSTR version, and install mode they want to install.\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport React, { Component } from 'react';\nimport InstallationOsControl from './InstallationOsControl/InstallationOsControl';\nimport LicenseAgreePage from '../../Components/ContentPages/LicenseAgreePage/LicenseAgreePage';\n\nclass ResponseFileBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            agreeLicense: false,\n            initialPage: true, // true to display LicenseAgree Page, false otherwise\n            installVersion: '2020',\n            operateSystem: 'windows',\n            mode: 'custom'\n        };\n    }\n\n    /**\n     * Get the value of a specific state\n     * @param {String} key the state field\n     * @return {Object} the value of the state\n     */\n    getOriginState = key => {\n        if (Object.keys(this.state).includes(key)) {\n            return this.state[key];\n        }\n        return null;\n    };\n\n    /**\n     * Change the value of a specific state\n     * @param {String} key the state field\n     * @param {Object} value the new value of the state you want to set\n     */\n    setOriginState = (key, value) => {\n        if (Object.keys(this.state).includes(key)) {\n            this.setState({\n                [key]: value\n            });\n        }\n    };\n\n    render() {\n        const { mode } = this.state;\n        const { installVersion } = this.state;\n        const { operateSystem } = this.state;\n        if (this.state.initialPage) {\n            return (\n                <LicenseAgreePage\n                    setOriginState={this.setOriginState}\n                    getOriginState={this.getOriginState}\n                />\n            );\n        }else {\n            return (\n                <InstallationOsControl\n                    useMode={mode.toLowerCase()}\n                    useVersion={installVersion.toLowerCase()}\n                    useOs={operateSystem.toLowerCase()}\n                    setBasicState={this.setOriginState}\n                />\n            );\n        }\n    }\n}\n\nexport default ResponseFileBuilder;\n","/**\n * @file Describe the file\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport React, { Component } from 'react';\nimport ConfigurationContent from '../../../Components/ConfigurationContent/ConfigurationContent';\nimport win20CustomStates from '../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomStates.json';\nimport win20ExpressStates from '../../../assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressStates.json';\nimport lin20States from '../../../assets/MSTR2020/LINUX/Lin20States.json';\n \n\nclass InstallationOsControl extends Component {\n    constructor(props) {\n        super(props);\n        if (this.props.useOs === 'windows' && this.props.useMode === 'custom') {\n            this.state = win20CustomStates\n        }else if (this.props.useOs === 'windows' && this.props.useMode === 'express') {\n            this.state = win20ExpressStates;\n        } else{\n                  this.state = lin20States;\n              }\n    }\n\n    //steps change\n    nextStep = () => {\n        if (this.state.deepestStep > this.state.steps) {\n            this.setState((preState, props) => {\n                return {\n                    steps: preState.steps + 1\n                };\n            });\n        } else {\n            this.setState((preState, props) => {\n                return {\n                    steps: preState.steps + 1,\n                    deepestStep: preState.steps + 1\n                };\n            });\n        }\n    };\n\n    backStep = () => {\n        if (this.state.steps > 0) {\n            this.setState((preState, props) => {\n                return {\n                    steps: preState.steps - 1\n                };\n            });\n        }\n    };\n    /**\n     * Get the value of a specific state\n     * @param {String} key the state field\n     * @return {Object} the value of the state\n     */\n    getOriginState = key => {\n        if (Object.keys(this.state).includes(key)) {\n            return this.state[key];\n        }\n        return null;\n    };\n\n    /**\n     * Change the value of a specific state\n     * @param {String} key the state field\n     * @param {Object} value the new value of the state you want to set\n     */\n    setOriginState = (key, value) => {\n        if (Object.keys(this.state).includes(key)) {\n            this.setState({\n                [key]: value\n            });\n        }\n    };\n\n    render() {\n        return (\n            <ConfigurationContent\n                nextStep={this.nextStep}\n                backStep={this.backStep}\n                useOs={this.props.useOs}\n                useMode={this.props.useMode}\n                useVersion={this.props.useVersion}\n                setOriginState={this.setOriginState}\n                getOriginState={this.getOriginState}\n                steps={this.state.steps}\n                setBasicState={this.props.setBasicState}\n                deepestStep={this.state.deepestStep}\n            />\n        );\n    }\n}\n\nexport default InstallationOsControl;\n"," import React from 'react'; import 'antd/dist/antd.css';\nimport win20CustomPages from '../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\nimport lin20Pages from '../../assets/MSTR2020/LINUX/Lin20PageObjects.json';\nimport win20ExpressPages from '../../assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressPageObjects.json'\n\n//Windows 2020 custom part\nimport WinCustomerInfoAndInstallationDirect from '../ContentPages/MSTR2020/WindowsCustom/CustomerInfoAndInstallationDirect/WinCustomerInfoAndInstallationDirect';\nimport WinFeatureSelection from '../ContentPages/MSTR2020/WindowsCustom/FeatureSelection/WinFeatureSelection';\nimport WinTopologyConfiguration from '../ContentPages/MSTR2020/WindowsCustom/TopologyConfiguration/WinTopologyConfiguration';\nimport WinIdentityConfiguration from '../ContentPages/MSTR2020/WindowsCustom/IdentityConfiguration/WinIdentityConfiguration';\nimport WinTelemetryConfiguration from '../ContentPages/MSTR2020/WindowsCustom/TelemetryConfiguration/WinTelemetryConfiguration';\nimport WinWebMobileVDS from '../ContentPages/MSTR2020/WindowsCustom/WebMobileVDS/WinWebMobileVDS';\nimport WinPortalMDXVDS from '../ContentPages/MSTR2020/WindowsCustom/PortalMDXVDS/WinPortalMDXVDS';\nimport WinOfficeConfiguration from '../ContentPages/MSTR2020/WindowsCustom/OfficeConfiguration/WinOfficeConfiguration';\nimport WinIntelligenceServerConfiguration from '../ContentPages/MSTR2020/WindowsCustom/IntelligenceServerConfiguration/WinIntelligenceServerConfiguration';\nimport WinNarrowcastServerConfiguration from '../ContentPages/MSTR2020/WindowsCustom/NarrowcastServerConfiguration/WinNarrowcastServerConfiguration';\nimport WinSummary from '../ContentPages/MSTR2020/WindowsCustom/Summary/WinSummary';\n\n//Linux 2020 part\nimport LinCustomerInfoAndInstallationDirect from '../ContentPages/MSTR2020/Linux/CustomerInfoAndInstallationDirect/LinCustomerInfoAndInstallationDirect';\nimport LinIdentityConfigStep1 from '../ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep1';\nimport LinFeatureSelection from '../ContentPages/MSTR2020/Linux/FeatureSelection/LinFeatureSelection';\nimport LinIdentityConfigStep2 from '../ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep2';\nimport LinIdentityConfigStep3 from '../ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep3';\nimport LinIdentityManager from '../ContentPages/MSTR2020/Linux/IdentityManager/LinIdentityManager';\nimport LinTelemetryConfiguration from '../ContentPages/MSTR2020/Linux/TelemetryConfiguration/LinTelemetryConfiguration';\nimport LinTopologyConfiguration from '../ContentPages/MSTR2020/Linux/TopologyConfiguration/LinTopologyConfiguration';\nimport LinRegisteringAsService from '../ContentPages/MSTR2020/Linux/RegisteringAsService/LinRegisteringAsService';\nimport LinSummary from '../ContentPages/MSTR2020/Linux/Summary/LinSummary';\n\nconst configurationContent = props => {\n\n\n    const win20ExpressWholeSteps = [\n        <WinCustomerInfoAndInstallationDirect\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            setBasicState={props.setBasicState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinSummary\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />\n    ];\n\n    /**\n     * An Array that stores the JSX of components of Windows 2020 Custom Installation.\n     * The index of this array should be corresponding to 'step' state in WindowsInstall.js\n     * @const\n     * @type {Array}\n     */\n    const win20CustomWholeSteps = [\n        <WinCustomerInfoAndInstallationDirect\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            setBasicState={props.setBasicState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinFeatureSelection\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinTopologyConfiguration\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinIdentityConfiguration\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinTelemetryConfiguration\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinWebMobileVDS\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinPortalMDXVDS\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinOfficeConfiguration\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinIntelligenceServerConfiguration\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinNarrowcastServerConfiguration\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <WinSummary\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />\n    ];\n\n    /**\n     * An Array that stores the JSX of components of Linux 2020 Installation.\n     * The index of this array should be corresponding to 'step' state in LinuxInstall.js\n     * @const\n     * @type {Array}\n     */\n    const lin20WholeSteps = [\n        <LinCustomerInfoAndInstallationDirect\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            setBasicState={props.setBasicState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <LinFeatureSelection\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <LinIdentityConfigStep1\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <LinIdentityConfigStep2\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <LinIdentityConfigStep3\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <LinIdentityManager\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <LinTelemetryConfiguration\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <LinTopologyConfiguration\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <LinRegisteringAsService\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />,\n        <LinSummary\n            nextStep={props.nextStep}\n            backStep={props.backStep}\n            steps={props.steps}\n            getOriginState={props.getOriginState}\n            setOriginState={props.setOriginState}\n            deepestStep={props.deepestStep}\n            useOs={props.useOs}\n            useMode={props.useMode}\n            useVersion={props.useVersion}\n        />\n    ];\n\n    /**\n     * generate Array that contains configuration page JSX based on the features that user select to install\n     * if a product is not selected, it's configuration page should not display\n     * @param {Object} pageObjects object that contains information for each page\n     * @param {Array} pageArray Array that contains all the pages' JSX\n     * @return {Array} return the array that contains necessary configuration page JSX\n     */\n    const generateSteps = (pageObjects, pageArray) => {\n        let res = [];\n        pageObjects.forEach(item => {\n            //the page should be displayed if it has no dependent product or any of its dependent product is chosen\n            let dependStates = item.dependOnState;\n            if (dependStates.length === 0) {\n                res.push(pageArray[item.id]);\n            } else\n                for (let i = 0; i < dependStates.length; i++) {\n                    if (props.getOriginState(dependStates[i])) {\n                        res.push(pageArray[item.id]);\n                        break;\n                    }\n                }\n        });\n        return res;\n    };\n\n    let version = props.useVersion.toLowerCase();\n    let mode = props.useMode.toLowerCase();\n    let os = props.useOs.toLowerCase();\n\n    let installation = null;\n\n    const isWin20Custom = () => {\n        return version === '2020' && mode === 'custom' && os === 'windows';\n    };\n\n    const isWin20Express = () => {\n        return version === '2020' && mode === 'express' && os === 'windows';\n    };\n\n    const isLinux20 = () => {\n        return version === '2020' && os === 'linux';\n    };\n\n    if (isWin20Custom()) {\n        installation = generateSteps(win20CustomPages, win20CustomWholeSteps);\n    } else if (isWin20Express()) {\n        installation = generateSteps(win20ExpressPages, win20ExpressWholeSteps);\n    } else if (isLinux20()) {\n        installation = generateSteps(lin20Pages, lin20WholeSteps);\n    }\n\n    return installation[props.steps]; \n};\n\nexport default configurationContent;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Button, Checkbox } from 'antd';\nimport classes from './LicenseAgreePage.module.css';\nimport LicenseAgreementContent from '../../../assets/LicenseAgreementContent';\nimport commonClasses from '../../Utils/CommonCss.module.css';\n\nconst { Option } = Select;\n\nconst licenseAgreePage = props => {\n    let modeSelection =\n        props.getOriginState('operateSystem') === 'windows' ? (\n            <div\n                className={[\n                    commonClasses.inputBox,\n                    classes.licenseModeSelector\n                ].join(' ')}\n            >\n                Choose MicroStrategy Installation Mode:\n                <br />\n                <Select\n                    style={{ width: 400 }}\n                    defaultValue={props.getOriginState('mode')}\n                    onChange={value => {\n                        props.setOriginState('mode', value);\n                    }}\n                >\n                    <Option value=\"custom\">Custom</Option>\n                    <Option value=\"Express\">Express</Option>\n                </Select>\n            </div>\n        ) : null;\n\n    let res = (\n        <div>\n            <div className={classes.licensePage}>\n                <div className={classes.licenseContainer}>\n                    <LicenseAgreementContent />\n                </div>\n                <Checkbox\n                    onChange={e => {\n                        props.setOriginState('agreeLicense', e.target.checked);\n                    }}\n                    checked={props.getOriginState('agreeLicense')}\n                >\n                    I've read and agree with all the statement above\n                </Checkbox>\n                <div className={classes.inputBoxesContainer}>\n                    <div className={classes.operationSys}>\n                        Choose Destined Operation System:\n                        <br />\n                        <Select\n                            style={{ width: 400 }}\n                            defaultValue={props.getOriginState('operateSystem')}\n                            onChange={value => {\n                                props.setOriginState('operateSystem', value);\n                            }}\n                        >\n                            <Option value=\"windows\">Windows</Option>\n                            <Option value=\"linux\">Linux</Option>\n                        </Select>\n                    </div>\n                    <div\n                        className={\n                            props.getOriginState('operateSystem') === 'linux'\n                                ? [\n                                      classes.licenseVersionBotMargin,\n                                      commonClasses.inputBox\n                                  ].join(' ')\n                                : commonClasses.inputBox\n                        }\n                    >\n                        {' '}\n                        Choose MicroStrategy Platform\n                        Version:\n                        <br />\n                        <Select\n                            style={{ width: 400 }}\n                            defaultValue={props.getOriginState(\n                                'installVersion'\n                            )}\n                            onChange={value => {\n                                props.setOriginState('installVersion', value);\n                            }}\n                        >\n                            {/* <Option value=\"2019\">2019</Option> */}\n                            <Option value=\"2020\">2020</Option>\n                        </Select>\n                    </div>\n                    {modeSelection}\n                </div>\n            </div>\n            <div className={commonClasses.buttonBar}>\n                <div className={commonClasses.buttons}>\n                    <Button\n                        className={commonClasses.buttonNext}\n                        type=\"primary\"\n                        onClick={() =>\n                            props.setOriginState('initialPage', false)\n                        }\n                        disabled={!props.getOriginState('agreeLicense')}\n                    >\n                        Next\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n\n    return res;\n};\n\nexport default licenseAgreePage;\n","import React from 'react'\n\nconst licenseAgreementContent = props => (\n    <div className=\"col-sm-12 col-lg-9\">\n        <h2 className=\"text-large\">Legal Notices and Terms of Use</h2>\n        <p>\n            <em>Last modified: April 18, 2019</em>\n        </p>\n        <p>\n            Welcome to the MicroStrategy website (the \"Site\"). MicroStrategy\n            Incorporated (\"MicroStrategy\") makes content, materials,\n            information, software, products and services available on this Site,\n            subject to the following terms and conditions. By using the Site,\n            you agree to follow and be bound by the following terms and\n            conditions concerning your use of the Site (\"Terms of Use\").\n            MicroStrategy reserves the right to change these terms and\n            conditions, as well as the products, services, prices, and programs\n            mentioned on this Site at any time, in its sole discretion, without\n            notice. You are responsible for reviewing these Terms of Use often\n            enough to stay current of any changes. MicroStrategy will endeavor\n            to notify you of any material changes by posting notice of such\n            changes on the Site. Your continued use of any part of the Site\n            after MicroStrategy posts such changes to the Terms of Use\n            (regardless of whether MicroStrategy has specifically notified you\n            of such changes) shall indicate your acknowledgment of such changes\n            and agreement to be bound by the revised Terms of Use. If you do not\n            agree to all of the Terms of Use, you should not access, visit or\n            participate in the Site. MicroStrategy reserves the right to seek\n            all remedies available by law and in equity for any violation of\n            these Terms of Use. If you breach any of the Terms of Use, your\n            authorization to use the Site automatically terminates and you agree\n            to immediately destroy any material you obtained from the Site (or\n            derived from material you obtained from the Site). Any rights not\n            expressly granted herein are reserved. Please note that these Terms\n            of Use cover your use of the Site and do not necessarily cover your\n            use of products accessed through the Site. MicroStrategy will not be\n            liable to you or any third-party for any claims or actions arising\n            or resulting from your use, visit, or participation in the Site and\n            for any modification, suspension, or termination of the Site, or\n            termination of your access to any of your accounts.\n        </p>\n        <h3 className=\"padding-top-30\">\n            Use of Forums and Public Communication\n        </h3>\n        <p>\n            The Site may contain discussion group, bulletin board services, chat\n            areas, news groups, forums, communities, and/or other message or\n            communication facilities designed to enable you to communicate with\n            others (\"Communication Services\"). You agree to use the\n            Communication Services only to post, send and receive messages and\n            material that are proper and, when applicable, consistent with\n            MicroStrategy’s intended purpose for the particular Communication\n            Service.\n        </p>\n        <p>\n            By way of example, and not as a limitation, you agree that when\n            using the Communication Services, you will not:\n        </p>\n        <ul>\n            <li>\n                Use the Communication Services in connection with surveys,\n                contests, pyramid schemes, chain letters, junk email, spamming\n                or any duplicative or unsolicited messages (commercial or\n                otherwise).\n            </li>\n            <li>\n                Defame, abuse, harass, stalk, threaten or otherwise violate the\n                legal rights (such as rights of privacy and publicity) of\n                others.\n            </li>\n            <li>\n                Promote bigotry, racism, hatred or harm against any group or\n                individual.\n            </li>\n            <li>\n                Publish, post, upload, distribute or disseminate any\n                inappropriate, false, misleading, profane, defamatory, obscene,\n                indecent or unlawful topic, name, material or information.\n            </li>\n            <li>\n                Upload, or otherwise make available, files that contain images,\n                photographs, software or other material protected by\n                intellectual property laws, including, by way of example, and\n                not as limitation, copyright or trademark laws (or by rights of\n                privacy or publicity) unless you own or control the rights\n                thereto or have received all necessary consent to do the same.\n            </li>\n            <li>\n                Use any material or information, including images or\n                photographs, which are made available through the Communication\n                Services in any manner that infringes any copyright, trademark,\n                patent, trade secret, or other proprietary right of any party.\n            </li>\n            <li>\n                Upload files that contain viruses, Trojan horses, worms, time\n                bombs, cancelbots, corrupted files, or any other similar\n                software or programs that may damage the operation of another\"s\n                computer or property of another.\n            </li>\n            <li>\n                Do not post any instructions, software or other materials that\n                would allow participants or third parties to harm other users’\n                computers or inappropriately access software or websites.\n            </li>\n            <li>\n                Engage in any commercial activity. You shall not distribute or\n                otherwise publish any content containing a solicitation of\n                funds, promotion, advertising, solicitation for goods or\n                services, or other commercial matter. You agree not to solicit\n                other users of the Site to use or join or become members of any\n                commercial online or offline service or other organization. You\n                agree not to collect or store personal data about other users.\n            </li>\n            <li>\n                Download any file posted by another user of a Communication\n                Service that you know, or reasonably should know, cannot be\n                legally reproduced, displayed, performed, and/or distributed in\n                such manner.\n            </li>\n            <li>\n                Falsify or delete any copyright management information, such as\n                author attributions, legal or other proper notices or\n                proprietary designations or labels of the origin or source of\n                software or other material contained in a file that is uploaded.\n            </li>\n            <li>\n                Restrict or inhibit any other user from using and enjoying the\n                Communication Services.\n            </li>\n            <li>\n                Violate any code of conduct or other guidelines which may be\n                applicable for any particular Communication Service.\n            </li>\n            <li>Do not misrepresent the source of anything you contribute.</li>\n            <li>\n                You are responsible and liable for all your activities while\n                participating to the Site, including anything you contribute.\n            </li>\n            <li>\n                Harvest or otherwise collect information about others, including\n                e-mail addresses.\n            </li>\n            <li>Violate any applicable laws or regulations.</li>\n            <li>\n                Create a false identity for the purpose of misleading others.\n            </li>\n            <li>\n                Use, download or otherwise copy, or provide (whether or not for\n                a fee) to a person or entity any directory of users of the\n                Communication Services or other user or usage information or any\n                portion thereof.\n            </li>\n        </ul>\n        <p>\n            MicroStrategy has no obligation to monitor the Communication\n            Services. However, MicroStrategy reserves the right to review\n            materials posted to the Communication Services and to remove any\n            materials in its sole discretion. MicroStrategy reserves the right\n            to terminate your access to any or all of the Communication Services\n            at any time, without notice, for any reason whatsoever.\n        </p>\n        <p>\n            Information exchanged on the Site is not confidential. MicroStrategy\n            reserves the right at all times to disclose any information as\n            MicroStrategy deems necessary to satisfy any applicable law,\n            regulation, legal process or governmental request, or to edit,\n            refuse to post or to remove any information or materials, in whole\n            or in part, in MicroStrategy\"s sole discretion.\n        </p>\n        <p>\n            Always use caution when giving out any personally identifiable\n            information about yourself in any Communication Services.\n            MicroStrategy does not control or endorse the content, messages or\n            information found in any Communication Services.\n        </p>\n\n        <h3 className=\"padding-top-30\">Termination of Use</h3>\n        <p>\n            You agree that MicroStrategy may, in its sole discretion, at any\n            time terminate your access to the Site and any account(s) you may\n            have in connection with the Site. Access to the Site may be\n            monitored by MicroStrategy.\n        </p>\n        <h3 className=\"padding-top-30\">\n            Third Party Web Sites, Content, Products and Services\n        </h3>\n        <p>\n            The Site may provide links to Web sites and access to content,\n            products and services from third parties, which are not under the\n            control of MicroStrategy. You agree that MicroStrategy is not\n            responsible for third party content accessible through the Site,\n            including opinions, advice, statements and advertisements, and\n            understand that you bear all risks associated with the use of such\n            content. MicroStrategy is providing these links to you only as a\n            convenience, and the inclusion of any link does not imply\n            endorsement by MicroStrategy of the Site and does not grant you any\n            license to products or services available through those links. You\n            should refer to the policies posted by other Web sites regarding\n            privacy and other topics before you use them. When you access a non-\n            MicroStrategy Web site, you do so at your own risk. The Site may\n            mention third-party products and services for informational\n            purposes. MicroStrategy makes no recommendations or endorsements\n            about third-party products and services.\n        </p>\n\n        <h3 className=\"padding-top-30\">DISCLAIMER</h3>\n        <p>\n            THIS SITE AND ANYTHING DESCRIBED ON THIS SITE IS SUBJECT TO CHANGE\n            WITHOUT NOTICE. MICROSTRATEGY MAKES NO WARRANTIES OR COMMITMENTS\n            CONCERNING THE AVAILABILITY OF FUTURE PRODUCTS, FEATURES OR VERSIONS\n            THAT MAY BE PLANNED OR UNDER DEVELOPMENT OR ANY SPECIFICATIONS\n            DESCRIBED ON THIS SITE. MICROSTRATEGY HAS NO SPECIAL RELATIONSHIP OR\n            FIDUCIARY DUTY TO YOU.\n        </p>\n        <p>\n            EXCEPT WHERE EXPRESSLY PROVIDED OTHERWISE, THE SITE, AND ALL\n            CONTENT, MATERIALS, INFORMATION, SOFTWARE, PRODUCTS AND SERVICES\n            PROVIDED ON THE SITE, ARE PROVIDED ON AN \"AS IS\" AND \"AS AVAILABLE\"\n            BASIS. MICROSTRATEGY EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,\n            WHETHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\n            IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\n            PURPOSE AND NON-INFRINGEMENT.\n        </p>\n        <p>\n            EXCEPT WHERE EXPRESSLY PROVIDED OTHERWISE, MICROSTRATEGY MAKES NO\n            WARRANTY THAT: (A) THE SITE OR ANY CONTENT, MATERIALS, INFORMATION,\n            SOFTWARE, PRODUCTS AND SERVICES OFFERED THROUGH THE SITE WILL MEET\n            YOUR REQUIREMENTS; (B) THE SITE OR ANY CONTENT, MATERIALS,\n            INFORMATION, SOFTWARE, PRODUCTS AND SERVICES OFFERED THROUGH THE\n            SITE WILL BE AVAILABLE ON AN UNINTERRUPTED, TIMELY, SECURE, OR\n            ERROR-FREE BASIS; (C) THE RESULTS THAT MAY BE OBTAINED FROM THE USE\n            OF THE SITE OR ANY SOFTWARE, PRODUCTS OR SERVICES OFFERED THROUGH\n            THE SITE WILL BE ACCURATE OR RELIABLE; OR (D) THE QUALITY OF ANY\n            CONTENT, MATERIALS, INFORMATION, SOFTWARE, PRODUCTS OR SERVICES\n            PURCHASED OR OBTAINED BY YOU THROUGH THE SITE WILL MEET YOUR\n            EXPECTATIONS. ANY CONTENT, MATERIALS, INFORMATION, PRODUCTS OR\n            SOFTWARE DOWNLOADED OR OTHERWISE OBTAINED THROUGH THE USE OF THE\n            SITE IS USED AT YOUR OWN DISCRETION AND RISK. MICROSTRATEGY SHALL\n            HAVE NO RESPONSIBILITY FOR ANY DAMAGE TO YOUR COMPUTER SYSTEM OR\n            LOSS OF DATA THAT RESULTS FROM THE DOWNLOAD OF ANY CONTENT,\n            MATERIALS, INFORMATION, PRODUCTS OR SOFTWARE OR THE UPLOAD BY YOU OF\n            ANY CONTENT, MATERIALS, INFORMATION, SOFTWARE, PRODUCTS OR OTHER\n            MATERIALS TO THE SITE.\n        </p>\n        <p>\n            MICROSTRATEGY RESERVES THE RIGHT TO MAKE CHANGES OR UPDATES TO THE\n            SITE AT ANY TIME WITHOUT NOTICE.\n        </p>\n        <p>\n            MICROSTRATEGY ASSUMES NO RESPONSIBILITY FOR ERRORS OR OMISSIONS IN\n            THE INFORMATION OR SOFTWARE OR OTHER DOCUMENTS WHICH ARE REFERENCED\n            BY OR LINKED TO THIS SITE.\n        </p>\n        <p>\n            THIS SITE COULD INCLUDE TECHNICAL OR OTHER INACCURACIES. CHANGES ARE\n            PERIODICALLY MADE TO THE INFORMATION HEREIN. HOWEVER, MICROSTRATEGY\n            MAKES NO COMMITMENT TO UPDATE MATERIALS ON THIS SITE.\n        </p>\n\n        <h3 className=\"padding-top-30\">LIMITATION OF LIABILITY</h3>\n        <p>\n            IN NO EVENT SHALL MICROSTRATEGY BE LIABLE FOR ANY DIRECT, INDIRECT,\n            INCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES, OR DAMAGES FOR LOSS OF\n            PROFITS, REVENUE, DATA OR USE, OR ANY OTHER DAMAGES OF ANY KIND,\n            INCLUDING WITHOUT LIMITATION, THOSE RESULTING FROM: (1) RELIANCE ON\n            THE MATERIALS PRESENTED, (2) DELAYS OR BUSINESS INTERRUPTIONS, OR\n            (3) ANY THEORY OF LIABILITY, ARISING OUT OF OR IN CONNECTION WITH\n            YOUR ACCESS TO, OR USE OF, THE SITE OR ANY CONTENT, MATERIALS,\n            INFORMATION, SOFTWARE, PRODUCTS OR SERVICES PROVIDED ON THE SITE,\n            WHETHER OR NOT MICROSTRATEGY HAS BEEN ADVISED OF THE POSSIBILITY OF\n            SUCH DAMAGES.\n        </p>\n        <p>\n            SOME JURISDICTIONS DO NOT ALLOW THE LIMITATION OR EXCLUSION OF\n            LIABILITY. ACCORDINGLY, SOME OF THE ABOVE LIMITATIONS MAY NOT APPLY\n            TO YOU.\n        </p>\n\n        <h3 className=\"padding-top-30\">INDEMNITY</h3>\n        <p>\n            You agree to defend, indemnify and hold harmless MicroStrategy, its\n            officers, directors, employees and agents from and against any and\n            all claims, liabilities, damages, losses or expenses, including\n            reasonable attorneys\" fees and costs, arising out of or in any way\n            connected with your access to or use of the Site.\n        </p>\n\n        <h3 className=\"padding-top-30\">PRIVACY POLICY</h3>\n        <p>\n            MicroStrategy is concerned about your privacy and has developed a\n            policy to address privacy concerns. You can find the current privacy\n            policy at{' '}\n            <a href=\"/legal/privacy-policy\">\n                https://www.microstrategy.com/legal/privacy-policy\n            </a>\n            .\n        </p>\n        <h3 className=\"padding-top-30\">NOTE ABOUT CHILDREN</h3>\n        <p>\n            Children under the age of 13 are not eligible to use the Site, and\n            we ask that they do not submit any personal information to us.\n        </p>\n        <h3 className=\"padding-top-30\">APPLICABLE LAWS</h3>\n        <p>\n            The Site is operated by MicroStrategy Incorporated from its offices\n            in the United States of America. MicroStrategy makes no\n            representation that the information located on the Site is\n            appropriate or available for use in other locations, and access to\n            the Site from territories where the content of the Site may be\n            illegal is prohibited. Those who choose to access the Site from\n            other locations do so on their own initiative and are responsible\n            for compliance with applicable local laws. These Terms of Use are\n            void where prohibited by law and the right to access the Site is\n            revoked in such jurisdictions. You agree that if you become a\n            resident in such a jurisdiction, you will immediately cease to\n            access the Site. All matters relating to your access to, and use of,\n            the Site shall be governed by U.S. federal law or the laws of the\n            Commonwealth of Virginia, USA. Any legal action or proceeding\n            relating to your access to, or use of, the Site shall be instituted\n            in a state or federal court in Fairfax County, Virginia, USA. You\n            and MicroStrategy agree to submit to the jurisdiction of, and agree\n            that venue is proper in, these courts in any such legal action or\n            proceeding.\n        </p>\n\n        <h3 className=\"padding-top-30\">EXPORT CONTROL</h3>\n        <p>\n            You may not access, download, use or export any Site content or use\n            or access the Site in violation of any country\"s export control laws\n            or regulations or any other applicable laws or regulations. You\n            agree to comply with all export control laws and restrictions and\n            regulations of the United States and/or any foreign agency or\n            authority (as relevant), and not to directly or indirectly provide\n            or otherwise make available the services and products of\n            MicroStrategy in violation of any such restrictions, laws or\n            regulations, or without all necessary approvals. As applicable, you\n            shall obtain and bear all expenses relating to any necessary\n            licenses and/or exemptions with respect to your own use of the Site\n            outside the U.S or relevant jurisdiction. You shall not make the\n            services or products of MicroStrategy nor the underlying information\n            or technology available for download or otherwise provide, either\n            directly or indirectly, (i) into any country subject to relevant\n            export restrictions (including but not limited to those of the U.S.\n            and E.U.), to individuals or entities controlled by such countries,\n            or to nationals or residents of such countries other than nationals\n            who are lawfully admitted permanent residents of countries not\n            subject to such sanctions; or (ii) to anyone on the U.S. Treasury\n            Department\"s list of Specially Designated Nationals and Blocked\n            Persons, the U.S. Commerce Department\"s Denied Persons List, or the\n            Consolidated List of the EU. By agreeing to these Terms of Use, you\n            agree to the foregoing and represent and warrant that you are not on\n            any of the aforementioned lists or located in, or under the control\n            of, any country subject to export restrictions.\n        </p>\n\n        <h3 className=\"padding-top-30\">\n            MEMBER ACCOUNT, PASSWORD, AND SECURITY\n        </h3>\n        <p>\n            If any of the Site features requires you to open an account, you\n            must complete the registration process by providing us with current,\n            complete and accurate information as prompted by the applicable\n            registration form. You also will choose a password and a user name.\n            You are entirely responsible for maintaining the confidentiality of\n            your password and account. Furthermore, you are entirely responsible\n            for any and all activities that occur under your account. You agree\n            to notify MicroStrategy immediately of any unauthorized use of your\n            account or any other breach of security. MicroStrategy will not be\n            liable for any loss that you may incur as a result of someone else\n            using your password or account, either with or without your\n            knowledge. However, you could be held liable for losses incurred by\n            MicroStrategy or another party due to someone else using your\n            account or password. You may not use anyone else\"s account at any\n            time, without the permission of the account holder. MicroStrategy\n            reserves the right to refuse access to certain areas of the Site to\n            anyone, at any time, without notice, and for any reason.{' '}\n        </p>\n\n        <h3 className=\"padding-top-30\">\n            USE OF MATERIALS AVAILABLE ON THIS SITE\n        </h3>\n        <p>\n            <strong>MicroStrategy Content</strong>\n        </p>\n        <p>\n            Any software that is made available to download from the Site\n            (\"Software\") is the copyrighted work of MicroStrategy. Use of the\n            Software is governed by the terms of the license agreement which\n            accompanies or is included with the Software (\"License Agreement\").\n            An end user will be unable to install any Software that is\n            accompanied by or includes a License Agreement, unless he or she\n            first agrees to the License Agreement terms. Third party scripts or\n            code, linked to or referenced from this website, are licensed to you\n            by the third parties that own such code, not by MicroStrategy.{' '}\n        </p>\n\n        <p>\n            The Software is made available for download solely for use by end\n            users according to the License Agreement. Any reproduction or\n            redistribution of the Software not in accordance with the License\n            Agreement is expressly prohibited by law and may result in severe\n            civil and criminal penalties. Violators will be prosecuted to the\n            maximum extent possible.\n        </p>\n        <p>\n            You may not modify, copy, distribute, transmit, display, perform,\n            reproduce, publish, license, create derivative works from, transfer,\n            or sell any MicroStrategy content obtained from the Site, in whole\n            or in part without the express written authorization of\n            MicroStrategy.{' '}\n        </p>\n        <p>\n            Permission to use documents (such as white papers, press releases,\n            datasheets, dashboards, visualizations, and FAQs) from the Site is\n            granted, provided that (1) the below copyright notice appears in all\n            copies and that both the copyright notice and this permission notice\n            appear, (2) use of such documents from the Site is for informational\n            and non-commercial or personal use only and will not be copied or\n            posted on any network computer or broadcast in any media, and (3) no\n            modifications of any documents are made. Accredited educational\n            institutions, such as K-12, universities, private/public colleges,\n            and state community colleges, may download and reproduce the\n            documents for distribution in the classroom. Distribution outside\n            the classroom requires express written permission. Use for any other\n            purpose is expressly prohibited by law, and may result in severe\n            civil and criminal penalties. Violators will be prosecuted to the\n            maximum extent possible.{' '}\n        </p>\n        <p>\n            WITHOUT LIMITING THE FOREGOING, COPYING OR REPRODUCTION OF THE\n            SOFTWARE TO ANY OTHER SERVER OR LOCATION FOR FURTHER REPRODUCTION OR\n            REDISTRIBUTION IS EXPRESSLY PROHIBITED, UNLESS SUCH REPRODUCTION OR\n            REDISTRIBUTION IS EXPRESSLY PERMITTED BY THE LICENSE AGREEMENT\n            ACCOMPANYING SUCH SOFTWARE.\n        </p>\n        <p>\n            THE SOFTWARE IS WARRANTED, IF AT ALL, ONLY ACCORDING TO THE TERMS OF\n            THE LICENSE AGREEMENT. EXCEPT AS WARRANTED IN THE LICENSE AGREEMENT,\n            MICROSTRATEGY HEREBY DISCLAIMS ALL WARRANTIES AND CONDITIONS WITH\n            REGARD TO THE SOFTWARE, INCLUDING ALL WARRANTIES AND CONDITIONS OF\n            MERCHANTABILITY, WHETHER EXPRESS, IMPLIED OR STATUTORY, FITNESS FOR\n            A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. FOR YOUR\n            CONVENIENCE, MICROSTRATEGY MAY MAKE AVAILABLE AS PART OF THE SITE OR\n            IN ITS SOFTWARE PRODUCTS, TOOLS AND UTILITIES FOR USE AND/OR\n            DOWNLOAD. MICROSTRATEGY DOES NOT MAKE ANY ASSURANCES WITH REGARD TO\n            THE ACCURACY OF THE RESULTS OR OUTPUT THAT DERIVES FROM SUCH USE OF\n            ANY SUCH TOOLS AND UTILITIES. PLEASE RESPECT THE INTELLECTUAL\n            PROPERTY RIGHTS OF OTHERS WHEN USING THE TOOLS AND UTILITIES MADE\n            AVAILABLE ON THE SOFTWARE OR IN MICROSTRATEGY SITE PRODUCTS.\n        </p>\n        <p>\n            <em>Government End Users</em>. Any Technical Data (as defined\n            below), Software, products, or user documentation normally\n            distributed or made available as part of the Software or products\n            (“Documentation”) which is downloaded from the Site or provided to\n            you under a License Agreement for or on behalf of the United States\n            of America, its agencies and/or instrumentalities (\"U.S.\n            Government\"), or for any other entity seeking or applying rights\n            similar to those customarily claimed by the U.S. Government, is\n            provided to you only as a “Commercial Item” as that term is defined\n            in the U.S. Code of Federal Regulations (see 48 C.F.R. § 2.101). The\n            rights MicroStrategy grants you to the Technical Data, Software,\n            products, and Documentation are the same as the rights MicroStrategy\n            grants to all other users of the Technical Data, Software, products,\n            and Documentation consistent with (1) 48 C.F.R. § 12.211 and 48\n            C.F.R. § 12.212 (for civilian acquisitions); and (2) 48 C.F.R. §\n            252.227-7015 and 48 C.F.R. § 227.7202-3 (for U.S. Department of\n            Defense acquisitions). The manufacturer of the Technical Data,\n            Software, products, and Documentation is MicroStrategy Incorporated,\n            1850 Towers Crescent Plaza Tysons Corner, VA 22182.{' '}\n        </p>\n        <p>\n            Technical Data means recorded information, regardless of the form or\n            method of recording, of a scientific or technical nature (including\n            computer software documentation), as defined in 48 C.F.R. §\n            252.227-7015. The term does not include computer software or data\n            incidental to contract administration, such as financial and/or\n            management information.\n        </p>\n\n        <p>\n            <strong>User Content</strong>\n        </p>\n        <p>\n            You acknowledge that you are responsible for any material you may\n            post, submit or upload to or through the Site, including any\n            materials that you post or upload to any Communication Services that\n            are publicly accessible to users of the Site and any information you\n            upload in connection with your use of our products, software or\n            services made available via the Site (collectively, \"User Content\").\n            Your responsibilities with respect to any User Content include\n            ensuring its legality (including compliance with all applicable data\n            privacy and protection laws), reliability, appropriateness,\n            originality and copyright. For purposes of applicable privacy and\n            data protection laws, you will be considered the data controller of\n            all User Content and shall be solely liable in all respects for any\n            infringement of the privacy and data protection rights of\n            individuals whose data is included in your User Content. You may not\n            upload to, distribute, grant access to or otherwise publish through\n            the Communication Services any User Content that (i) is\n            confidential, proprietary, false, fraudulent, libelous, defamatory,\n            obscene, threatening, invasive of privacy or publicity rights,\n            infringing on intellectual property rights, abusive, illegal or\n            otherwise objectionable; (ii) may constitute or encourage a criminal\n            offense, violate the rights of any third party or otherwise give\n            rise to liability or violate any law or (iii) may contain software\n            viruses, political campaigning, chain letters, mass mailings, or any\n            form of \"spam.\" You may not use a false email address or other\n            identifying information, impersonate any person or entity or\n            otherwise mislead as to the origin of any User Content. You may not\n            upload commercial or business related content onto the Site.\n        </p>\n        <p>\n            Unless agreed otherwise, you grant MicroStrategy and its affiliates\n            an unrestricted, nonexclusive, royalty-free, perpetual, irrevocable\n            and fully sublicensable right to use, reproduce, modify, adapt,\n            publish, translate, create derivative works from, distribute and\n            display User Content throughout the world in any media, subject in\n            each case to the restrictions set forth in the Site\"s Privacy\n            Policy. You further agree that MicroStrategy and its affiliates are\n            free to use any ideas, concepts, know-how that you or individuals\n            acting on your behalf provide to MicroStrategy or its affiliates. No\n            compensation will be paid with respect to the use of your User\n            Content, as provided herein. MicroStrategy is under no obligation to\n            post or use any User Content you may provide and MicroStrategy may\n            remove any User Content at any time for legitimate reasons.\n        </p>\n        <p>\n            By posting or uploading User Content you represent and warrant that\n            you own or are authorized to exercise all of the rights to the User\n            Content including, without limitation, all the rights necessary for\n            you to provide, post, upload, input or submit the User Content; that\n            User Content is accurate and up to date; that posting, submitting or\n            uploading to or through the Site does not violate any provision\n            herein and will not cause injury to any person or entity; and that\n            you will indemnify MicroStrategy and its affiliates for all third\n            party claims resulting from User Content.\n        </p>\n        <h3 className=\"padding-top-30\">LINKING POLICY</h3>\n        <p>\n            Unless otherwise set forth in a written agreement between you and\n            MicroStrategy, you must adhere to MicroStrategy\"s linking policy as\n            follows: (i) any link to the Site must be a text only link clearly\n            marked \"https://www.microstrategy.com,\" (ii) the appearance,\n            position and other aspects of the link may not be such as to damage\n            or dilute the goodwill associated with MicroStrategy\"s names and\n            trademarks, (iii) the link must \"point\" to the URL\n            https://www.microstrategy.com and not to other pages within the\n            Site, (iv) the appearance, position and other attributes of the link\n            may not create the false appearance that your organization or entity\n            is sponsored by, affiliated with, or associated with MicroStrategy,\n            (v) when selected by a user, the link must display the Site on a\n            full-screen and not within a \"frame\" on the linking Web site, and\n            (vi) MicroStrategy reserves the right to revoke its consent to the\n            link at any time and in its sole discretion.\n        </p>\n\n        <h3 className=\"padding-top-30\">\n            PROCEDURE FOR MAKING CLAIMS OF COPYRIGHT INFRINGEMENT\n        </h3>\n        <p>\n            ALL INQUIRIES NOT RELEVANT TO THE FOLLOWING PROCEDURE WILL NOT\n            RECEIVE A RESPONSE.\n        </p>\n        <p>\n            MicroStrategy and its affiliates respect the intellectual property\n            rights of others, and we ask our users to do the same. Pursuant to\n            Title 17, United States Code, Section 512(c)(2), if you believe that\n            your copyrighted work has been copied and is accessible on a\n            MicroStrategy Web site in a way that constitutes copyright\n            infringement, please send a Notice to our Copyright Agent providing\n            the following information:\n        </p>\n        <ol>\n            <li>\n                The electronic or physical signature of the owner of the\n                copyright or the person authorized to act on the owner\"s behalf\n            </li>\n            <li>\n                A description of the copyrighted work that you claim has been\n                infringed and a description of the infringing activity;\n            </li>\n            <li>\n                A description of where the material that you claim is infringing\n                is located, such as the URL where it is posted;\n            </li>\n            <li>Your name, address, telephone number, and email address;</li>\n            <li>\n                A statement by you that you have a good faith belief that the\n                disputed use of the material is not authorized by the copyright\n                owner, its agent, or the law; and\n            </li>\n            <li>\n                A statement by you, made under penalty of perjury, that the\n                above information in your Notice is accurate and that you are\n                the copyright owner or are authorized to act on the copyright\n                owner\"s behalf.\n            </li>\n        </ol>\n        <p>\n            MicroStrategy\"s Copyright Agent for Notice of claims of copyright\n            infringement can be reached as follows:\n        </p>\n\n        <p className=\"padding-top-10\">\n            <strong>By mail:</strong>\n        </p>\n        <p>\n            General Counsel <br />\n            >MicroStrategy Incorporated\n            <br /> 1850 Towers Crescent Plaza\n            <br /> Tysons Corner, VA 22182\n            <br />\n        </p>\n\n        <p className=\"padding-top-10\">\n            <strong>By telephone:</strong> 703-848-8600\n        </p>\n\n        <p className=\"padding-top-10\">\n            <strong>By fax:</strong> 703-832-1313\n        </p>\n\n        <p className=\"padding-top-10\">\n            <strong>By email:</strong>{' '}\n            <a href=\"mailto:DMCA@microstrategy.com\">DMCA@microstrategy.com</a>\n        </p>\n\n        <p className=\"padding-top-10\">\n            Please note: This contact information is solely for reporting\n            copyright infringement.\n        </p>\n\n        <h3 className=\"padding-top-30\">COPYRIGHT INFORMATION</h3>\n        <p>\n            All Contents Copyright © 2019 MicroStrategy Incorporated. All Rights\n            Reserved.\n        </p>\n        <h3 className=\"padding-top-30\">TRADEMARK INFORMATION</h3>\n        <p>\n            The following are either trademarks or registered trademarks of\n            MicroStrategy Incorporated or its affiliates in the United States\n            and certain other countries:{' '}\n        </p>\n        <p>\n            MicroStrategy, MicroStrategy 2019, MicroStrategy 11, MicroStrategy\n            10, MicroStrategy 10 Secure Enterprise, MicroStrategy 9,\n            MicroStrategy 9s, MicroStrategy Analytics, MicroStrategy Analytics\n            Platform, MicroStrategy Desktop, MicroStrategy Library,\n            MicroStrategy Operations Manager, MicroStrategy Analytics\n            Enterprise, MicroStrategy Evaluation Edition, MicroStrategy Secure\n            Enterprise, MicroStrategy Web, MicroStrategy Mobile, MicroStrategy\n            Server, MicroStrategy Parallel Relational In-Memory Engine\n            (MicroStrategy PRIME), MicroStrategy MultiSource, MicroStrategy OLAP\n            Services, MicroStrategy Intelligence Server, MicroStrategy\n            Intelligence Server Universal, MicroStrategy Distribution Services,\n            MicroStrategy Report Services, MicroStrategy Transaction Services,\n            MicroStrategy Visual Insight, MicroStrategy Web Reporter,\n            MicroStrategy Web Analyst, MicroStrategy Office, MicroStrategy Data\n            Mining Services, MicroStrategy Geospatial Services, MicroStrategy\n            Narrowcast Server, MicroStrategy Health Center, MicroStrategy\n            Analyst, MicroStrategy Developer, MicroStrategy Web Professional,\n            MicroStrategy Architect, MicroStrategy SDK, MicroStrategy Command\n            Manager, MicroStrategy Enterprise Manager, MicroStrategy Object\n            Manager, MicroStrategy Integrity Manager, MicroStrategy System\n            Manager, MicroStrategy Analytics App, MicroStrategy Mobile App,\n            MicroStrategy Tech Support App, MicroStrategy Mobile App Platform,\n            MicroStrategy Cloud, MicroStrategy R Integration, Dossier, Usher,\n            MicroStrategy Usher, Usher Badge, Usher Security, Usher Security\n            Server, Usher Mobile, Usher Analytics, Usher Network Manager, Usher\n            Professional, MicroStrategy Identity, MicroStrategy Badge,\n            MicroStrategy Identity Server, MicroStrategy Identity Analytics,\n            MicroStrategy Identity Manager, MicroStrategy Communicator,\n            MicroStrategy Services, MicroStrategy Professional Services,\n            MicroStrategy Consulting, MicroStrategy Customer Services,\n            MicroStrategy Education, MicroStrategy University, MicroStrategy\n            Managed Services, BI QuickStrike, Mobile QuickStrike, Transaction\n            Services QuickStrike Perennial Education Pass, MicroStrategy Web\n            Based Training (WBT), MicroStrategy World, Best in Business\n            Intelligence, Pixel Perfect, Global Delivery Center, Direct Connect,\n            Enterprise Grade Security For Every Business, Build Your Own\n            Business Apps, Code-Free, Welcome to Ideal, Intelligent Enterprise,\n            HyperIntelligence, HyperCard, HyperVoice, HyperVision, HyperMobile,\n            Zero-Click Intelligence, Enterprise Semantic Graph, The World’s Most\n            Comprehensive Analytics Platform, The World’s Most Comprehensive\n            Analytics Platform. Period.\n        </p>\n        <p>\n            Other product and company names mentioned herein may be the\n            trademarks of their respective owners.{' '}\n        </p>\n        <p>\n            Specifications subject to change without notice. MicroStrategy is\n            not responsible for errors or omissions. MicroStrategy makes no\n            warranties or commitments concerning the availability of future\n            products or versions that may be planned or under development.\n        </p>\n\n        <h3 className=\"padding-top-30\">UNSOLICITED IDEA SUBMISSION POLICY</h3>\n        <p>\n            MICROSTRATEGY OR ANY OF ITS EMPLOYEES DO NOT ACCEPT OR CONSIDER\n            UNSOLICITED IDEAS, INCLUDING IDEAS FOR NEW ADVERTISING CAMPAIGNS,\n            NEW PROMOTIONS, NEW PRODUCTS OR TECHNOLOGIES, PROCESSES, MATERIALS,\n            MARKETING PLANS OR NEW PRODUCT NAMES. PLEASE DO NOT SEND ANY\n            ORIGINAL CREATIVE ARTWORK, SAMPLES, DEMOS, OR OTHER WORKS. THE SOLE\n            PURPOSE OF THIS POLICY IS TO AVOID POTENTIAL MISUNDERSTANDINGS OR\n            DISPUTES WHEN MICROSTRATEGY\"S PRODUCTS OR MARKETING STRATEGIES MIGHT\n            SEEM SIMILAR TO IDEAS SUBMITTED TO MICROSTRATEGY. SO, PLEASE DO NOT\n            SEND YOUR UNSOLICITED IDEAS TO MICROSTRATEGY OR ANYONE AT\n            MICROSTRATEGY. IF, DESPITE OUR REQUEST THAT YOU NOT SEND US YOUR\n            IDEAS AND MATERIALS, YOU STILL SEND THEM, PLEASE UNDERSTAND THAT\n            MICROSTRATEGY MAKES NO ASSURANCES THAT YOUR IDEAS AND MATERIALS WILL\n            BE TREATED AS CONFIDENTIAL OR PROPRIETARY.\n        </p>\n    </div>\n);\n\nexport default licenseAgreementContent;","/**\n * @file The Component combines the input for Customer information and Installation Directory together\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport React from 'react';\nimport { Form, Input, Button, Row, Col, Divider } from 'antd';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/LINUX/Lin20PageObjects.json';\n//css\nimport 'antd/dist/antd.css';\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 0;\nclass CustomerInfoAndInstallationDirect extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => this.onChange(e, section)}\n                        />\n                    ) : (\n                        <Input onChange={e => this.onChange(e, section)} />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    onChange = (e, section) => {\n        this.props.setOriginState(section.state, e.target.value);\n\n        /*\n        This is only for 'suiteInstallDirectory' in Customer and Installation Page so far,\n        it will affect the default value of 'xxxDirectory' states in Feature Selection Page\n        */\n        if (section.sideEffects !== undefined) {\n            for (let i = 0; i < section.sideEffects.length; i++) {\n                this.props.setOriginState(\n                    section.sideEffects[i].state,\n                    e.target.value + section.sideEffects[i].addValue\n                );\n            }\n        }\n    };\n\n    /**\n     * Change the state of initialPage to go back to License Agreement page\n     */\n    backToLicensePage = () => {\n        this.props.setBasicState('initialPage', true);\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .customerInfos) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections.installDir) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.LinCustomerNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Customer Information\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections.customerInfos\n                        )}\n                        <p className={commonClasses.headlineSub}>\n                            Install Destination\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections.installDir\n                        )}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <div className={commonClasses.buttonBar}>\n                    <div className={commonClasses.description}>\n                        You are creating a configuration file for\n                        <img\n                            src={require('../../../../../assets/Icons/Linux.png')}\n                            alt=\"Operating System\"\n                        />\n                    </div>\n                    <div className={commonClasses.buttons}>\n                        <Button\n                            className={commonClasses.buttonBack}\n                            type=\"default\"\n                            onClick={this.backToLicensePage}\n                        >\n                            Back\n                        </Button>\n                        <Button\n                            className={commonClasses.buttonNext}\n                            type=\"primary\"\n                            onClick={this.nextStep}\n                        >\n                            Next\n                        </Button>\n                    </div>\n                </div>\n            </Form>\n        );\n    }\n}\n\nconst CustomerInfo = Form.create({ name: 'customerInfoAndInstallationDirect' })(\n    CustomerInfoAndInstallationDirect\n);\n\nexport default CustomerInfo;\n","/**\n * @file The feature selection component. It returns a view that give user the opportunity to select the features they\n * want to install.\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport { Form, Divider, Row, Col, Tree, Input, Button } from 'antd';\nimport React from 'react';\n//data & funcs\nimport featureDependencies from '../../../../../assets/MSTR2020/LINUX/Lin20FeatureDependencies.json';\nimport {\n    featureDirectory2StateMap,\n    featureKey2StateMap\n} from '../../../../../assets/MSTR2020/LINUX/Lin20Maps';\nimport {\n    createTree,\n    initialMaps,\n    checkNode,\n    uncheckNode,\n    getInitialCheckedKeys,\n    selectAll,\n    unselectAll\n} from '../../../../Utils/CreateTree';\n//component\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport SelectAllButtonBar from '../../../../ButtonBar/SelectAllButtonBar/SelectAllButtonBar';\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n/**\n * A view to display the input box for install directory configuration\n * @let\n * @type {Object}\n */\n\nclass FeatureSelection extends React.Component {\n    /**\n     * Contains 5 maps to control the checkbox tree\n     * @type {Object}\n     */\n    maps = {\n        /**\n         * A map to mapping nodes and their children\n         * key: nodeKey, value: [nodeKey, nodeKey, ...]\n         * @type {Map}\n         */\n        childrenMap: new Map(),\n        /**\n         * A map to mapping nodes and their parents\n         * key: nodeKey, value: [nodeKey, nodeKey, ...]\n         * @type {Map}\n         */\n        parentMap: new Map(),\n\n        /**\n         * A map to mapping nodes and their dependencies\n         * key: nodeKey, value: [nodeKey, nodeKey, ...]\n         * @type {Map}\n         */\n        dependencyMap: new Map(),\n\n        /**\n         * A map to store the disable status of each node\n         * key: nodeKey, value: boolean\n         * if value is true, the node will be set as disSelectable,\n         * false otherwise\n         * @type {Map}\n         */\n        disSelectableMap: new Map(),\n\n        /**\n         *  Mapping the key of TreeNode to states in WindowsInstall.js\n         * the key is the value of 'key' for each TreeNode in FeatureSelection Page\n         * the value is the corresponding state of that TreeNode\n         * @type {Map}\n         */\n        feature2StateMap: featureKey2StateMap\n    };\n\n    nextStep = () => {\n        if (this.checkedKeys.checked.length > 0) {\n            this.props.nextStep();\n        } else {\n            this.showErrorWarning();\n            this.forceUpdate();\n        }\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     * Show the Error Warning\n     */\n    showErrorWarning = () => {\n        this.featureContainerStyle = [\n            commonClasses.featureScrollableContainer,\n            commonClasses.featureScrollableContainerError\n        ];\n        this.btnBarStyle = commonClasses.selectBtnBarError;\n        this.showErrorMsg = true;\n    };\n\n    /**\n     * Remove the Error Warning\n     */\n    removeErrorWarning = () => {\n        this.featureContainerStyle = commonClasses.featureScrollableContainer;\n        this.btnBarStyle = commonClasses.selectBtnBar;\n        this.showErrorMsg = false;\n    };\n\n    /**\n     * To handle the special cases for the installation on Windows Platform when do the checking action\n     * @param {String} nodeKey the unique id of the TreeNode\n     * @param {Object} checkedKeys the object that 'antd' treeSelect use to control the UI\n     */\n    specialCheckingCaseHandler = (nodeKey, checkedKeys) => {\n        // any 1.x is checked, 1.5 and 1.6 are required and should be set disSelectable\n        if (nodeKey.match(/^1$|^1\\..$/)) {\n            if (!checkedKeys.checked.includes('1.5')) {\n                // no corresponding state for this product\n                checkedKeys.checked.push('1.5');\n            }\n            if (!checkedKeys.checked.includes('1.6')) {\n                // no corresponding state for this product\n                checkedKeys.checked.push('1.6');\n            }\n            this.maps.disSelectableMap.set('1.5', true);\n            this.maps.disSelectableMap.set('1.6', true);\n\n            // Identity Server and Identity Manager cannot be checked alone\n        } else if (nodeKey.match(/^15$|^15\\..$/)) {\n            if (!checkedKeys.checked.includes('15.1')) {\n                checkedKeys.checked.push('15.1');\n                this.props.setOriginState(\n                    featureKey2StateMap.get('15.1'),\n                    true\n                );\n            }\n            if (!checkedKeys.checked.includes('15.2')) {\n                checkedKeys.checked.push('15.2');\n                this.props.setOriginState(\n                    featureKey2StateMap.get('15.2'),\n                    true\n                );\n            }\n            this.maps.disSelectableMap.set('15.1', true);\n            this.maps.disSelectableMap.set('15.2', true);\n        } else {\n            /* the basic checkNode will set Web Universal disSelectable due to its internal \n                dependencies. Should always try to set it false unless 16 is checked*/\n            this.maps.disSelectableMap.set('2', false);\n        }\n    };\n\n    /**\n     * To handle the special cases for the installation on Windows Platform when do the unChecking action\n     * @param {String} nodeKey the unique id of the TreeNode\n     * @param {Object} checkedKeys the array that 'antd' treeSelect use to control the UI\n     */\n    specialUnCheckingCaseHandler = (nodeKey, checkedKeys) => {\n        if (nodeKey === '1') {\n            this.maps.disSelectableMap.set('1.5', false);\n            this.maps.disSelectableMap.set('1.6', false);\n        } else if (nodeKey === '15') {\n            this.maps.disSelectableMap.set('15.1', false);\n            this.maps.disSelectableMap.set('15.2', false);\n        }\n    };\n\n    /**\n     * event triggered when checkbox is being checked or unchecked.\n     * if the box is being checked, make all of its children and dependencies checked. The dependencies should be disSelectable unless the root node has been unchecked\n     * if the box is being unchecked, uncheck all of its children. Set its dependencies selectable\n     * @event\n     * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n     * @param {string} info  the information of the node that trigger this event\n     */\n    onCheck = (checkedKeys, info) => {\n        let nodeKey = info.node.props.eventKey;\n        if (info.checked === true) {\n            checkNode(nodeKey, checkedKeys, this.maps, this.props);\n            this.specialCheckingCaseHandler(nodeKey, checkedKeys);\n        } else {\n            uncheckNode(nodeKey, checkedKeys, this.maps, this.props);\n            this.specialUnCheckingCaseHandler(nodeKey, checkedKeys);\n        }\n\n        /*If none products checked and the error message showed, the next\n          onCheck call must be the user checked something, so remove the error*/\n        if (this.showErrorMsg) {\n            this.removeErrorWarning();\n        }\n    };\n\n    /**\n     * event triggered when TreeNode is being Selected.\n     * If a specific feature is selected, a input box will pop-up for user to modify the install directory of that feature\n     * This function controls the content of 'featureDirectInput' which will rendered when changes\n     * @event\n     * @param {Object} selectedKeys the array that 'antd' treeSelect use to control the UI\n     * @param {string} info  the information of the node that trigger this event\n     */\n    onSelectNode = (selectedKeys, info) => {\n        let nodeKey = info.node.props.eventKey;\n        this.setState({\n            dirState: featureDirectory2StateMap.get(nodeKey)\n        });\n    };\n\n    constructor(props) {\n        super(props);\n        /* A state to control the visibility of the input box for product install directory.\n           When the onSelect product have option to change its install directory,\n           this state will store the name of that state.\n        */\n        this.state = {\n            dirState: null\n        };\n        // An object to control the status of checkboxes in the tree\n        this.checkedKeys = {};\n        this.checkedKeys.checked = [];\n        // default root key ''\n        initialMaps(featureDependencies, '', this.maps);\n        // initiate the checkedKeys\n        getInitialCheckedKeys(\n            this.checkedKeys,\n            this.maps,\n            this.specialCheckingCaseHandler,\n            this.props\n        );\n\n        // Control error message when non product selected and tried to go next\n        this.featureContainerStyle = commonClasses.featureScrollableContainer;\n        this.btnBarStyle = commonClasses.selectBtnBar;\n        this.showErrorMsg = false;\n    }\n\n    render() {\n        let featureDirectInput = null;\n\n        if (this.state.dirState === undefined || this.state.dirState === null) {\n            featureDirectInput = null;\n        } else {\n            featureDirectInput = (\n                <div>\n                    <p>Set the install directory of the selected feature:</p>\n                    <Input\n                        value={this.props.getOriginState(this.state.dirState)}\n                        onChange={e => {\n                            this.props.setOriginState(\n                                this.state.dirState,\n                                e.target.value\n                            );\n                        }}\n                    />\n                </div>\n            );\n        }\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.linFeatureNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Feature Selection\n                        </p>\n                        <Tree\n                            checkedKeys={this.checkedKeys}\n                            className={this.featureContainerStyle}\n                            checkable\n                            checkStrictly\n                            onCheck={(checkedKeys, e) =>\n                                this.onCheck(this.checkedKeys, e)\n                            }\n                            onSelect={this.onSelectNode}\n                        >\n                            {createTree(\n                                featureDependencies,\n                                this.maps.disSelectableMap\n                            )}\n                        </Tree>\n                        <SelectAllButtonBar\n                            styleName={this.btnBarStyle}\n                            showErrorMsg={this.showErrorMsg}\n                            selectAll={() => {\n                                selectAll(\n                                    this.checkedKeys,\n                                    this.maps,\n                                    this.specialCheckingCaseHandler,\n                                    this.props\n                                );\n                                // remove warning if exists\n                                if (this.showErrorMsg) {\n                                    this.removeErrorWarning();\n                                }\n                            }}\n                            unselectAll={() => {\n                                unselectAll(\n                                    this.checkedKeys,\n                                    this.maps,\n                                    this.specialUnCheckingCaseHandler,\n                                    this.props\n                                );\n                            }}\n                        />\n                        <br />\n                        {featureDirectInput}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nexport default FeatureSelection;\n","/**\n * @file The Component contains the input for Identity Configuration Step 1\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport React from 'react';\nimport { Divider, Form, Input, Row, Col, Checkbox } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/LINUX/Lin20PageObjects.json';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 2;\n\nclass IdentityConfigStep1 extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .apacheTomcatDir) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .databaseConnection) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.linIdentity1NavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Tomcat Configuration\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections\n                                .apacheTomcatDir\n                        )}\n                        <p className={commonClasses.headlineSub}>\n                            DataBase Connection\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections\n                                .databaseConnection\n                        )}\n\n                        <Checkbox\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    'identityServerOverwriteDb',\n                                    e.target.checked\n                                );\n                            }}\n                            checked={this.props.getOriginState(\n                                'identityServerOverwriteDb'\n                            )}\n                        >\n                            Overwrite the current database if exists.\n                        </Checkbox>\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst IdentityConfigurationStep1 = Form.create({\n    name: 'identityConfigStep1'\n})(IdentityConfigStep1);\n\nexport default IdentityConfigurationStep1;\n","/**\n * @file The Component contains the input for Identity Configuration Step 2\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport React from 'react';\nimport { Divider, Form, Input, Row, Col } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/LINUX/Lin20PageObjects.json';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 3;\n\nclass IdentityConfigStep2 extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .sslCertificate) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.linIdentity2NavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            SSL Certificate\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections.sslCertificate\n                        )}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst IdentityConfigurationStep2 = Form.create({\n    name: 'identityConfigStep2'\n})(IdentityConfigStep2);\n\nexport default IdentityConfigurationStep2;\n","/**\n * @file The Component contains the input for Identity Configuration Step 3\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport React from 'react';\nimport { Divider, Form, Input, Row, Col, Checkbox } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/LINUX/Lin20PageObjects.json';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 4;\n\nclass IdentityConfigStep3 extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    checkboxChange = e => {\n        this.props.setOriginState(\n            'identityServerGatewayUseSameCert',\n            e.target.checked\n        );\n        if (e.target.checked) {\n            this.props.setOriginState(\n                'identityServerGatewaySslCert',\n                this.props.getOriginState('identityServerServerSslCert')\n            );\n            this.props.setOriginState(\n                'identityServerGatewaySslKey',\n                this.props.getOriginState('identityServerServerSslKey')\n            );\n            this.props.setOriginState(\n                'identityServerGatewayCaCert',\n                this.props.getOriginState('identityServerServerCaCert')\n            );\n        }\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .gatewayPort) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .gatewayCertificate) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        // If 'identityServerGatewayUseSameCert' is true, then copy the value from Server to Gateway\n        if (this.props.getOriginState('identityServerGatewayUseSameCert')) {\n            this.props.setOriginState(\n                'identityServerGatewaySslCert',\n                this.props.getOriginState('identityServerServerSslCert')\n            );\n            this.props.setOriginState(\n                'identityServerGatewaySslKey',\n                this.props.getOriginState('identityServerServerSslKey')\n            );\n            this.props.setOriginState(\n                'identityServerGatewayCaCert',\n                this.props.getOriginState('identityServerServerCaCert')\n            );\n        }\n    }\n\n    render() {\n        let diffServer = null;\n        if (!this.props.getOriginState('identityServerGatewayUseSameCert')) {\n            diffServer = this.generateFormContent(\n                pageObjects[PAGE_NUMBER].formSections.gatewayCertificate\n            );\n        }\n\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.linIdentity3NavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Agent Gateway Configuration\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections.gatewayPort\n                        )}\n                        <Checkbox\n                            onChange={this.checkboxChange}\n                            checked={this.props.getOriginState(\n                                'identityServerGatewayUseSameCert'\n                            )}\n                        >\n                            Use the same SSL certificate as MicroStrategy\n                            Identity Server\n                        </Checkbox>\n                        {diffServer}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst IdentityConfigurationStep3 = Form.create({\n    name: 'identityConfigStep3'\n})(IdentityConfigStep3);\n\nexport default IdentityConfigurationStep3;\n","/**\n * @file The Component combines the input for Identity Manager Configuration\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport React from 'react';\nimport 'antd/dist/antd.css';\n\nimport { Divider, Form, Input, Row, Col, Checkbox } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/LINUX/Lin20PageObjects.json';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 5;\n\nclass IdentityConfiguration extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     *  when the checkbox checked, copy the value of these three state from another three states\n     *  @event\n     */\n    checkboxChange = e => {\n        this.props.setOriginState(\n            'identityManagerUseSameDBSetting',\n            e.target.checked\n        );\n\n        if (e.target.checked) {\n            this.props.setOriginState(\n                'identityManagerDBHost',\n                this.props.getOriginState('identityServerServerDBHost')\n            );\n            this.props.setOriginState(\n                'identityManagerDBPort',\n                this.props.getOriginState('identityServerServerDBPort')\n            );\n            this.props.setOriginState(\n                'identityManagerDBUser',\n                this.props.getOriginState('identityServerServerDBUser')\n            );\n\n            this.props.setOriginState(\n                'identityManagerDBPassword',\n                this.props.getOriginState('identityServerServerDBPassword')\n            );\n        }\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    /**\n     * Set local fields value from the high-level state\n     */\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .apacheHttpServer) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .databaseConnection) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections.dbInstance) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        let managerDBConfig = null;\n        if (!this.props.getOriginState('identityManagerUseSameDBSetting')) {\n            managerDBConfig = this.generateFormContent(\n                pageObjects[PAGE_NUMBER].formSections.databaseConnection\n            );\n        }\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={\n                            this.props.getOriginState(\n                                'identityManagerUseSameDBSetting'\n                            )\n                                ? [\n                                      commonClasses.colNav,\n                                      commonClasses.linIdentityManagerNavHeight2\n                                  ].join(' ')\n                                : [\n                                      commonClasses.colNav,\n                                      commonClasses.linIdentityManagerNavHeight1\n                                  ].join(' ')\n                        }\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Apache HTTP Server Settings\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections\n                                .apacheHttpServer\n                        )}\n\n                        <p className={commonClasses.headlineSub}>\n                            Database Connection\n                        </p>\n                        <Checkbox\n                            onChange={e => this.checkboxChange(e)}\n                            checked={this.props.getOriginState(\n                                'identityManagerUseSameDBSetting'\n                            )}\n                        >\n                            Use the same connection as MicroStrategy Identity\n                            Server\n                        </Checkbox>\n                        {managerDBConfig}\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections.dbInstance\n                        )}\n                        <Checkbox\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    'identityManagerOverwriteDb',\n                                    e.target.checked\n                                );\n                            }}\n                            checked={this.props.getOriginState(\n                                'identityManagerOverwriteDb'\n                            )}\n                        >\n                            Overwrite the current database if exists.\n                        </Checkbox>\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst IdentitySetting = Form.create({\n    name: 'identityConfiguration'\n})(IdentityConfiguration);\nexport default IdentitySetting;\n","/**\n * @file The Component contains the input for registering as a service section\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport React from 'react';\n\nimport { Divider, Form, Input, Row, Col, Checkbox } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/LINUX/Lin20PageObjects.json';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 8;\n\nclass RegisteringAsService extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .registerService) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    render() {\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.linRegServiceNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Registering as a service\n                        </p>\n                        <Checkbox\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    'registerServices',\n                                    e.target.checked\n                                );\n                            }}\n                            checked={this.props.getOriginState(\n                                'registerServices'\n                            )}\n                        >\n                            Register MicroStrategy processes as a service so\n                            that processes automatically start after system\n                            startup\n                        </Checkbox>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections\n                                .registerService\n                        )}\n                        <div className=\"info-tag\">\n                            <img\n                                className=\"info-icon\"\n                                alt=\"info icon\"\n                                src={require('../../../../../assets/Icons/info.svg')}\n                            />\n                            Only root user can register this process as a\n                            service. If not a root user, please skip this step.\n                        </div>\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst RegisteringAsServiceSetting = Form.create({\n    name: 'RegisteringAsService'\n})(RegisteringAsService);\n\nexport default RegisteringAsServiceSetting;\n","/**\n * @file The Component contains the whole Configuration information for user to review their choices\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\nimport { Button, Row, Col, Icon, Form } from 'antd';\n\n//data & funcs\nimport {generateLinuxFile} from '../../../../FileGenerator/FileGenerator';\nimport summaryInfo from '../../../../../assets/MSTR2020/LINUX//Lin20SummaryStructure.json';\nimport { generateSummary } from '../../../../Utils/CommonFunc';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n\nclass Summary extends React.Component {\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     * check if a feature has already been added to the checked list\n     * @param {String} feature the state name of that feature\n     * @return {boolean} true if the feature has been selected, false otherwise\n     */\n    checkFeatureSelected = feature => {\n        if (this.props.getOriginState(feature)) {\n            return 'true';\n        } else {\n            return 'false';\n        }\n    };\n\n    /**\n     * To generate the Option.txt and download it locally\n     */\n    downloadTxtFile = () => {\n        const element = document.createElement('a');\n        let res = generateLinuxFile(this.props);\n        const file = new Blob([res], {\n            type: 'text/plain'\n        });\n        element.href = URL.createObjectURL(file);\n        element.download = 'Option.txt';\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    };\n\n    render() {\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.linSummaryNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={18} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>Summary</p>\n                        <div className={commonClasses.summaryContainer}>\n                            {generateSummary(summaryInfo, this.props)}\n                        </div>\n                    </Col>\n                </Row>\n                <div className={commonClasses.buttonBar}>\n                    <div className={commonClasses.description}>\n                        You are creating a configuration file for\n                        <img\n                            src={require('../../../../../assets/Icons/Linux.png')}\n                            alt=\"Operating System\"\n                        />\n                    </div>\n                    <div className={commonClasses.buttons}>\n                        <Button\n                            className={commonClasses.buttonBack}\n                            type=\"default\"\n                            onClick={this.backStep}\n                        >\n                            Back\n                        </Button>\n                        <Button\n                            className={commonClasses.buttonNext}\n                            type=\"primary\"\n                            onClick={this.downloadTxtFile}\n                        >\n                            <Icon type=\"vertical-align-bottom\" />\n                            Download File\n                        </Button>\n                    </div>\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default Summary;\n"," import React from 'react'; import 'antd/dist/antd.css';\nimport win20customPages from '../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\nimport win20ExpressPages from '../../assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressPageObjects.json';\nimport lin20Pages from '../../assets/MSTR2020/LINUX/Lin20PageObjects.json';\nimport { pic2StateMap } from '../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomMaps';\nimport Zmage from 'react-zmage';\nimport classes from './ReferencePicture.module.css';\n\n\nconst referencePicture = props => {\n    let displayPics = [];\n    let version = props.useVersion.toLowerCase();\n    let mode = props.useMode.toLowerCase();\n    let Os = props.useOs.toLowerCase();\n\n    /**\n     * Generate a picture display list whose index are paralleling to the steps.\n     * The pictures added to the list is based on the features selected\n     * @param {Object} pageObjects object that contains information for each page\n     * @return {Array} return a list that contains pictures to display in order\n     */\n    const generateDisplayPics = pageObjects => {\n        let res = [];\n        pageObjects.forEach(item => {\n            // if dependent State wasn't chosen, don add it's picture to display list\n            let dependStates = item.dependOnState;\n            if (dependStates.length === 0) {\n                res.push(item.referPic);\n            } else {\n                for (let i = 0; i < dependStates.length; i++) {\n                    if (props.getOriginState(dependStates[i])) {\n                        res.push(item.referPic);\n                        break;\n                    }\n                }\n            }\n        });\n        return res;\n    };\n\n    const isWin20Custom = () => {\n        return version === '2020' && mode === 'custom' && Os === 'windows';\n    };\n\n    const isWin20Express = () => {\n        return version === '2020' && mode === 'express' && Os === 'windows';\n    };\n\n    const isLinux20 = () => {\n        return version === '2020' && Os === 'linux';\n    };\n\n    if (isWin20Custom()) {\n        displayPics = generateDisplayPics(win20customPages);\n    } else if (isWin20Express()) {\n        displayPics = generateDisplayPics(win20ExpressPages);\n    } else if (isLinux20()) {\n        displayPics = generateDisplayPics(lin20Pages);\n    }\n\n    let pictures = displayPics[props.steps];\n    if (typeof pictures === 'undefined') {\n        return null;\n    }\n    return pictures.map((item, index) => {\n        // special cases for wev&mobileVDS and portal&mdxVDS pages in Windows Installation\n        let picState = pic2StateMap.get(item);\n        if (typeof picState !== 'undefined') {\n            if (!props.getOriginState(picState)) {\n                return null;\n            }\n        }\n        let picture = require('../../' + item);\n        \n        return (\n            <Zmage\n                className={classes.img}\n                src={picture}\n                style={\n                    index === 0\n                        ? { width: '100%', height: 'auto' }\n                        : { width: '100%', height: 'auto', marginTop: '32px'}\n                }\n                backdrop=\"rgba(0, 0, 0, 0)\"\n                controller={{\n                    close: true,\n                    zoom: false,\n                    download: false,\n                    rotate: false,\n                    flip: false,\n                    pagination: false\n                }}\n                key={props.steps.toString() + index.toString()}\n            />\n        );\n    });\n};\n\nexport default referencePicture;\n","/**\n * @file The Component contains the input for Telemetry Configuration\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\nimport { Divider, Form, Input, Row, Col, Checkbox, Icon, Button } from 'antd';\n//data & funcs\nimport pageObjects from '../../../../../assets/MSTR2020/LINUX/Lin20PageObjects.json';\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 6;\n\nclass TelemetryConfiguration extends React.Component {\n    constructor(props) {\n        super(props);\n        this.uuid = 0;\n    }\n    nextStep = () => {\n        if (this.props.getOriginState('telemetryServerClusterEnable')) {\n            this.props.form.validateFieldsAndScroll((err, values) => {\n                if (!err) {\n                    const { keys, domains } = values;\n                    this.props.setOriginState(\n                        'telemetryServerClusterRemotenodes',\n                        keys.map(key => domains[key])\n                    );\n                    this.props.nextStep();\n                }\n            });\n        } else {\n            this.props.nextStep();\n        }\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     * Remove one field from the form\n     * @param {number} k the key ID of the field you want to remove\n     */\n    remove = k => {\n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        if (keys.length === 1) {\n            return;\n        }\n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k)\n        });\n    };\n\n    /**\n     * Add one field to the form\n     */\n    add = () => {\n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(this.uuid++);\n        form.setFieldsValue({\n            keys: nextKeys\n        });\n    };\n\n    /**\n     *Get the value of a state and set the value to a specific field in the current form page\n     * @param {string} fieldName the field you want to set\n     * @param {string} stateName the state that you want to get value from and put the value to the field\n     */\n    setFormFieldValue = (fieldName, stateName) => {\n        const { setFieldsValue, getFieldValue } = this.props.form;\n        if (getFieldValue(fieldName) !== this.props.getOriginState(stateName)) {\n            setFieldsValue({\n                [fieldName]: this.props.getOriginState(stateName)\n            });\n        }\n    };\n\n    /**\n     * Get the initial keys from a state, and return the keys\n     * @return the initial keys\n     */\n    getInitialKeys() {\n        const telemetryServerClusterRemotenodes = this.props.getOriginState(\n            'telemetryServerClusterRemotenodes'\n        );\n        let nextKeys = [];\n        for (let i = 0; i < telemetryServerClusterRemotenodes.length; i++) {\n            nextKeys = nextKeys.concat(this.uuid);\n            this.uuid = this.uuid + 1;\n        }\n        return nextKeys;\n    }\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    componentDidMount() {\n        const { setFieldsValue } = this.props.form;\n        const telemetryServerClusterRemotenodes = this.props.getOriginState(\n            'telemetryServerClusterRemotenodes'\n        );\n        let domains = [];\n        for (let i = 0; i < telemetryServerClusterRemotenodes.length; i++) {\n            domains = domains.concat(telemetryServerClusterRemotenodes[i]);\n        }\n        setFieldsValue({\n            domains\n        });\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections.localNode) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        let clusterForm = null;\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        const initKeys = getFieldValue('keys');\n        const InitialKeys = initKeys || this.getInitialKeys();\n        getFieldDecorator('keys', { initialValue: InitialKeys });\n        const keys = getFieldValue('keys');\n        const remoteServers = keys.map((k, index) => (\n            <Form.Item\n                label={\n                    index === 0\n                        ? 'Enter the Fully Qualified Domain Name of all the remote Telemetry Servers'\n                        : ''\n                }\n                required={false}\n                key={k}\n            >\n                {getFieldDecorator(`domains[${k}]`, {\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: 'Please input domain name or IP address.',\n                            pattern:\n                                '^((\\\\*)|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|((\\\\*\\\\.)?([a-zA-Z0-9-]+\\\\.){0,5}[a-zA-Z0-9-][a-zA-Z0-9-]+\\\\.[a-zA-Z]{2,63}?))$'\n                        }\n                    ]\n                })(<Input style={{ width: '60%', marginRight: 8 }} />)}\n                {keys.length > 1 ? (\n                    <Icon\n                        className=\"dynamic-delete-button\"\n                        type=\"minus-circle-o\"\n                        onClick={() => this.remove(k)}\n                    />\n                ) : null}\n            </Form.Item>\n        ));\n\n        if (this.props.getOriginState('telemetryServerClusterEnable')) {\n            clusterForm = (\n                <Form>\n                    {this.generateFormContent(\n                        pageObjects[PAGE_NUMBER].formSections.localNode\n                    )}\n                    <Form.Item>\n                        {remoteServers}\n                        <Button\n                            type=\"dashed\"\n                            onClick={this.add}\n                            style={{ width: '60%' }}\n                        >\n                            <Icon type=\"plus\" /> Add Remote Server\n                        </Button>\n                    </Form.Item>\n                </Form>\n            );\n        }\n\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.linTeleNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Telemetry Configuration\n                        </p>\n                        <Checkbox\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    'telemetryServerClusterEnable',\n                                    e.target.checked\n                                );\n\n                                if (!e.target.checked) {\n                                    this.props.setOriginState(\n                                        'telemetryServerClusterLocalnode',\n                                        ''\n                                    );\n                                    this.props.setOriginState(\n                                        'telemetryServerClusterRemotenodes',\n                                        ['', '']\n                                    );\n                                }\n                            }}\n                            checked={this.props.getOriginState(\n                                'telemetryServerClusterEnable'\n                            )}\n                        >\n                            Create a cluster of three or more Telemetry Servers\n                        </Checkbox>\n                        {clusterForm}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\nconst TelemetryConfigurationSetting = Form.create({\n    name: 'telemetryConfiguration'\n})(TelemetryConfiguration);\n\nexport default TelemetryConfigurationSetting;\n","/**\n * @file The Component contains the input for Topology Configuration\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\nimport { Form, Input, Icon, Button, Checkbox, Row, Col, Divider } from 'antd';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport 'antd/dist/antd.css';\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport '../../../../Utils/CommonCss.css';\n\nclass TopologyConfiguration extends React.Component {\n    constructor(props) {\n        super(props);\n        this.uuid = 0;\n    }\n\n    nextStep = () => {\n        if (\n            this.props.getOriginState(\n                'servicesRegistrationMachineEnvironment'\n            ) === 'MULTIPLE'\n        ) {\n            this.props.form.validateFieldsAndScroll((err, values) => {\n                if (!err) {\n                    const { keys, domains } = values;\n                    this.props.setOriginState(\n                        'servicesRegistrationServerHosts',\n                        keys.map(key => domains[key])\n                    );\n                    this.props.nextStep();\n                }\n            });\n        } else {\n            this.props.nextStep();\n        }\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    onChange = e => {\n        this.props.setOriginState(\n            'servicesRegistrationMachineEnvironment',\n            e.target.checked ? 'MULTIPLE' : 'SINGLE'\n        );\n\n        if (!e.target.checked) {\n            this.props.setOriginState('servicesRegistrationServerHosts', ['']);\n        }\n    };\n\n    /**\n     * Remove one field from the form\n     * @param {number} k the key ID of the field you want to remove\n     */\n    remove = k => {\n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        if (keys.length === 1) {\n            return;\n        }\n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k)\n        });\n    };\n\n    /**\n     * Add one field to the form\n     */\n    add = () => {\n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(this.uuid++);\n        form.setFieldsValue({\n            keys: nextKeys\n        });\n    };\n\n    /**\n     * Get the initial keys from a state, and return the keys\n     * @return the initial keys\n     */\n    getInitialKeys() {\n        const servicesRegistrationServerHosts = this.props.getOriginState(\n            'servicesRegistrationServerHosts'\n        );\n        let nextKeys = [];\n        for (let i = 0; i < servicesRegistrationServerHosts.length; i++) {\n            nextKeys = nextKeys.concat(this.uuid);\n            this.uuid = this.uuid + 1;\n        }\n        return nextKeys;\n    }\n\n    componentDidMount() {\n        const { setFieldsValue } = this.props.form;\n        const servicesRegistrationServerHosts = this.props.getOriginState(\n            'servicesRegistrationServerHosts'\n        );\n        let domains = [];\n        for (let i = 0; i < servicesRegistrationServerHosts.length; i++) {\n            domains = domains.concat(servicesRegistrationServerHosts[i]);\n        }\n\n        setFieldsValue({\n            domains\n        });\n    }\n\n    render() {\n        let clusterForm = null;\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        const initKeys = getFieldValue('keys');\n        const InitialKeys = initKeys || this.getInitialKeys();\n        getFieldDecorator('keys', { initialValue: InitialKeys });\n\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n            <Form.Item\n                label={\n                    index === 0\n                        ? 'Enter the fully qualified domain name for one Intelligence machine:'\n                        : ''\n                }\n                required={false}\n                key={k}\n            >\n                {getFieldDecorator(`domains[${k}]`, {\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: 'Please input domain name or IP address.',\n                            pattern:\n                                '^((\\\\*)|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|((\\\\*\\\\.)?([a-zA-Z0-9-]+\\\\.){0,5}[a-zA-Z0-9-][a-zA-Z0-9-]+\\\\.[a-zA-Z]{2,63}?))$'\n                        }\n                    ]\n                })(<Input style={{ width: '60%', marginRight: 8 }} />)}\n                {keys.length > 1 ? (\n                    <Icon\n                        className=\"dynamic-delete-button\"\n                        type=\"minus-circle-o\"\n                        onClick={() => this.remove(k)}\n                    />\n                ) : null}\n            </Form.Item>\n        ));\n        if (\n            this.props.getOriginState(\n                'servicesRegistrationMachineEnvironment'\n            ) === 'MULTIPLE'\n        ) {\n            clusterForm = (\n                <div>\n                    {formItems}\n                    <Form.Item>\n                        <Button\n                            type=\"dashed\"\n                            onClick={this.add}\n                            style={{ width: '60%' }}\n                        >\n                            <Icon type=\"plus\" /> Add field\n                        </Button>\n                    </Form.Item>\n                    <div className=\"info-tag\">\n                        <img\n                            className=\"info-icon\"\n                            alt=\"info icon\"\n                            src={require('../../../../../assets/Icons/info.svg')}\n                        />\n                        The number of the cluster nodes must be odd.\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.linTopoNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Topology Configuration\n                        </p>\n                        <Checkbox\n                            onChange={this.onChange}\n                            checked={\n                                this.props.getOriginState(\n                                    'servicesRegistrationMachineEnvironment'\n                                ) === 'MULTIPLE'\n                            }\n                        >\n                            Enable Multiple Machine Environment\n                        </Checkbox>\n                        {clusterForm}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\nconst TopologyConfig = Form.create({\n    name: 'topologyConfiguration'\n})(TopologyConfiguration);\n\nexport default TopologyConfig;\n","/**\n * @file The feature selection component. It returns a view that give user the opportunity to select the features they\n * want to install.\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport { Form, Divider, Row, Col, Tree, Checkbox } from 'antd';\nimport React from 'react';\n//data & funcs\nimport featureDependencies from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomFeatureDependencies.json';\nimport { featureKey2StateMap } from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomMaps';\nimport {\n    createTree,\n    initialMaps,\n    checkNode,\n    uncheckNode,\n    getInitialCheckedKeys,\n    selectAll,\n    unselectAll\n} from '../../../../Utils/CreateTree';\n//component\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport SelectAllButtonBar from '../../../../ButtonBar/SelectAllButtonBar/SelectAllButtonBar';\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n\nclass FeatureSelection extends React.Component {\n    /**\n     * Contains 5 maps to control the checkbox tree\n     * @type {Object}\n     */\n    maps = {\n        /**\n         * A map to mapping nodes and their children\n         * key: nodeKey, value: [nodeKey, nodeKey, ...]\n         * @type {Map}\n         */\n        childrenMap: new Map(),\n        /**\n         * A map to mapping nodes and their parents\n         * key: nodeKey, value: [nodeKey, nodeKey, ...]\n         * @type {Map}\n         */\n        parentMap: new Map(),\n\n        /**\n         * A map to mapping nodes and their dependencies\n         * key: nodeKey, value: [nodeKey, nodeKey, ...]\n         * @type {Map}\n         */\n        dependencyMap: new Map(),\n\n        /**\n         * A map to store the disable status of each node\n         * key: nodeKey, value: boolean\n         * if value is true, the node will be set as disSelectable,\n         * false otherwise\n         * @type {Map}\n         */\n        disSelectableMap: new Map(),\n\n        /**\n         *  Mapping the key of TreeNode to states in WindowsInstall.js\n         * the key is the value of 'key' for each TreeNode in FeatureSelection Page\n         * the value is the corresponding state of that TreeNode\n         * @type {Map}\n         */\n        feature2StateMap: featureKey2StateMap\n    };\n\n    /**\n     * An Array to preset the initial checked keys for the checkboxes\n     * @type {Array}\n     */\n    defaultCheckedKeys = null;\n\n    nextStep = () => {\n        if (this.checkedKeys.checked.length > 0) {\n            this.props.nextStep();\n        } else {\n            this.showErrorWarning();\n            this.forceUpdate();\n        }\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     * Show the Error Warning\n     */\n    showErrorWarning = () => {\n        this.featureContainerStyle = [\n            commonClasses.featureScrollableContainer,\n            commonClasses.featureScrollableContainerError\n        ];\n        this.btnBarStyle = commonClasses.selectBtnBarError;\n        this.showErrorMsg = true;\n    };\n\n    /**\n     * Remove the Error Warning\n     */\n    removeErrorWarning = () => {\n        this.featureContainerStyle = commonClasses.featureScrollableContainer;\n        this.btnBarStyle = commonClasses.selectBtnBar;\n        this.showErrorMsg = false;\n    };\n\n    /**\n     * To handle the special cases for the installation on Windows Platform when do the checking action\n     * @param {String} nodeKey the unique id of the TreeNode\n     * @param {Array} checkedKeys the array that 'antd' treeSelect use to control the UI\n     */\n    specialCheckingCaseHandler = (nodeKey, checkedKeys) => {\n        // 1.1, 1.2, 1.7, 1.8 are required if any of 1.x checked\n        if (nodeKey.match(/^1$|^1\\..$/)) {\n            if (!checkedKeys.checked.includes('1.1')) {\n                // no corresponding state for this product\n                checkedKeys.checked.push('1.1');\n            }\n            if (!checkedKeys.checked.includes('1.2')) {\n                // no corresponding state for this product\n                checkedKeys.checked.push('1.2');\n            }\n            if (!checkedKeys.checked.includes('1.7')) {\n                // no corresponding state for this product\n                checkedKeys.checked.push('1.7');\n            }\n            if (!checkedKeys.checked.includes('1.8')) {\n                // no corresponding state for this product\n                checkedKeys.checked.push('1.8');\n            }\n            this.maps.disSelectableMap.set('1.1', true);\n            this.maps.disSelectableMap.set('1.2', true);\n            this.maps.disSelectableMap.set('1.7', true);\n            this.maps.disSelectableMap.set('1.8', true);\n            //19.1 and 19.2 can't be checked alone\n        } else if (nodeKey.match(/^19$|^19\\..$/)) {\n            if (!checkedKeys.checked.includes('19.1')) {\n                checkedKeys.checked.push('19.1');\n                this.props.setOriginState(\n                    featureKey2StateMap.get('19.1'),\n                    true\n                );\n            }\n            if (!checkedKeys.checked.includes('19.2')) {\n                checkedKeys.checked.push('19.2');\n                this.props.setOriginState(\n                    featureKey2StateMap.get('19.2'),\n                    true\n                );\n            }\n\n            this.maps.disSelectableMap.set('19.1', true);\n            this.maps.disSelectableMap.set('19.2', true);\n        } else if (nodeKey === '7.3') {\n            if (checkedKeys.checked.includes('7.3.1')) {\n                checkedKeys.checked.splice(\n                    checkedKeys.checked.indexOf('7.3.1'),\n                    1\n                );\n                this.props.setOriginState(\n                    featureKey2StateMap.get('7.3.1'),\n                    false\n                );\n            }\n        }\n        // 2, 7, 14 has internal dependencies, but no external dependency.\n        this.maps.disSelectableMap.set('2', false);\n        this.maps.disSelectableMap.set('7', false);\n        this.maps.disSelectableMap.set('14', false);\n    };\n\n    /**\n     * To handle the special cases for the installation on Windows Platform when do the unChecking action\n     * @param {String} nodeKey the unique id of the TreeNode\n     * @param {Object} checkedKeys the object that 'antd' treeSelect use to control the UI\n     */\n    specialUnCheckingCaseHandler = (nodeKey, checkedKeys) => {\n        if (nodeKey === '1') {\n            this.maps.disSelectableMap.set('1.1', false);\n            this.maps.disSelectableMap.set('1.2', false);\n            this.maps.disSelectableMap.set('1.7', false);\n            this.maps.disSelectableMap.set('1.8', false);\n        } else if (nodeKey === '19') {\n            this.maps.disSelectableMap.set('19.1', false);\n            this.maps.disSelectableMap.set('19.2', false);\n        } else if (nodeKey === '7.3.1') {\n            // Architect and Function Plugin Special\n            if (!checkedKeys.checked.includes('7.3')) {\n                checkedKeys.checked.push('7.3');\n                this.props.setOriginState(featureKey2StateMap.get('7.3'), true);\n            }\n            if (!checkedKeys.checked.includes('7')) {\n                // 7 has no corresponding state\n                checkedKeys.checked.push('7');\n            }\n        }\n    };\n\n    /**\n     * event triggered when checkbox is being checked or unchecked.\n     * if the box is being checked, make all of its children and dependencies checked. The dependencies should be disSelectable unless the root node has been unchecked\n     * if the box is being unchecked, uncheck all of its children. Set its dependencies selectable\n     * @event\n     * @param {Object} checkedKeys the object that 'antd' treeSelect use to control the UI\n     * @param {string} info  the information of the node that trigger this event\n     */\n    onCheck = (checkedKeys, info) => {\n        let nodeKey = info.node.props.eventKey;\n        if (info.checked === true) {\n            checkNode(nodeKey, checkedKeys, this.maps, this.props);\n            this.specialCheckingCaseHandler(nodeKey, checkedKeys);\n        } else {\n            uncheckNode(nodeKey, checkedKeys, this.maps, this.props);\n            this.specialUnCheckingCaseHandler(nodeKey, checkedKeys);\n        }\n\n        /*If none products checked and the error message showed, the next\n          onCheck call must be the user checked something, so remove the error*/\n        if (this.showErrorMsg) {\n            this.removeErrorWarning();\n        }\n    };\n\n    constructor(props) {\n        super(props);\n        // An object to control the status of checkboxes in the tree\n        this.checkedKeys = {};\n        this.checkedKeys.checked = [];\n        initialMaps(featureDependencies, '', this.maps); // default root key ''\n        getInitialCheckedKeys(\n            this.checkedKeys,\n            this.maps,\n            this.specialCheckingCaseHandler,\n            this.props\n        );\n\n        // Control error message when non product selected and tried to go next\n        this.featureContainerStyle = commonClasses.featureScrollableContainer;\n        this.btnBarStyle = commonClasses.selectBtnBar;\n        this.showErrorMsg = false;\n    }\n\n    render() {\n        let downloadOpenSourceSoftware = this.props.getOriginState(\n            'mySQLSelect'\n        ) ? (\n            <div>\n                <br />\n                <b>\n                    Option1(Target Machine Internet Connection Required):\n                </b>{' '}\n                Check the box to agree to download the installation files on\n                your target machine\n                <br />\n                <Checkbox\n                    onChange={e => {\n                        this.props.setOriginState(\n                            'agreeToDownloadOpenSourceSoftware',\n                            e.target.checked\n                        );\n                    }}\n                    checked={this.props.getOriginState(\n                        'agreeToDownloadOpenSourceSoftware'\n                    )}\n                >\n                    Agree to download Open Source Software\n                </Checkbox>\n                <br />\n                <br />\n                <p>\n                    <b>\n                        Option2(Target Machine No Internet Connection Required):\n                    </b>{' '}\n                    Follow the instructions{' '}\n                    <a\n                        href=\"https://community.microstrategy.com/s/article/Download-Open-Source-Software-for-Windows-Installation\"\n                        target=\"_blank\"\n                    >\n                        here\n                    </a>{' '}\n                    to manually download the installation files, and save them\n                    to your 'C:\\Users\\[Username]\\Downloads' folder.\n                </p>\n            </div>\n        ) : null;\n\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winFeatureSelectNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Feature Selection\n                        </p>\n                        <Tree\n                            checkedKeys={this.checkedKeys}\n                            className={this.featureContainerStyle}\n                            checkable\n                            checkStrictly\n                            onCheck={(checkedKeys, e) =>\n                                this.onCheck(this.checkedKeys, e)\n                            }\n                        >\n                            {createTree(\n                                featureDependencies,\n                                this.maps.disSelectableMap\n                            )}\n                        </Tree>\n                        <SelectAllButtonBar\n                            styleName={this.btnBarStyle}\n                            showErrorMsg={this.showErrorMsg}\n                            selectAll={() => {\n                                selectAll(\n                                    this.checkedKeys,\n                                    this.maps,\n                                    this.specialCheckingCaseHandler,\n                                    this.props\n                                );\n                                // remove warning if exists\n                                if (this.showErrorMsg) {\n                                    this.removeErrorWarning();\n                                }\n                            }}\n                            unselectAll={() => {\n                                unselectAll(\n                                    this.checkedKeys,\n                                    this.maps,\n                                    this.specialUnCheckingCaseHandler,\n                                    this.props\n                                );\n                            }}\n                        />\n                        <div className=\"info-tag\">\n                            <img\n                                className=\"info-icon\"\n                                alt=\"info icon\"\n                                src={require('../../../../../assets/Icons/info.svg')}\n                            />\n                            The Destination folder cannot be manipulated by\n                            response file so far!\n                        </div>\n                        {downloadOpenSourceSoftware}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nexport default FeatureSelection;\n","/**\n * @file Component contains the input UI for Identity Configuration\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\nimport { Divider, Form, Input, Checkbox, Row, Col } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 3;\n\nclass IdentityConfiguration extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .sslCertificate) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections.smptServer) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .authenticate) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections.fqdn) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winIdentityNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Identity Configuration\n                        </p>\n                        <p className={commonClasses.headlineSub}>\n                            SSL Certificate\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections.sslCertificate\n                        )}\n\n                        <p className={commonClasses.headlineSub}>\n                            Email (SMTP Server)\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections.smptServer\n                        )}\n                        <Checkbox\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    'smtpUseSSL',\n                                    e.target.checked\n                                );\n                            }}\n                            checked={this.props.getOriginState('smtpUseSSL')}\n                        >\n                            Use SSL\n                        </Checkbox>\n                        <p className={commonClasses.headlineSub}>\n                            SMTP Server Authentication [Optional]\n                        </p>\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections.authenticate\n                        )}\n                        <p className={commonClasses.headlineSub}>\n                            Fully Qualified Domain Name\n                        </p>\n\n                        {this.generateFormContent(\n                            pageObjects[PAGE_NUMBER].formSections.fqdn\n                        )}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst IdentitySetting = Form.create({\n    name: 'identityConfiguration'\n})(IdentityConfiguration);\nexport default IdentitySetting;\n","/**\n * @file The Component contains the input for Intelligence Server Configuration\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport React from 'react';\nimport { Form, Input, Checkbox, Row, Col, Divider } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\n//components\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport 'antd/dist/antd.css';\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 8;\n\nclass IntelligenceServerConfiguration extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     * To compare the password toward previous input password,\n     * this is a function provided by 'antd' form validator\n     * @param {Object} rule required parameter for the form validator\n     * @param {String} value the current field value\n     * @param {callback} callback function*\n     */\n    compareToISPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('isPassword')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .iServerConfig) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        let isSkipAccountSetting = this.props.getOriginState(\n            'isSkipAccountSetting'\n        );\n        let isAccountSetting = null;\n\n        if (!isSkipAccountSetting) {\n            // confirmation box cannot been generated by the function, put it here manually\n            isAccountSetting = (\n                <div>\n                    {this.generateFormContent(\n                        pageObjects[PAGE_NUMBER].formSections.iServerConfig\n                    )}\n                    <Form.Item label=\"Confirmation:\">\n                        {getFieldDecorator('isConfirmation', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Please input your Confirmation!',\n                                    whitespace: true\n                                },\n                                {\n                                    validator: this.compareToISPassword\n                                }\n                            ]\n                        })(<Input.Password />)}\n                    </Form.Item>\n                </div>\n            );\n        }\n\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winIntelligNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Intelligence Server Configuration\n                        </p>\n                        <div>\n                            <Checkbox\n                                onChange={e => {\n                                    this.props.setOriginState(\n                                        'isSkipAccountSetting',\n                                        e.target.checked\n                                    );\n                                    // if unchecked, set all the nodes blank\n                                    if (e.target.checked) {\n                                        this.props.setOriginState(\n                                            'isLogin',\n                                            ''\n                                        );\n                                        this.props.setOriginState(\n                                            'isDomain',\n                                            ''\n                                        );\n                                        this.props.setOriginState(\n                                            'isPassword',\n                                            ''\n                                        );\n                                    }\n                                }}\n                                checked={this.props.getOriginState(\n                                    'isSkipAccountSetting'\n                                )}\n                            >\n                                Do not set the Intelligence service account\n                                (Default as System account)\n                            </Checkbox>\n                            {isAccountSetting}\n                        </div>\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst IntelligenceServerSetting = Form.create({\n    name: 'intelligenceServerConfiguration'\n})(IntelligenceServerConfiguration);\nexport default IntelligenceServerSetting;\n","/**\n * @file The Component contains the input for Narrowcast Server Configuration\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport React from 'react';\nimport { Form, Input, Checkbox, Row, Col, Divider } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\n//components\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport 'antd/dist/antd.css';\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 9;\n\nclass NarrowcastServerConfiguration extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     * To compare the password toward previous input password,\n     * this is a function provided by 'antd' form validator\n     * @param {Object} rule required parameter for the form validator\n     * @param {String} value the current field value\n     * @param {callback} callback function*\n     */\n    compareToNSPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('nsPassword')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .nsServerConfig) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        let nsSkipAccountSetting = this.props.getOriginState(\n            'nsSkipAccountSetting'\n        );\n        let nsAccountSetting = null;\n\n        if (!nsSkipAccountSetting) {\n            nsAccountSetting = (\n                <div>\n                    {this.generateFormContent(\n                        pageObjects[PAGE_NUMBER].formSections.nsServerConfig\n                    )}\n                    <Form.Item label=\"Confirmation:\">\n                        {getFieldDecorator('nsConfirmation', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Please input your Confirmation!',\n                                    whitespace: true\n                                },\n                                {\n                                    validator: this.compareToNSPassword\n                                }\n                            ]\n                        })(<Input.Password />)}\n                    </Form.Item>\n                </div>\n            );\n        }\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winNarrowcastNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Narrowcast Server Configuration\n                        </p>\n                        <div>\n                            <Checkbox\n                                onChange={e => {\n                                    this.props.setOriginState(\n                                        'nsSkipAccountSetting',\n                                        e.target.checked\n                                    );\n                                    // if unchecked, set all the nodes blank\n                                    if (e.target.checked) {\n                                        this.props.setOriginState(\n                                            'nsLogin',\n                                            ''\n                                        );\n                                        this.props.setOriginState(\n                                            'nsDomain',\n                                            ''\n                                        );\n                                        this.props.setOriginState(\n                                            'nsPassword',\n                                            ''\n                                        );\n                                    }\n                                }}\n                                checked={this.props.getOriginState(\n                                    'nsSkipAccountSetting'\n                                )}\n                            >\n                                Do not set the Narrowcast service account\n                                (Default as System account)\n                            </Checkbox>\n                            {nsAccountSetting}\n                        </div>\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst NarrowcastServerSetting = Form.create({\n    name: 'narrowcastServerConfiguration'\n})(NarrowcastServerConfiguration);\nexport default NarrowcastServerSetting;\n","/**\n * @file The Component contains the input for Office Configuration\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\nimport { Form, Input, Checkbox, Row, Col, Divider } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\n//components\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport 'antd/dist/antd.css';\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 7;\n\nclass OfficeConfiguration extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections\n            .webServiceURL) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    render() {\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winOfficeNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Office Configuration\n                        </p>\n                        <div>\n                            {this.generateFormContent(\n                                pageObjects[PAGE_NUMBER].formSections\n                                    .webServiceURL\n                            )}\n                        </div>\n                        <Checkbox\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    'configureExcel',\n                                    e.target.checked\n                                );\n                            }}\n                            checked={this.props.getOriginState(\n                                'configureExcel'\n                            )}\n                        >\n                            MicroSoft Excel\n                        </Checkbox>\n                        <Checkbox\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    'configurePowerPoint',\n                                    e.target.checked\n                                );\n                            }}\n                            checked={this.props.getOriginState(\n                                'configurePowerPoint'\n                            )}\n                        >\n                            MicroSoft PowerPoint\n                        </Checkbox>\n                        <Checkbox\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    'configureWord',\n                                    e.target.checked\n                                );\n                            }}\n                            checked={this.props.getOriginState('configureWord')}\n                        >\n                            MicroSoft Word\n                        </Checkbox>\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst OfficeConfigurationSetting = Form.create({\n    name: 'officeConfiguration'\n})(OfficeConfiguration);\n\nexport default OfficeConfigurationSetting;\n","/**\n * @file The Component combines the input for Portal and MDX Virtual Directory Setting\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\nimport { Form, Input, Row, Col, Divider } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\n//css\nimport 'antd/dist/antd.css';\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 6;\n\nclass PortalMDXVDS extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections.portalVDS) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections.mdxVDS) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        //Blog for Subscription Portal Setting\n        const portalSetting = this.generateFormContent(\n            pageObjects[PAGE_NUMBER].formSections.portalVDS\n        );\n\n        //Blog for MDX Cube Provider Setting\n        const mdxSetting = this.generateFormContent(\n            pageObjects[PAGE_NUMBER].formSections.mdxVDS\n        );\n\n        return (\n            // The blog is controlled by whether these product selected\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winPortalMDXNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Subscription Portal & MDX Virtual Directory\n                            Configuration\n                        </p>\n                        <div>\n                            {this.props.getOriginState(\n                                'subscriptionPortalSelect'\n                            )\n                                ? portalSetting\n                                : null}\n                            {this.props.getOriginState('mdxCubeProviderSelect')\n                                ? mdxSetting\n                                : null}\n                        </div>\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst PortalMDXVDSSetting = Form.create({\n    name: 'portalMDXVDS'\n})(PortalMDXVDS);\nexport default PortalMDXVDSSetting;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonBar\":\"CommonCss_buttonBar__RGtSk\",\"buttons\":\"CommonCss_buttons__1t1Gh\",\"buttonBack\":\"CommonCss_buttonBack__2e0Fn\",\"buttonNext\":\"CommonCss_buttonNext__3jC4K\",\"featureScrollableContainer\":\"CommonCss_featureScrollableContainer__1KZ5U\",\"featureScrollableContainerError\":\"CommonCss_featureScrollableContainerError__wp76i\",\"summaryContainer\":\"CommonCss_summaryContainer__3jaf5\",\"ant-tree-title\":\"CommonCss_ant-tree-title__1R5TC\",\"selectBtnBar\":\"CommonCss_selectBtnBar__2hl3_\",\"btnBarErrorMsg\":\"CommonCss_btnBarErrorMsg__2FzPJ\",\"selectBtnBarError\":\"CommonCss_selectBtnBarError__1kFJi\",\"selectBarButtons\":\"CommonCss_selectBarButtons__2A5Gd\",\"description\":\"CommonCss_description__1W3sU\",\"form\":\"CommonCss_form__29GER\",\"colContent\":\"CommonCss_colContent__DIdBf\",\"colPics\":\"CommonCss_colPics__2Fu3e\",\"colNav\":\"CommonCss_colNav__3bbqi\",\"inputBox\":\"CommonCss_inputBox__1L_P7\",\"headlineTop\":\"CommonCss_headlineTop__2XpbL\",\"headlineSub\":\"CommonCss_headlineSub__13ZwV\",\"divider\":\"CommonCss_divider__l-gM0\",\"winCustomerNavHeight\":\"CommonCss_winCustomerNavHeight__1vEsX\",\"winFeatureSelectNavHeight\":\"CommonCss_winFeatureSelectNavHeight__1-aDU\",\"winTopoNavHeight\":\"CommonCss_winTopoNavHeight__2n8so\",\"winIdentityNavHeight\":\"CommonCss_winIdentityNavHeight__FxpNf\",\"winTeleNavHeight\":\"CommonCss_winTeleNavHeight__38vKb\",\"winWebMobileNavHeight\":\"CommonCss_winWebMobileNavHeight__xWyXX\",\"winPortalMDXNavHeight\":\"CommonCss_winPortalMDXNavHeight__3rZIK\",\"winOfficeNavHeight\":\"CommonCss_winOfficeNavHeight__2VHbr\",\"winIntelligNavHeight\":\"CommonCss_winIntelligNavHeight__l4e-2\",\"winNarrowcastNavHeight\":\"CommonCss_winNarrowcastNavHeight__2lXnU\",\"winSummaryNavHeight\":\"CommonCss_winSummaryNavHeight__1O8xE\",\"LinCustomerNavHeight\":\"CommonCss_LinCustomerNavHeight__2yIir\",\"linFeatureNavHeight\":\"CommonCss_linFeatureNavHeight__33FD-\",\"linIdentity1NavHeight\":\"CommonCss_linIdentity1NavHeight__1xQ0M\",\"linIdentity2NavHeight\":\"CommonCss_linIdentity2NavHeight__29XGj\",\"linIdentity3NavHeight\":\"CommonCss_linIdentity3NavHeight__3PPKW\",\"linIdentityManagerNavHeight1\":\"CommonCss_linIdentityManagerNavHeight1__3lzkA\",\"linIdentityManagerNavHeight2\":\"CommonCss_linIdentityManagerNavHeight2__aW_DH\",\"linTeleNavHeight\":\"CommonCss_linTeleNavHeight__CdPRQ\",\"linTopoNavHeight\":\"CommonCss_linTopoNavHeight___qk2C\",\"linRegServiceNavHeight\":\"CommonCss_linRegServiceNavHeight__2AnvS\",\"linSummaryNavHeight\":\"CommonCss_linSummaryNavHeight__3ADfb\"};","/**\n * @file The Component contains the input for Telemetry Configuration\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\nimport { Form, Input, Icon, Button, Checkbox, Row, Col, Divider } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\n//components\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 4;\n\nclass TelemetryConfiguration extends React.Component {\n    constructor(props) {\n        super(props);\n        this.uuid = 0;\n    }\n    nextStep = () => {\n        if (this.props.getOriginState('telemetryServerCluster')) {\n            this.props.form.validateFieldsAndScroll((err, values) => {\n                if (!err) {\n                    const { keys, domains } = values;\n                    this.props.setOriginState(\n                        'telemetryServerRemoteNodes',\n                        keys.map(key => domains[key])\n                    );\n                    this.props.nextStep();\n                }\n            });\n        } else {\n            this.props.nextStep();\n        }\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     * Remove one field from the form\n     * @param {number} k the key ID of the field you want to remove\n     */\n    remove = k => {\n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        if (keys.length === 1) {\n            return;\n        }\n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k)\n        });\n    };\n\n    /**\n     * Add one field to the form\n     */\n    add = () => {\n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(this.uuid++);\n        form.setFieldsValue({\n            keys: nextKeys\n        });\n    };\n\n    getInitialKeys() {\n        const telemetryServerRemoteNodes = this.props.getOriginState(\n            'telemetryServerRemoteNodes'\n        );\n        let nextKeys = [];\n        for (let i = 0; i < telemetryServerRemoteNodes.length; i++) {\n            nextKeys = nextKeys.concat(this.uuid);\n            this.uuid = this.uuid + 1;\n        }\n        return nextKeys;\n    }\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    componentDidMount() {\n        const { setFieldsValue } = this.props.form;\n        const telemetryServerRemoteNodes = this.props.getOriginState(\n            'telemetryServerRemoteNodes'\n        );\n        let domains = [];\n        for (let i = 0; i < telemetryServerRemoteNodes.length; i++) {\n            domains = domains.concat(telemetryServerRemoteNodes[i]);\n        }\n        setFieldsValue({\n            domains\n        });\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections.localNode) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        let clusterForm = null;\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        const initKeys = getFieldValue('keys');\n        const InitialKeys = initKeys || this.getInitialKeys();\n        getFieldDecorator('keys', { initialValue: InitialKeys });\n        const keys = getFieldValue('keys');\n        const remoteServers = keys.map((k, index) => (\n            <Form.Item\n                label={\n                    index === 0\n                        ? 'Enter the Fully Qualified Domain Name of all the remote Telemetry Servers'\n                        : ''\n                }\n                required={false}\n                key={k}\n            >\n                {getFieldDecorator(`domains[${k}]`, {\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: 'Please input domain name or IP address.',\n                            pattern:\n                                '^((\\\\*)|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|((\\\\*\\\\.)?([a-zA-Z0-9-]+\\\\.){0,5}[a-zA-Z0-9-][a-zA-Z0-9-]+\\\\.[a-zA-Z]{2,63}?))$'\n                        }\n                    ]\n                })(<Input style={{ width: '60%', marginRight: 8 }} />)}\n                {keys.length > 1 ? (\n                    <Icon\n                        className=\"dynamic-delete-button\"\n                        type=\"minus-circle-o\"\n                        onClick={() => this.remove(k)}\n                    />\n                ) : null}\n            </Form.Item>\n        ));\n\n        if (this.props.getOriginState('telemetryServerCluster')) {\n            clusterForm = (\n                <Form>\n                    {this.generateFormContent(\n                        pageObjects[PAGE_NUMBER].formSections.localNode\n                    )}\n                    <Form.Item>\n                        {remoteServers}\n                        <Button\n                            type=\"dashed\"\n                            onClick={this.add}\n                            style={{ width: '60%' }}\n                        >\n                            <Icon type=\"plus\" /> Add Remote Server\n                        </Button>\n                    </Form.Item>\n                </Form>\n            );\n        }\n\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winTeleNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Telemetry Configuration\n                        </p>\n                        <Checkbox\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    'telemetryServerCluster',\n                                    e.target.checked\n                                );\n                                // if unchecked, set all the nodes blank\n                                if (!e.target.checked) {\n                                    this.props.setOriginState(\n                                        'telemetryServerLocalNode',\n                                        ''\n                                    );\n\n                                    this.props.setOriginState(\n                                        'telemetryServerRemoteNodes',\n                                        ['', '']\n                                    );\n                                }\n                            }}\n                            checked={this.props.getOriginState(\n                                'telemetryServerCluster'\n                            )}\n                        >\n                            Create a cluster of three or more Telemetry Servers\n                        </Checkbox>\n                        {clusterForm}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\nconst TelemetryConfigurationSetting = Form.create({\n    name: 'telemetryConfiguration'\n})(TelemetryConfiguration);\n\nexport default TelemetryConfigurationSetting;\n","/**\n * @file The Component contains the input for Topology Configuration\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\nimport { Form, Input, Icon, Button, Checkbox, Row, Col, Divider } from 'antd';\n//components\nimport Navigation from '../../../../Navigation/Navigation';\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport 'antd/dist/antd.css';\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport '../../../../Utils/CommonCss.css';\n\nclass TopologyConfiguration extends React.Component {\n    constructor(props) {\n        super(props);\n        this.uuid = 0;\n    }\n\n    nextStep = () => {\n        if (this.props.getOriginState('multipleMachineEnvironment')) {\n            this.props.form.validateFieldsAndScroll((err, values) => {\n                if (!err) {\n                    const { keys, domains } = values;\n                    this.props.setOriginState(\n                        'serversInCluster',\n                        keys.map(key => domains[key])\n                    );\n                    this.props.nextStep();\n                }\n            });\n        } else {\n            this.props.nextStep();\n        }\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    onChange = e => {\n        this.props.setOriginState('multipleMachineEnvironment', e.target.value);\n    };\n\n    /**\n     * Remove one field from the form\n     * @param {number} k the key ID of the field you want to remove\n     */\n    remove = k => {\n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        if (keys.length === 1) {\n            return;\n        }\n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k)\n        });\n    };\n\n    /**\n     * Add one field to the form\n     */\n    add = () => {\n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(this.uuid++);\n        form.setFieldsValue({\n            keys: nextKeys\n        });\n    };\n\n    /**\n     * Get the initial keys from a state, and return the keys\n     * @return the initial keys\n     */\n    getInitialKeys() {\n        const serversInCluster = this.props.getOriginState('serversInCluster');\n        let nextKeys = [];\n        for (let i = 0; i < serversInCluster.length; i++) {\n            nextKeys = nextKeys.concat(this.uuid);\n            this.uuid = this.uuid + 1;\n        }\n        return nextKeys;\n    }\n\n    componentDidMount() {\n        const { setFieldsValue } = this.props.form;\n        const serversInCluster = this.props.getOriginState('serversInCluster');\n        let domains = [];\n        for (let i = 0; i < serversInCluster.length; i++) {\n            domains = domains.concat(serversInCluster[i]);\n        }\n\n        setFieldsValue({\n            domains\n        });\n    }\n\n    render() {\n        let clusterForm = null;\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        const initKeys = getFieldValue('keys');\n        const InitialKeys = initKeys || this.getInitialKeys();\n        getFieldDecorator('keys', { initialValue: InitialKeys });\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n            <Form.Item\n                label={\n                    index === 0\n                        ? 'Enter the fully qualified domain name for one Intelligence machine:'\n                        : ''\n                }\n                required={false}\n                key={k}\n                className=\"form-input-box\"\n            >\n                {getFieldDecorator(`domains[${k}]`, {\n                    rules: [\n                        {\n                            required: true,\n                            whitespace: true,\n                            message:\n                                'Please input domain name or IP address.',\n                            pattern:\n                                '^((\\\\*)|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|((\\\\*\\\\.)?([a-zA-Z0-9-]+\\\\.){0,5}[a-zA-Z0-9-][a-zA-Z0-9-]+\\\\.[a-zA-Z]{2,63}?))$'\n                        }\n                    ]\n                })(<Input style={{ width: '60%', marginRight: 8 }} />)}\n                {keys.length > 1 ? (\n                    <Icon\n                        className=\"dynamic-delete-button\"\n                        type=\"minus-circle-o\"\n                        onClick={() => this.remove(k)}\n                    />\n                ) : null}\n            </Form.Item>\n        ));\n        if (this.props.getOriginState('multipleMachineEnvironment')) {\n            clusterForm = (\n                <div>\n                    {formItems}\n                    <Form.Item>\n                        <Button\n                            type=\"dashed\"\n                            onClick={this.add}\n                            style={{ width: '60%' }}\n                        >\n                            <Icon type=\"plus\" /> Add field\n                        </Button>\n                    </Form.Item>\n                    <div className=\"info-tag\">\n                        <img\n                            className=\"info-icon\"\n                            alt=\"info icon\"\n                            src={require('../../../../../assets/Icons/info.svg')}\n                        />\n                        The number of the cluster nodes must be odd.\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winTopoNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Topology Configuration\n                        </p>\n                        <Checkbox\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    'multipleMachineEnvironment',\n                                    e.target.checked\n                                );\n                                // if unchecked, set all the nodes blank\n                                if (!e.target.checked) {\n                                    this.props.setOriginState(\n                                        'serversInCluster',\n                                        ['']\n                                    );\n                                }\n                            }}\n                            checked={this.props.getOriginState(\n                                'multipleMachineEnvironment'\n                            )}\n                        >\n                            Enable Multiple Machine Environment\n                        </Checkbox>\n                        {clusterForm}\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\nconst TopologyConfig = Form.create({\n    name: 'topologyConfiguration'\n})(TopologyConfiguration);\n\nexport default TopologyConfig;\n","/**\n * @file The Component combines the input for Web and Mobile Virtual Directory Setting\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\nimport React from 'react';\nimport { Form, Input, Row, Col, Divider } from 'antd';\n//data & funcs\nimport { setFormFieldValue } from '../../../../Utils/CommonFunc';\nimport pageObjects from '../../../../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json';\n//components\nimport ButtonBar from '../../../../ButtonBar/MainButtonBar/MainButtonBar';\nimport Navigation from '../../../../Navigation/Navigation';\nimport ReferencePicture from '../../../../ReferencePicture/ReferencePicture';\n//css\nimport 'antd/dist/antd.css';\nimport commonClasses from '../../../../Utils/CommonCss.module.css';\nimport '../../../../Utils/CommonCss.css';\n\nconst PAGE_NUMBER = 5;\n\nclass WebMobileVDS extends React.Component {\n    nextStep = () => {\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                this.props.nextStep();\n            }\n        });\n    };\n\n    backStep = () => {\n        this.props.backStep();\n    };\n\n    /**\n     *\n     * Generate a list of form item based on given data\n     * @param {Array} formInfo an array that contains necessary content for each form item\n     * @return {Array} an array of form items that contain input boxes\n     */\n    generateFormContent = formInfo => {\n        const { getFieldDecorator } = this.props.form;\n        return formInfo.map((section, index) => (\n            <Form.Item\n                label={section.label}\n                key={index}\n                className={section.fieldName}\n            >\n                {getFieldDecorator(section.fieldName, {\n                    rules: [\n                        {\n                            required: section.rules[0].required,\n                            message: section.rules[0].message,\n                            whitespace: section.rules[0].whitespace,\n                            pattern: section.rules[0].pattern\n                        }\n                    ]\n                })(\n                    section.passwd ? (\n                        <Input.Password\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    ) : (\n                        <Input\n                            onChange={e => {\n                                this.props.setOriginState(\n                                    section.state,\n                                    e.target.value\n                                );\n                            }}\n                        />\n                    )\n                )}\n            </Form.Item>\n        ));\n    };\n\n    componentDidMount() {\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections.webVDS) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n\n        for (let formInfo of pageObjects[PAGE_NUMBER].formSections.mobileVDS) {\n            setFormFieldValue(formInfo.fieldName, formInfo.state, this.props);\n        }\n    }\n\n    render() {\n        //Blog for Web (ASP .NET) Virtual Directory Setting\n        const webVDSSetting = this.generateFormContent(\n            pageObjects[PAGE_NUMBER].formSections.webVDS\n        );\n\n        //Blog for Mobile (ASP .NET) Virtual Directory Setting\n        const mobileVDSSetting = this.generateFormContent(\n            pageObjects[PAGE_NUMBER].formSections.mobileVDS\n        );\n        return (\n            // The blog is controlled by whether these product selected\n\n            <Form className={commonClasses.form}>\n                <Row type=\"flex\" align=\"top\">\n                    <Col\n                        span={4}\n                        className={[\n                            commonClasses.colNav,\n                            commonClasses.winWebMobileNavHeight\n                        ].join(' ')}\n                    >\n                        <p className={commonClasses.headlineTop}>Steps</p>\n                        <Navigation\n                            validateForm={\n                                this.props.form.validateFieldsAndScroll\n                            }\n                            setOriginState={this.props.setOriginState}\n                            getOriginState={this.props.getOriginState}\n                            steps={this.props.steps}\n                            deepestStep={this.props.deepestStep}\n                            useOs={this.props.useOs}\n                            useMode={this.props.useMode}\n                            useVersion={this.props.useVersion}\n                        />\n                    </Col>\n\n                    <Col span={12} className={commonClasses.colContent}>\n                        <p className={commonClasses.headlineTop}>\n                            Web & Mobile Virtual Directory Configuration\n                        </p>\n                        <div>\n                            {this.props.getOriginState('webServerASPNETSelect')\n                                ? webVDSSetting\n                                : null}\n                            {this.props.getOriginState('mobileServerASPSelect')\n                                ? mobileVDSSetting\n                                : null}\n                        </div>\n                    </Col>\n\n                    <Divider\n                        className={commonClasses.divider}\n                        type=\"vertical\"\n                        orientation=\"right\"\n                    />\n                    <Col span={7} className={commonClasses.colPics}>\n                        <p className={commonClasses.headlineTop}>\n                            Reference Pictures\n                        </p>\n                        <ReferencePicture\n                            steps={this.props.steps}\n                            useOs={this.props.useOs}\n                            useVersion={this.props.useVersion}\n                            useMode={this.props.useMode}\n                            getOriginState={this.props.getOriginState}\n                        />\n                    </Col>\n                </Row>\n                <ButtonBar\n                    useOs={this.props.useOs}\n                    clickNext={this.nextStep}\n                    clickBack={this.backStep}\n                />\n            </Form>\n        );\n    }\n}\n\nconst WebMobileVDSSetting = Form.create({\n    name: 'webMobileVDS'\n})(WebMobileVDS);\nexport default WebMobileVDSSetting;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport commonClasses from '../../Utils/CommonCss.module.css';\nimport 'antd/dist/antd.css';\nimport {  Button } from 'antd';\n\n\nconst buttonBar = props => (\n    <div className={commonClasses.buttonBar}>\n        <div className={commonClasses.description}>\n            You are creating a configuration file for\n            {props.useOs === 'windows' ? (\n                <img\n                    src={require('../../../assets/Icons/Windows.png')}\n                    alt=\"Operating System \"\n                />\n            ) : (\n                <img\n                    src={require('../../../assets/Icons/Linux.png')}\n                    alt=\"Operating System \"\n                />\n            )}\n        </div>\n        <div className={commonClasses.buttons}>\n            <Button\n                className={commonClasses.buttonBack}\n                type=\"default\"\n                onClick={props.clickBack}\n            >\n                Back\n            </Button>\n            <Button\n                className={commonClasses.buttonNext}\n                type=\"primary\"\n                onClick={props.clickNext}\n            >\n                Next\n            </Button>\n        </div>\n    </div>\n);\n\nexport default buttonBar\n","const comment = {};\n\ncomment.licenseAgreementAccept = `\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Options File Template\n#\n# This file is a options file (i.e., response file) for the MicroStrategy\n# Installer. The options file is loaded by default if it is named \"options.txt\"\n# and it is located in the same directory as setup.sh. \n# An alternative options file can be specified by using \"-options\" on \n# the command line.\n# \n# The settings that can be specified for the wizard are listed below. To use\n# this template, follow these steps:\n# \n#    1. Enable a setting below by removing leading '###' characters from the\n#    line (search for '###' to find settings you can change).\n# \n#    2. Specify a value for a setting by replacing the character's '<value>'.\n#    Read each setting's documentation for information on how to specify its\n#    value.\n# \n#    3. Save the changes to the file.\n#\n#    4. Launch the installation using the setup.sh script\n#  \n#\n# We are working to improve our Silent and Automated installation use-cases.  Feedback on \n# Silent or Automated installations is welcomed via the MicroStrategy Community (Platform\n# Services > Platform > Secure Enterprise - Linux) or via Technical Support to the Deployment Team.\n#\n# Here is a direct link (as of June 2017) to the Community sub-section on platform deployment:\n# https://success.microstrategy.com/s/topic/0TO44000000FlkIGAS/Secure%20Enterprise%20-%20Linux%20-%20U092?tabset-215d6=1\n#\n#\n\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n#   Silent Installation.\n#\n#   The options file is required for silent installations, specify -silent \n#    -options <file-name> as a command line arguments to the wizard, where\n#    <file-name> is the name of this options file.\n#\n#       For example:\n#\n#\tsetup.sh -silent -options options.txt\n#\n\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n# \n#\tSystem Requirements Warnings\n#\n#\tThe silent installation will install MicroStrategy even if some system \n# \trequirements are not completely meet. \n#\tPlease read the release notes file and configure your system so it meets the \n# \trequirements before running this setup and check the installation log after \n#\tthe installation is complete.\n# \t \n\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Installation Properties\n#\n# Please specify general installation properties.\n\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy License Agreement Default Selection\n#\n# In the MicroStrategy Installation Wizard, it is legally required to accept the\n# MicroStrategy License Agreement in order to proceed with the desired installation\n# operation.\n# Use this option to specify the default selected option selected for the License \n# Agreement Dialog. Legal values are:\n#\n#    true\t- Accept the License Agreement\n#    false\t- Do not accept the License Agreement\n#\n# If no option is provided, 'reject' is used as default.\n\n`;\n\n\ncomment.userRegistrationUser = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Customer Information\n#\n# Please specify your name, the name of the company for which you work and the \n# license key.\n\n# User\n`;\n\ncomment.userRegistrationCompany = `\n# Company\n`;\n\ncomment.userRegistrationCdKey = `\n# License Key\n`;\n\n\n\ncomment.installInstance = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Installation Selection\n#\n# For a new Installation, use \"new\" (i.e. install.Instance=new)\n#\n# For an existing Installation, specify its home path.\n# Home path is a directory that identifies an installation and stores \n# configuration files and application launchers (suite.homeDirectory in \n# MicroStrategy Install Locations section). You may refer to <home> tag under \n# <suite>MstrSuite</suite> in mstrinstall.xml.\n#\n#       For example \n#\n#       install.Instance=/home/user/MicroStrategy\n#\n\n`;\n\n\n\ncomment.installOperation = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Operation to perform on instance\n#\n# For a new Installation, Legal values are: \n#    FRESH_INSTALL  - Indicates a new installation will be performed\n#\n# For an existing Installation, Legal values are: \n#    MODIFY            - Indicates the installation will be modified.\n#    REPAIR            - Indicates the installation will be repaired.\n#    UNINSTALL         - Indicates the installation will be uninstalled.\n#    UPGRADE           - Indicates the installation will be upgraded\n#    REMOVE_UPDATE     - Indicates a update package will be removed\n#\n#       For example \n#\n#       install.Operation=MODIFY\n#\n\n`;\n\n\ncomment.suiteHomeDirectory = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Install Locations\n#\n# The install locations of the product. Specify a valid directories into which \n# the product should be installed.\n# It is recommended to specify a different directory for each one of the install \n# locations:\n#\n#  Home    - This directory will store configuration files and application launchers\n#  Install - This directory will store all the binaries and other static files\n#  Log     - Application logs will be created here.\n#\n# NOTE: Special characters (!,%,$,^,\\\\,?,#) and space characters are not valid. All\n# special characters will be ignored.\n\n`;\n\ncomment.intelligenceActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Product Selection State\n#\n# A selection state setting is available for every MicroStrategy product. \n# Legal values are:\n# \n#    true  - Indicates that the product is selected for installation\n#    false - Indicates that the product is not selected for installation\n# \n# The default value for Selection state settings is \"true\".\n#\n# For example, to select \"MicroStrategy Intelligence Universal Edition\"\n# for installation use\n# \n#    Intelligence.active=true\n#\n# All licensed products are selected by default, so in case you want to prevent \n# them from being installed make sure they are unselected too.\n\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Intelligence Universal Edition\n#\n#  MicroStrategy Intelligence Universal Edition will be automatically\n#  selected for installation if any of the following products are selected for\n#  installation:\n#       \"MicroStrategy Report Services Universal\", \n#       \"MicroStrategy OLAP Services Universal\"\n#       \"MicroStrategy Distribution Services\"\n#       \"MicroStrategy Transaction Services\"\n\n# MicroStrategy Intelligence Universal Edition\n`;\n\ncomment.reportServicesActive = `\n#   MicroStrategy Report Services Universal\n`;\n\ncomment.oLAPServicesActive = `\n# MicroStrategy OLAP Services Universal\n`;\n\ncomment.distributionServicesActive = `\n# MicroStrategy Distribution Services\n`;\n\n\ncomment.transactionServicesActive = `\n# MicroStrategy Transaction Services\n`;\n\ncomment.webReporterActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n# MicroStrategy Web Universal\n#\n#  MicroStrategy Web Universal Reporter will be automatically selected for\n#  installation if MicroStrategy Web Universal Analyst is selected.\n#\n#  MicroStrategy Web Universal Reporter & Analyst will be automatically selected\n#  for installation if MicroStrategy Web Universal Professional is selected.\n\n\n# MicroStrategy Web Universal Reporter\n`;\n\ncomment.webAnalystActive = `\n# MicroStrategy Web Universal Analyst\n`;\n\ncomment.webProfessionalActive = `\n# MicroStrategy Web Universal Professional\n`;\n\ncomment.portletsActive = `\n# MicroStrategy Portlets\n`;\n\n\ncomment.gISConnectorsActive = `\n# MicroStrategy GIS Connectors\n`;\n\ncomment.webServicesActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Web Services J2EE\n\n`;\n\n\ncomment.mobileServerActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Mobile Server JSP\n\n`;\n\n\n\ncomment.communityConnectorsActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Community Connectors\n# \n\n`;\n\n\n\ncomment.commandManagerActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Command Manager\n\n`;\n\n\n\ncomment.systemManagerActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy System Manager\n\n`;\n\n\n\ncomment.platformAnalyticsActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Platform Analytics\n\n`;\n\n\n\ncomment.enterpriseManagerActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Enterprise Manager\n\n`;\n\n\n\ncomment.integrityManagerActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Integrity Manager\n\n`;\n\n\n\ncomment.identityServerActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n# MicroStrategy MicroStrategy Identity\n#\n\n# MicroStrategy Identity Server\n`;\n\ncomment.identityManagerActive = `\n#  MicroStrategy Identity Manager\n`;\n\ncomment.identityMobileActive = `\n# MicroStrategy Identity Mobile\n`;\n\n\ncomment.telemetryServerActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Telemetry Server\n\n`;\n\n\n\ncomment.libraryWebMobileActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#  \n# New in 10.9\n# MicroStrategy Library Web & Mobile\n\n`;\n\n\n\ncomment.collaborationActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# New in 10.9\n# MicroStrategy Collaboration\n\n`;\n\n\n\ncomment.certificateStoreActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# New in 11.0\n# MicroStrategy Certificate Store\n\n`;\n\n\ncomment.exportActive = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# New in 11.2\n# MicroStrategy Export\n\n`;\n\n\ncomment.webUniversalDeployDirectory = ` \n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Product Install Location.\n# Use the following values to specify the install location for individual products.\n#\n# Warning: Special (!,%,$,^,\\\\,?,#) and space characters are not valid. All special \n# characters will be ignored.\n\n# Web Universal\n`;\n\ncomment.portletsInstallDirectory = `\n# MicroStrategy Portlets\n`;\n\ncomment.gISConnectorsInstallDirectory = `\n# MicroStrategy GIS Connectors\n`;\n\ncomment.communityConnectorsInstallDirectory = `\n# MicroStrategy Community Data Connectors\n`;\n\ncomment.webServicesInstallDirectory = `\n# MicroStrategy Web Services J2EE\n`;\n\ncomment.mobileServerInstallDirectory = `\n# MicroStrategy Mobile Server JSP \n`;\n\n\ncomment.commandManagerInstallDirectory = `\n# MicroStrategy Command Manager\n`;\n\ncomment.systemManagerInstallDirectory = `\n# MicroStrategy System Manager Install Location\n`;\n\ncomment.platformAnalyticsInstallDirectory = `\n# MicroStrategy Platform Analytics Install Location\n`;\n\ncomment.identityServerInstallDirectory = `\n# MicroStrategy Identity Server\n`;\n\ncomment.identityManagerInstallDirectory = `\n#  MicroStrategy Identity Manager\n`;\n\ncomment.identityMobileInstallDirectory = `\n# MicroStrategy Identity Mobile\n`;\n\ncomment.cpuCountNumber = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# CPU License Information\n#\n# This value should be specified when the license being used for MicroStrategy\n# Intelligence Universal Edition is based on CPUs. Legal values are integers\n# between 1 and either the number of CPUs allowed by the license or the number of \n# CPUs in the machine, whichever is lower. \n#\n# For example to set the number of CPUs to 2, use:\n#\n# cpuCount.number=2\n#\n# To set this options to the maximum value allowed, use:\n#\n# cpuCount.number=maximum\n#\n# The default value for this setting is \"maximum\" \n\n`;\n\n\n\n\ncomment.telemetryServerClusterEnable = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Telemetry Server Configuration\n#\n# This step allows you to cluster the Telemetry Servers that will be used to send usage data to \n# Platform Analytics.\n#\n# If you plan to install three or more Telemetry Servers in your environment, you must check the \n# box below during the installation of each Telemetry Server. Failing to do so will result in \n# manual configuration to create the cluster after the installation.\n# \n# For more information refer to the online help.\n#\n# Please note that Telemetry Server is installed by default when you install and Intelligence\n# or Platform Analytics.\n\n# Create a cluster of three or more Telemetry Servers\n#    true\t- Creates a Telemetry Server cluster\n#    false\t- Configures Telemetry Server as a single node.\n# The default value is false.\n`;\n\n\ncomment.telemetryServerClusterLocalnode = `\n# Provide the Fully Qualified Domain Name of the local Telemetry Server (do not use \"localhost\" \n# or the loopback IP address \"127.0.0.1\")\n`;\n\ncomment.telemetryServerClusterRemotenodes = `\n# Provide the Fully Qualified Domain Name of all the remote Telemetry Servers that you have \n# installed or will install. Separate the Fully Qualified Name using semicolons. \n# For example: node.mydomain.com; othernode.mydomain.com\n`;\n\n\ncomment.identityServerTomcatDir = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Identity Server Information\n#\n# Please specify the information required for the MicroStrategy Identity Server\n# configuration.\n\n# Tomcat directory location for MicroStrategy Identity Server\n`;\n\n\ncomment.identityServerServerDBHost = `\n# MicroStrategy Identity Server installs a database which is a system of record for\n# individual Usher identities. Please provide the configuration parameters for \n# the MicroStrategy Identity Server to communicate with the database with MySQL\n# Community Edition 5.0 or higher.\n`;\n\ncomment.identityServerOverwriteDb = `\n# For new installations use this option to indicate if any existing schema should be \n# dropped or preserved.\n#    true\t- Drop the schema and create a fresh configuration.\n#    false\t- Preserve the schema and upgrade it if necessary.\n# The default value is false.\n`;\n\ncomment.identityServerServerPortOne = `\n# Please specify the information required for setting up a trust-relationship for\n# MicroStrategy Identity Server using the Public-key Infrastructure (PKI).\n# Server (one-way SSL) authentication only - Port\n`;\n\ncomment.identityServerServerPortTwo = `\n# Client and Server (two-way SSL) mutual authentication - Port\n`;\n\ncomment.identityServerServerSslCert = `\n# Public key SSL certificate file (.crt)\n`;\n\ncomment.identityServerServerSslKey = `\n# Private key file (.key)\n`;\n\ncomment.identityServerServerCaCert = `\n# Certification Authority's (CA) certificate file (.pem)\n`;\n\ncomment.identityServerGatewayPort = `\n# Please specify the information required for setting up a trust-relationship for\n# Agent Gateway using the Public-key Infrastructure (PKI).\n# Agent Gateway (one-way SSL) authentication only - Port\n`;\n\ncomment.identityServerGatewayUseSameCert = `\n# Use this option to specify if you want to use the same SSL certificate as MicroStrategy\n# Identity Server.\n#    true\t- Use the same SSL certificates\n#    false\t- Do not use the same SSL certificates\n`;\n\n\ncomment.identityServerGatewaySslCert = `\n# Public key SSL certificate file (.crt)\n`;\n\n\ncomment.identityServerGatewaySslKey = `\n# Private key file (.key)\n`;\n\n\ncomment.identityServerGatewayCaCert = `\n# Certification Authority's (CA) certificate file (.pem)\n`;\n\ncomment.identityManagerApacheDir = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Identity Manager Information\n#\n# Please specify the information required for the MicroStrategy Identity Manager\n# configuration.\n\n# Apache directory location and user credentials for MicroStrategy Identity Manager\n`;\n\ncomment.identityManagerUseSameDBSetting = `\n# MicroStrategy Identity Manager installs a database to manage Usher identities. Please\n# provide the configuration parameters for the MicroStrategy Identity Manager to\n# communicate with the database.\n#\n# Use this option to specify if you want to use the same connection information\n# as MicroStrategy Identity Server.\n#    true\t- Use the same connection\n#    false\t- Do not use the same connection\n`;\n\n\ncomment.identityManagerDBInstance = `\n# Please provide a Database instance name for MicroStrategy Identity Manager.\n`;\n\ncomment.identityManagerOverwriteDb = `\n# For new installations use this option to indicate if any existing database instance  \n# should be dropped or preserved.\n#    true\t- Drop the schema and create a fresh configuration.\n#    false\t- Preserve the schema and upgrade it if necessary.\n# The default value is false.\n`;\n\n\ncomment.servicesRegistrationMachineEnvironment = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Topology Configuration\n#\n# The Workstation Topology helps administrators to monitor and manage services \n# in a MicroStrategy environment.\n\n# Indicate cluster environment.\n#    SINGLE    - Choose this option if this is the only machine where the MicroStrategy \n#               services including Intelligence, Web Universal, Library, Mobile, Telemetry \n#               Server, Platform Analytics, Certificate Store, Identity, and MySQL will be \n#               installed for this environment. No other machines will have any of these \n#               services installed. \n#    MULTIPLE  - Choose this option if the MicroStrategy services listed above will \n#               be installed on multiple machines in this environment. \n#\n# The default value for this setting is \"SINGLE\" \n\n`;\n\n\ncomment.servicesRegistrationServerHosts = `\n# Enter the fully qualified domain name for one Intelligence machine below. \n# To setup a fault tolerant configuration during this installation or later, \n# review the online help. \n# https://www2.microstrategy.com/producthelp/current/InstallConfig/WebHelp/Lang_1033/Content/topology_install.htm\n#\n# Note: This machine must be able to communicate with other machines in this \n# environment on ports 8300 & 8301.\n#\n# Important: During the installation of a multiple machine environment, the value \n# above needs to be entered exactly the same for each machine in the environment.\n\n`;\n\n\ncomment.registerServices = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n# Registering as a service\n#\n# Register MicroStrategy processes as a service so that processes automatically\n# start up after system startup.\n# Legal values are:\n#    true\n#    false\n# Note: Only root users may register processes as a service.\n\n`;\n\ncomment.registerServicesUser = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n# Registering as a service\n#\n# Use this user to start the services (optional)\n\n`;\n\ncomment.intelligenceVisible = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Hide Select Components dialog box\n#\n# Use this option to completely hide the product selection dialog during the\n# execution of the MicroStrategy Installation Wizard. This option can be used \n# in combination with individual product visibility/state options to have better\n# control on the products to be installed/removed. If the dialog is not visible,\n# and no specific visibility/state options have been specified, default values\n# will be used.\n# Legal values for this option are:\n# \n#    true  - Indicates that the Select Components dialog box will be visible\n#    false - Indicates that the Select Components dialog box will be hidden\n# \n# The default value for this setting is \"true\".\n\n# SelectComponents.visible=<value>\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Product Visibility\n#\n# In the MicroStrategy Installation Wizard, the Select Components dialog box \n# contains check boxes to select or clear for products to be installed. You\n# can specify whether you want the following products to be visible to the user. \n# Legal values are:\n# \n#    true  - Indicates that the product is selected for installation\n#    false - Indicates that the product is not selected for installation\n# \n# The default value for Selection state settings is \"true\".\n# \n# If a product is not visible, it will not be installed, \n# independently of the value specified for its selection state (see the\n# Product Selection State section).\n# \n\n# MicroStrategy Intelligence Universal Edition\n`;\n\ncomment.reportServicesVisible = `\n# MicroStrategy Report Services Universal\n`;\n\ncomment.oLAPServicesVisible = `\n# MicroStrategy OLAP Services Universal\n`;\n\n\ncomment.distributionServicesVisible = `\n# MicroStrategy Distribution Services\n`;\n\ncomment.transactionServicesVisible = `\n# MicroStrategy Transaction Services\n`;\n\ncomment.webReporterVisible = `\n# MicroStrategy Web Universal Reporter\n`;\n\n\ncomment.webAnalystVisible = `\n# MicroStrategy Web Universal Analyst\n`;\n\ncomment.webProfessionalVisible = `\n# MicroStrategy Web Universal Professional\n`;\n\ncomment.portletsVisible = `\n# MicroStrategy Portlets\n`;\n\ncomment.gISConnectorsVisible = `\n# MicroStrategy GIS Connectors\n`;\n\ncomment.webServicesVisible = `\n# MicroStrategy Web Services J2EE\n`;\n\ncomment.mobileServerVisible = `\n# MicroStrategy Mobile Server JSP\n`;\n\ncomment.communityConnectorsVisible = `\n# MicroStrategy Community Data Connectors\n`;\n\ncomment.commandManagerVisible = `\n# MicroStrategy Command Manager\n`;\n\ncomment.integrityManagerVisible = `\n# MicroStrategy Integrity Manager\n`;\n\ncomment.systemManagerVisible = `\n# MicroStrategy System Manager\n`;\n\ncomment.platformAnalyticsVisible = `\n# MicroStrategy Platform Analytics\n`;\n\ncomment.enterpriseManagerVisible = `\n# MicroStrategy Enterprise Manager\n`;\n\ncomment.identityServerVisible = `\n# MicroStrategy Identity Server\n`;\n\n\ncomment.identityManagerVisible = `\n# MicroStrategy Identity Manager\n`;\n\ncomment.identityMobileVisible = `\n# MicroStrategy Identity Mobile\n`;\n\ncomment.telemetryServerVisible = `\n# MicroStrategy Telemetry Server\n`;\n\ncomment.libraryWebMobileVisible = `\n# New in 10.9\n# MicroStrategy Library Web & Mobile\n`;\n\n\ncomment.collaborationVisible = `\n# New in 10.9\n# MicroStrategy Collaboration\n`;\n\ncomment.certificateStoreVisible = `\n# New in 11.0\n# MicroStrategy Certificate Store\n`;\n\n\ncomment.exportVisible = `\n# New in 11.2\n# MicroStrategy Export\n`;\n\ncomment.installOnDemandStyle = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Install On Demand Options\n#\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n\n# The kind of remote location. The valid values are \"FileSystem\", \"HTTP\" or \"HTTPS\"\n`;\n\ncomment.installOnDemandSourceLocation = `\n# The path to the remote location. Set this value if InstallOnDemand.style is set to \"FileSystem\"\n`;\n\ncomment.installOnDemandUrl = `\n# The URL for HTTP or HTTPS styles. Set this value if InstallOnDemand.style is set to HTTP or HTTPS \n`;\n\n\ncomment.installOnDemandBypassCertificateChecking = `\n# Use this setting to skip the certificate checking when using HTTPS. Valid values are \"true\" or \"false\"\n`;\n\ncomment.installOnDemandUser = `\n# The user name for HTTP or HTTPS styles. Set this value if InstallOnDemand.style is set to HTTP or HTTPS \n# and the connection requires user name and password\n`;\n\ncomment.installOnDemandPassword = `\n# The password for HTTP or HTTPS styles. Set this value if InstallOnDemand.style is set to HTTP or HTTPS \n# and the connection requires user name and password \n`;\n\ncomment.guide = `\n\n# Configuration and Deployment Guide: http://www2.microstrategy.com/producthelp/2020/InstallConfig/en-us/Content/configuration_and_deployment.htm \n`\n\nexport default comment;","import React from 'react';\nimport {configure, shallow, mount} from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nimport WinCustomerPage from './WinCustomerInfoAndInstallationDirect';\nimport Navigation from '../../../../Navigation/Navigation';\n\nconfigure({adapter: new Adapter()});\n\n\ndescribe('Navigation', () => {\n    // beforeEach(() => {\n         \n    // });\n    it('Navigation ', () => {\n        const wrapper = mount(<Navigation />);\n        wrapper.setProps({\n            useVersion: '2020',\n            useMode: 'custom',\n            useOs: 'windows'\n        });\n        console.log(wrapper);\n        expect(wrapper.find('.ant-steps')).toHaveLength(1);\n    });\n});\n","\nconst comment = {};\n\ncomment.expressMode = `\n######################################\n## MicroStrategy 11.2 Response File ##\n######################################\n#\n# This file contains a subset of entries required for Express Mode, which will install and configure the full platform on one machine.\n# For more information on Express Mode please refer to the section on \"Performing a MicroStrategy Express Installation\" in the Installation and Configuration guide available at http://www2.microstrategy.com/producthelp/manuals/en/InstallationConfig.pdf.\n# Additional entries are not included in this file and may be optionally included for greater flexibility.  For a full list, please refer to the \"Installing and configuring with a response.ini file\" section in the Installation and Configuration guide.\n#\n# We are working to improve our Silent and Automated installation use-cases.  Feedback on Silent or Automated installations is welcomed via the MicroStrategy Community (Platform Services > Platform > Secure Enterprise - Windows) or via Technical Support to the Deployment Team.\n# Here is a direct link (as of Jun 2017) to the Community sub-section on platform deployment: https://success.microstrategy.com/s/topic/0TO44000000FlkJGAS/Secure%20Enterprise%20-%20Windows%20-%20U092?tabset-215d6=1\n#\n######################################\n##\t\tUsage\t\t                ##\n######################################\n#\n# In an Administrator Command Line window (Windows Button > CMD, Right Click and Run As Administrator)\n#\n# Silent Install Usage: #PathToSetupExe --responseFile=\"#PathToResponseIni#\" -s -f1#PathToSetupIss# -f2#PathToLogFile#\n#\n# Example: C:\\\\Setup.exe --responseFile=\"C:\\\\response_express.ini\" -s -f1C:\\\\Setup.iss -f2C:\\\\Setup.log\n#\n# The above example assumes the following:\n#\n# Setup.exe is located at: C:\\\\Setup.exe\n# MicroStrategy Response File is located at: C:\\\\response_express.ini\n# Installer Setup.iss is located at: C:\\\\Setup.iss\n# Output Log file should be written to: C\\\\Setup.log\n#\n# Response entries start here, replace any text between angled brackets (<>) with your own text\n\n[Installer]\n`;\n\ncomment.forceReboot = `\n\n# After initial installation is finished, choose whether to automatically reboot the machine.\n# A reboot is required.\n# TRUE  - Indicates the machine will automatically reboot (recommended)\n# FALSE - Indicates that no automatic reboot will be performed.  Task Manager (setup.exe) or the Install.log may be used to determine once the installation is finished as no other indication will be provided.\n`;\n\ncomment.logFile = `\n\n# Path and File Name for the Installation Log file.\n# If no value is specified, the default location will be used: C:\\\\Program Files (x86)\\\\Common Files\\\\MicroStrategy\\\\install.log\n`;\n\n\n\ncomment.hideSuiteTargetDialog = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Product Install Location.\n# Use the following values to specify the install location for MicroStrategy products.\n# The default path of TargetDirectory is C:\\\\Program Files (x86)\\\\MicroStrategy\n# The default path of COMMONFILES is C:\\\\Program Files (x86)\\\\Common Files\\\\MicroStrategy\n\n[SuiteTarget]\n`;\n\n\ncomment.commonFiles = `\n\n[InitialPaths]\n`;\n\ncomment.hideWelcomeDialog = `\n\n[Welcome]\n`;\n\ncomment.hideUserRegistrationDialog = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Customer Information\n#\n# Please specify your first name, last name, email address, the name of the company for which you work and the license key.\n#\n# For Express Installation, this information is used to create the initial MicroStrategy Identity Network and user badge.\n\n[UserRegistration]\n`;\n\n\ncomment.userFirstName = `\n\n# First name of user\n`;\n\n\ncomment.userLastName = `\n\n# Last name of user\n`;\n\n\ncomment.userEmail = `\n\n# Email address of user\n`;\n\ncomment.companyName = `\n\n# Company\n`;\n\n\ncomment.licenseKey = `\n\n# License key\n`;\n\n\ncomment.hideLicenseDetailDialog = `\n\n[LicenseDetail]\n`;\n\n\ncomment.hideSetupExpressDialog = `\n\n[SetupExpress]\n`;\n\ncomment.hideOpenSourceSoftwareDialogDialog = `\n\n# New in 10.8\n[OpenSourceSoftwareDialog]\n`;\n\ncomment.hideSummaryDialog = `\n\n[Summary]\n`;\n\ncomment.hideFinishDialog = `\n\n[Finish]\n`;\n\nexport default comment;","import { Tree, Tooltip } from 'antd';\nimport React from 'react';\nimport 'antd/dist/antd.css';\n\nconst { TreeNode } = Tree;\n\n/**\n *  Dynamically create the UI of the 'antd' treeSelect component based on the given featureTree\n * @param {Object} tree object that follow the structure of the featureTree\n * @param {Map} disSelectableMap the map contains the disSelectable info of each treeNode\n * @return {Array} return the Array that contains JSX views\n */\nexport const createTree = (tree, disSelectableMap) => {\n    if (tree === null) {\n        return null;\n    }\n    let res = [];\n    for (let i = 0; i < tree.length; i++) {\n        if (tree[i].children && tree[i].children.length > 0) {\n            res.push(\n                <TreeNode\n                    disableCheckbox={disSelectableMap.get(tree[i].id)}\n                    title={\n                        <Tooltip\n                            placement=\"right\"\n                            title={generateTooltipTitle(tree[i])}\n                        >\n                            {tree[i].name}\n                        </Tooltip>\n                    }\n                    key={tree[i].id}\n                >\n                    {createTree(tree[i].children, disSelectableMap)}\n                </TreeNode>\n            );\n        } else {\n            res.push(\n                <TreeNode\n                    disableCheckbox={disSelectableMap.get(tree[i].id)}\n                    title={\n                        <Tooltip\n                            placement=\"right\"\n                            title={generateTooltipTitle(tree[i])}\n                        >\n                            {tree[i].name}\n                        </Tooltip>\n                    }\n                    key={tree[i].id}\n                />\n            );\n        }\n    }\n    return res;\n};\n\n/**\n * Create a tooltip of a specific (tree node)product,\n * it contains description the description, require for and require by information\n * used in Feature Selection Pages\n * @param {Object} treeNode object that contain information to create the tooltip for the specific node\n */\nconst generateTooltipTitle = treeNode => {\n    let dependsOnList = null;\n    let dependedByList = null;\n    let description = null;\n\n    if (treeNode.tooltipProductDescription !== undefined) {\n        description = treeNode.tooltipProductDescription;\n    }\n    if (\n        treeNode.tooltipRequireFor !== null &&\n        treeNode.tooltipRequireFor.length > 0\n    ) {\n        dependsOnList = treeNode.tooltipRequireFor.map(value => (\n            <div key={value}>{value}</div>\n        ));\n    }\n\n    if (\n        treeNode.tooltipRequiredBy !== null &&\n        treeNode.tooltipRequiredBy.length > 0\n    ) {\n        dependedByList = treeNode.tooltipRequiredBy.map(value => (\n            <div key={value}>{value}</div>\n        ));\n    }\n\n    if (description !== null) {\n        description = (\n            <div>\n                <b>Description: </b>\n                <br />\n                {description}\n            </div>\n        );\n    }\n\n    if (dependsOnList !== null) {\n        dependsOnList = (\n            <div>\n                <b>Require for:</b> {dependsOnList}\n            </div>\n        );\n    }\n\n    if (dependedByList !== null) {\n        dependedByList = (\n            <div>\n                <b>Required by:</b> {dependedByList}\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <div>{description}</div>\n            <div> {dependsOnList}</div>\n            <div> {dependedByList}</div>\n        </div>\n    );\n};\n\n/**\n *  Traverse the featureTree and initiate dependencyMap, disSelectableMap, parentMap and childrenMap\n * @param {Object} featureTree object that follow the structure of the featureTree\n * @param {String} parentId  the parent node id of current featureTree\n * @param {Object} maps an object contains the maps that tend to be initiated\n * @return  null\n */\nexport const initialMaps = (featureTree, parentId, maps) => {\n    if (featureTree === null) {\n        return;\n    }\n    for (let i = 0; i < featureTree.length; i++) {\n        mapChildren(\n            featureTree[i].id,\n            featureTree[i].children,\n            maps.childrenMap\n        );\n        maps.dependencyMap.set(featureTree[i].id, featureTree[i].dependencies);\n        maps.disSelectableMap.set(featureTree[i].id, false);\n        maps.parentMap.set(featureTree[i].id, parentId);\n        if (featureTree[i].children && featureTree[i].children.length > 0) {\n            initialMaps(featureTree[i].children, featureTree[i].id, maps);\n        }\n    }\n};\n\n/**\n *  Put the current node's children to the childrenMap\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Array} children the children of current node\n * @param {Map} childrenMap map that record the parent(key) children(value) relationship between nodes\n * @return  null\n */\nconst mapChildren = (nodeKey, children, childrenMap) => {\n    if (children === null || children.length === 0) {\n        childrenMap.set(nodeKey, []);\n        return;\n    }\n    let childrenArray = [];\n    for (let i = 0; i < children.length; i++) {\n        childrenArray.push(children[i].id);\n    }\n    childrenMap.set(nodeKey, childrenArray);\n};\n\n/**\n *  Recursively make all children of a node checked\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Object} maps contains maps that will be used to check all children nodes\n * @param {Object} props contains methods to set and get the state from higher level\n * @return  null\n */\nconst checkAllChildrenNodes = (children, checkedKeys, maps, props) => {\n    if (typeof children == 'undefined' || children.length === 0) {\n        return;\n    }\n\n    for (let i = 0; i < children.length; i++) {\n        if (!checkedKeys.checked.includes(children[i])) {\n            checkedKeys.checked.push(children[i]);\n            setStateTrue(children[i], maps.feature2StateMap, props);\n            checkAndDisableAllDependencyNodes(\n                maps.dependencyMap.get(children[i]),\n                checkedKeys,\n                maps,\n                props\n            );\n            checkAllChildrenNodes(\n                maps.childrenMap.get(children[i]),\n                checkedKeys,\n                maps,\n                props\n            );\n        }\n    }\n};\n\n/**\n *  Recursively make all dependencies of a node checked and make them unselectable until the root node has been dis-selected\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Object} maps contains maps that will be used to check and disable dependency nodes\n * @param {Object} props contains methods to set and get the state from higher level\n * @return  null\n */\nconst checkAndDisableAllDependencyNodes = (\n    dependencies,\n    checkedKeys,\n    maps,\n    props\n) => {\n    if (typeof dependencies == 'undefined' || dependencies.length === 0) {\n        return;\n    }\n    for (let i = 0; i < dependencies.length; i++) {\n        if (!checkedKeys.checked.includes(dependencies[i])) {\n            checkedKeys.checked.push(dependencies[i]);\n            setStateTrue(dependencies[i], maps.feature2StateMap, props);\n            checkAllAncestorNodes(dependencies[i], checkedKeys, maps, props);\n        }\n        maps.disSelectableMap.set(dependencies[i], true);\n        disableAllAncestorNodes(dependencies[i], maps);\n    }\n};\n\n/**\n *  Recursively ensure all the ancestors of this node have been checked\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Object} maps contains maps that will be used to check all ancestor nodes\n * @param {Object} props contains methods to set and get the state from higher level\n * @return  null\n */\nconst checkAllAncestorNodes = (nodeKey, checkedKeys, maps, props) => {\n    let parentKey = maps.parentMap.get(nodeKey);\n    if (typeof parentKey !== 'undefined' && parentKey !== '') {\n        if (!checkedKeys.checked.includes(parentKey)) {\n            checkedKeys.checked.push(parentKey);\n            setStateTrue(parentKey, maps.feature2StateMap, props);\n            checkAndDisableAllDependencyNodes(\n                maps.dependencyMap.get(parentKey),\n                checkedKeys,\n                maps,\n                props\n            );\n            checkAllAncestorNodes(parentKey, checkedKeys, maps, props);\n        }\n    }\n};\n\n/**\n *  Recursively disable all the ancestor of a node\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} maps contains maps that will be used to check all children nodes\n * @return  null\n */\nconst disableAllAncestorNodes = (nodeKey, maps) => {\n    let parentKey = maps.parentMap.get(nodeKey);\n\n    if (typeof parentKey !== 'undefined' && parentKey !== '') {\n        if (!maps.disSelectableMap.get(parentKey)) {\n            maps.disSelectableMap.set(parentKey, true);\n            disableAllAncestorNodes(parentKey, maps);\n        }\n    }\n};\n\n/**\n *  Recursively make all dependencies of a node selectable\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} checkedKeys an Object contains the keys of nodes that should be set as checked\n * @param {Object} maps contains maps that will be used to check all children nodes\n * @return  null\n */\nconst enableDependencyNodes = (nodeKey, checkedKeys, maps) => {\n    if (typeof nodeKey === 'undefined') {\n        return;\n    }\n    let dependencies = maps.dependencyMap.get(nodeKey);\n    for (let i = 0; i < dependencies.length; i++) {\n        if (\n            !isDependenciesOfCheckedNodes(\n                dependencies[i],\n                checkedKeys,\n                maps.dependencyMap\n            )\n        ) {\n            maps.disSelectableMap.set(dependencies[i], false);\n            enableParentNodes(dependencies[i], maps);\n        }\n    }\n};\n\n/**\n * enable parent node if all its children are selectable\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} maps contains maps that will be used to check all children nodes\n * @return  null\n */\nconst enableParentNodes = (nodeKey, maps) => {\n    let parentKey = maps.parentMap.get(nodeKey);\n    if (typeof parentKey == 'undefined' || parentKey === '') {\n        return;\n    }\n    let children = maps.childrenMap.get(parentKey);\n    for (let i = 0; i < children.length; i++) {\n        if (maps.disSelectableMap.get(children[i])) {\n            return;\n        }\n    }\n    maps.disSelectableMap.set(parentKey, false);\n    enableParentNodes(parentKey, maps);\n};\n\n/**\n * check if one node is another node's dependency\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Map} dependencyMap map that contains dependent relationship among nodes\n * @return {boolean} true: the nodeKey is dependency of at least one other node. Otherwise false.\n */\nconst isDependenciesOfCheckedNodes = (nodeKey, checkedKeys, dependencyMap) => {\n    if (\n        typeof checkedKeys.checked == 'undefined' ||\n        checkedKeys.checked.length === 0\n    ) {\n        return false;\n    }\n    for (let i = 0; i < checkedKeys.checked.length; i++) {\n        let dependencies = dependencyMap.get(checkedKeys.checked[i]);\n        if (dependencies.includes(nodeKey)) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\n/**\n *  Recursively uncheck all children of a node make\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Object} maps contains maps that will be used to check all children nodes\n * @param {Object} props contains methods to set and get the state from higher level\n * @return  null\n */\nconst removeAllChildrenNodes = (nodeKey, checkedKeys, maps, props) => {\n    if (nodeKey === null) {\n        return;\n    }\n    let children = maps.childrenMap.get(nodeKey);\n    for (let i = 0; i < children.length; i++) {\n        if (checkedKeys.checked.includes(children[i])) {\n            checkedKeys.checked.splice(\n                checkedKeys.checked.indexOf(children[i]),\n                1\n            );\n            if (maps.disSelectableMap.get(children[i])) {\n                maps.disSelectableMap.set(children[i], false);\n            }\n            setStateFalse(children[i], maps.feature2StateMap, props);\n            removeAllChildrenNodes(children[i], checkedKeys, maps, props);\n        }\n    }\n};\n\n/**\n *  uncheck all the ancestor node if they no longer have any child being checked\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Object} maps contains maps that will be used to check all children nodes\n * @param {Object} props contains methods to set and get the state from higher level\n * @return  null\n */\nconst uncheckAncestorNodes = (nodeKey, checkedKeys, maps, props) => {\n    let parentKey = maps.parentMap.get(nodeKey);\n    if (parentKey === null || parentKey === '') {\n        return;\n    }\n    let parentChildren = maps.childrenMap.get(parentKey);\n    for (let i = 0; i < parentChildren.length; i++) {\n        if (checkedKeys.checked.includes(parentChildren[i])) {\n            return;\n        }\n    }\n    checkedKeys.checked.splice(checkedKeys.checked.indexOf(parentKey), 1);\n    setStateFalse(parentKey, maps.feature2StateMap, props);\n    enableDependencyNodes(parentKey, checkedKeys, maps);\n\n    uncheckAncestorNodes(parentKey, checkedKeys, maps, props);\n};\n\n/**\n *  Set the corresponding state in WindowsInstall as false\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Map} feature2StateMap map that contains the relationship between feature key id (key) and state name(value)\n * @param {Object} props contains methods to set and get the state from higher level\n * @return  null\n */\nconst setStateFalse = (nodeKey, feature2StateMap, props) => {\n    if (!feature2StateMap.has(nodeKey)) {\n        return;\n    }\n    let key = feature2StateMap.get(nodeKey);\n    props.setOriginState(key, false);\n};\n\n/**\n *  Set the corresponding state in WindowsInstall as false\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Map} feature2StateMap map that contains the relationship between feature key id (key) and state name(value)\n * @param {Object} props contains methods to set and get the state from higher level\n * @return  null\n */\nconst setStateTrue = (nodeKey, feature2StateMap, props) => {\n    if (!feature2StateMap.has(nodeKey)) {\n        return;\n    }\n    let key = feature2StateMap.get(nodeKey);\n    props.setOriginState(key, true);\n};\n\n/**\n * Uncheck a single node\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Object} maps contains maps that will be used to check all children nodes\n * @param {Object} props contains methods to set and get the state from higher level\n * @return  null\n */\nexport const uncheckNode = (nodeKey, checkedKeys, maps, props) => {\n    if (checkedKeys.checked.includes(nodeKey)) {\n        checkedKeys.checked.splice(checkedKeys.checked.indexOf(nodeKey), 1);\n    }\n    enableDependencyNodes(nodeKey, checkedKeys, maps);\n    removeAllChildrenNodes(nodeKey, checkedKeys, maps, props);\n    uncheckAncestorNodes(nodeKey, checkedKeys, maps, props);\n    setStateFalse(nodeKey, maps.feature2StateMap, props);\n};\n\n/**\n * check a single node\n * @param {String} nodeKey the unique id of the TreeNode\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Object} maps contains maps that will be used to check all children nodes\n * @param {Object} props contains methods to set and get the state from higher level\n * @return  null\n */\nexport const checkNode = (nodeKey, checkedKeys, maps, props) => {\n    if (!checkedKeys.checked.includes(nodeKey)) {\n        checkedKeys.checked.push(nodeKey);\n    }\n    checkAllChildrenNodes(\n        maps.childrenMap.get(nodeKey),\n        checkedKeys,\n        maps,\n        props\n    );\n    checkAndDisableAllDependencyNodes(\n        maps.dependencyMap.get(nodeKey),\n        checkedKeys,\n        maps,\n        props\n    );\n    checkAllAncestorNodes(nodeKey, checkedKeys, maps, props);\n    setStateTrue(nodeKey, maps.feature2StateMap, props);\n};\n\n/**\n * Initiate the feature tree by updating 'checkedKeys'(controller of the tree),\n * Iterate all the products states, if a product is true then check it (with side effect)\n *\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Object} maps object that contains maps that will be used to check all children nodes\n * @callBack a callBack function to handle a bunch of special cases\n * @param {Object} props contains methods to set and get the state from higher level\n */\nexport const getInitialCheckedKeys = (\n    checkedKeys,\n    maps,\n    specialCheckingCaseHandler,\n    props\n) => {\n    maps.feature2StateMap.forEach((value, nodeKey) => {\n        if (props.getOriginState(value)) {\n            if (!checkedKeys.checked.includes(nodeKey)) {\n                checkNode(nodeKey, checkedKeys, maps, props);\n                specialCheckingCaseHandler(nodeKey, checkedKeys);\n            }\n        }\n    });\n};\n\n/**\n * check All the product keys that exist in the feature2StateMap; \n * Set all the products states as true.\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Object} maps object that contains maps that will be used to check all children nodes\n * @callBack a callBack function to handle a bunch of special cases\n * @param {Object} props contains methods to set and get the state from higher level\n */\nexport const selectAll = (\n    checkedKeys,\n    maps,\n    specialCheckingCaseHandler,\n    props\n) => {\n    maps.feature2StateMap.forEach((value, key) => {\n        props.setOriginState(value, true);\n        if (!checkedKeys.checked.includes(key)) {\n            checkNode(key, checkedKeys, maps, props);\n            specialCheckingCaseHandler(key, checkedKeys);\n        }\n    });\n};\n\n/**\n * uncheck All the product keys that exist in the feature2StateMap; \n * Set all the products states as false.\n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @param {Object} maps object that contains maps that will be used to check all children nodes\n * @callBack a callBack function to handle a bunch of special cases\n * @param {Object} props contains methods to set and get the state from higher level\n */\nexport const unselectAll = (\n           checkedKeys,\n           maps,\n           specialUnCheckingCaseHandler,\n           props\n       ) => {\n           maps.feature2StateMap.forEach((value, nodeKey) => {\n               props.setOriginState(value, false);\n               if (checkedKeys.checked.includes(nodeKey)) {\n                   uncheckNode(nodeKey, checkedKeys, maps, props);\n                   specialUnCheckingCaseHandler(nodeKey, checkedKeys);\n               }\n           });\n};\n\n/**\n * \n * @param {Object} checkedKeys the Object that 'antd' treeSelect use to control the UI\n * @return {Boolean} true: at least one node has been checked, \n *                   false: none node has been checked\n */\nexport const validateAtLeastOneChecked = checkedKeys => {\n    return checkedKeys.checked.length > 0;\n}","var map = {\n\t\"./\": 143,\n\t\"./App\": 175,\n\t\"./App.js\": 175,\n\t\"./App.module.css\": 486,\n\t\"./Components/ButtonBar/MainButtonBar/MainButtonBar\": 23,\n\t\"./Components/ButtonBar/MainButtonBar/MainButtonBar.js\": 23,\n\t\"./Components/ButtonBar/SelectAllButtonBar/SelectAllButtonBar\": 106,\n\t\"./Components/ButtonBar/SelectAllButtonBar/SelectAllButtonBar.js\": 106,\n\t\"./Components/ConfigurationContent/ConfigurationContent\": 178,\n\t\"./Components/ConfigurationContent/ConfigurationContent.js\": 178,\n\t\"./Components/ContentPages/LicenseAgreePage/LicenseAgreePage\": 180,\n\t\"./Components/ContentPages/LicenseAgreePage/LicenseAgreePage.js\": 180,\n\t\"./Components/ContentPages/LicenseAgreePage/LicenseAgreePage.module.css\": 80,\n\t\"./Components/ContentPages/MSTR2020/Linux/CustomerInfoAndInstallationDirect/LinCustomerInfoAndInstallationDirect\": 182,\n\t\"./Components/ContentPages/MSTR2020/Linux/CustomerInfoAndInstallationDirect/LinCustomerInfoAndInstallationDirect.js\": 182,\n\t\"./Components/ContentPages/MSTR2020/Linux/FeatureSelection/LinFeatureSelection\": 183,\n\t\"./Components/ContentPages/MSTR2020/Linux/FeatureSelection/LinFeatureSelection.js\": 183,\n\t\"./Components/ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep1\": 184,\n\t\"./Components/ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep1.js\": 184,\n\t\"./Components/ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep2\": 185,\n\t\"./Components/ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep2.js\": 185,\n\t\"./Components/ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep3\": 186,\n\t\"./Components/ContentPages/MSTR2020/Linux/IdentityConfiguration/LinIdentityConfigStep3.js\": 186,\n\t\"./Components/ContentPages/MSTR2020/Linux/IdentityManager/LinIdentityManager\": 187,\n\t\"./Components/ContentPages/MSTR2020/Linux/IdentityManager/LinIdentityManager.js\": 187,\n\t\"./Components/ContentPages/MSTR2020/Linux/RegisteringAsService/LinRegisteringAsService\": 188,\n\t\"./Components/ContentPages/MSTR2020/Linux/RegisteringAsService/LinRegisteringAsService.js\": 188,\n\t\"./Components/ContentPages/MSTR2020/Linux/Summary/LinSummary\": 189,\n\t\"./Components/ContentPages/MSTR2020/Linux/Summary/LinSummary.js\": 189,\n\t\"./Components/ContentPages/MSTR2020/Linux/TelemetryConfiguration/LinTelemetryConfiguration\": 191,\n\t\"./Components/ContentPages/MSTR2020/Linux/TelemetryConfiguration/LinTelemetryConfiguration.js\": 191,\n\t\"./Components/ContentPages/MSTR2020/Linux/TopologyConfiguration/LinTopologyConfiguration\": 192,\n\t\"./Components/ContentPages/MSTR2020/Linux/TopologyConfiguration/LinTopologyConfiguration.js\": 192,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/CustomerInfoAndInstallationDirect/WinCustomerInfoAndInstallationDirect\": 105,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/CustomerInfoAndInstallationDirect/WinCustomerInfoAndInstallationDirect.js\": 105,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/CustomerInfoAndInstallationDirect/WinCustomerInfoAndInstallationDirect.spec\": 313,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/CustomerInfoAndInstallationDirect/WinCustomerInfoAndInstallationDirect.spec.js\": 313,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/FeatureSelection/WinFeatureSelection\": 193,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/FeatureSelection/WinFeatureSelection.js\": 193,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/IdentityConfiguration/WinIdentityConfiguration\": 194,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/IdentityConfiguration/WinIdentityConfiguration.js\": 194,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/IntelligenceServerConfiguration/WinIntelligenceServerConfiguration\": 195,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/IntelligenceServerConfiguration/WinIntelligenceServerConfiguration.js\": 195,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/NarrowcastServerConfiguration/WinNarrowcastServerConfiguration\": 196,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/NarrowcastServerConfiguration/WinNarrowcastServerConfiguration.js\": 196,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/OfficeConfiguration/WinOfficeConfiguration\": 197,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/OfficeConfiguration/WinOfficeConfiguration.js\": 197,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/PortalMDXVDS/WinPortalMDXVDS\": 198,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/PortalMDXVDS/WinPortalMDXVDS.js\": 198,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/Summary/WinSummary\": 138,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/Summary/WinSummary.js\": 138,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/TelemetryConfiguration/WinTelemetryConfiguration\": 201,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/TelemetryConfiguration/WinTelemetryConfiguration.js\": 201,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/TopologyConfiguration/WinTopologyConfiguration\": 202,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/TopologyConfiguration/WinTopologyConfiguration.js\": 202,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/WebMobileVDS/WinWebMobileVDS\": 203,\n\t\"./Components/ContentPages/MSTR2020/WindowsCustom/WebMobileVDS/WinWebMobileVDS.js\": 203,\n\t\"./Components/FileGenerator/FileGenerator\": 92,\n\t\"./Components/FileGenerator/FileGenerator.js\": 92,\n\t\"./Components/Navigation/Navigation\": 11,\n\t\"./Components/Navigation/Navigation.css\": 288,\n\t\"./Components/Navigation/Navigation.js\": 11,\n\t\"./Components/Navigation/Navigation.module.css\": 826,\n\t\"./Components/ReferencePicture/ReferencePicture\": 19,\n\t\"./Components/ReferencePicture/ReferencePicture.js\": 19,\n\t\"./Components/ReferencePicture/ReferencePicture.module.css\": 276,\n\t\"./Components/Utils/CommonCss.css\": 31,\n\t\"./Components/Utils/CommonCss.module.css\": 2,\n\t\"./Components/Utils/CommonFunc\": 10,\n\t\"./Components/Utils/CommonFunc.js\": 10,\n\t\"./Components/Utils/CreateTree\": 43,\n\t\"./Components/Utils/CreateTree.js\": 43,\n\t\"./Containers/ResponseFileBuilder/InstallationOsControl/InstallationOsControl\": 177,\n\t\"./Containers/ResponseFileBuilder/InstallationOsControl/InstallationOsControl.js\": 177,\n\t\"./Containers/ResponseFileBuilder/ResponseFileBuilder\": 176,\n\t\"./Containers/ResponseFileBuilder/ResponseFileBuilder.js\": 176,\n\t\"./Containers/ResponseFileBuilder/ResponseFileBuilder.module.css\": 827,\n\t\"./assets/Icons/Linux.png\": 151,\n\t\"./assets/Icons/Windows.png\": 150,\n\t\"./assets/Icons/info.svg\": 113,\n\t\"./assets/LicenseAgreementContent\": 181,\n\t\"./assets/LicenseAgreementContent.js\": 181,\n\t\"./assets/MSTR2020/LINUX/Lin20FeatureDependencies\": 132,\n\t\"./assets/MSTR2020/LINUX/Lin20FeatureDependencies.json\": 132,\n\t\"./assets/MSTR2020/LINUX/Lin20GeneratorComment\": 3,\n\t\"./assets/MSTR2020/LINUX/Lin20GeneratorComment.js\": 3,\n\t\"./assets/MSTR2020/LINUX/Lin20Maps\": 93,\n\t\"./assets/MSTR2020/LINUX/Lin20Maps.js\": 93,\n\t\"./assets/MSTR2020/LINUX/Lin20Maps4Generator\": 134,\n\t\"./assets/MSTR2020/LINUX/Lin20Maps4Generator.js\": 134,\n\t\"./assets/MSTR2020/LINUX/Lin20PageObjects\": 21,\n\t\"./assets/MSTR2020/LINUX/Lin20PageObjects.json\": 21,\n\t\"./assets/MSTR2020/LINUX/Lin20States\": 204,\n\t\"./assets/MSTR2020/LINUX/Lin20States.json\": 204,\n\t\"./assets/MSTR2020/LINUX/Lin20SummaryStructure\": 190,\n\t\"./assets/MSTR2020/LINUX/Lin20SummaryStructure.json\": 190,\n\t\"./assets/MSTR2020/LINUX/pics/1 Customer Information.png\": 828,\n\t\"./assets/MSTR2020/LINUX/pics/10 register as a service.png\": 829,\n\t\"./assets/MSTR2020/LINUX/pics/2 Install Location.png\": 830,\n\t\"./assets/MSTR2020/LINUX/pics/3 Select Components.png\": 831,\n\t\"./assets/MSTR2020/LINUX/pics/4 Identity Server 1.png\": 832,\n\t\"./assets/MSTR2020/LINUX/pics/5 Identity Server 2.png\": 833,\n\t\"./assets/MSTR2020/LINUX/pics/6 Identity Server 3.png\": 834,\n\t\"./assets/MSTR2020/LINUX/pics/7 Identity Server Manager.png\": 835,\n\t\"./assets/MSTR2020/LINUX/pics/8 Telemetry Server.png\": 836,\n\t\"./assets/MSTR2020/LINUX/pics/9 Topology Configure.png\": 837,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomFeatureDependencies\": 137,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomFeatureDependencies.json\": 137,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomGeneratorComment\": 6,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomGeneratorComment.js\": 6,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomMaps\": 63,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomMaps.js\": 63,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomMaps4Generator\": 135,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomMaps4Generator.js\": 135,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects\": 17,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomPageObjects.json\": 17,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomStates\": 205,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomStates.json\": 205,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomSummaryStructure\": 199,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomSummaryStructure.json\": 199,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/1 - Customer Information.png\": 838,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/10 MicroStrategy Mobile Server (ASP .NET) Virtual Directory Name.png\": 839,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/11 MicroStrategy Subscription Portal Virtual Directory Name.png\": 840,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/12 MicroStrategy MDX Cube Provider Virtual Directory Name.png\": 841,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/13 Office URL.png\": 842,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/14 Office Configuration.png\": 843,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/15 Intelligence Setting.png\": 844,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/16 MicroStrategy Narrowcast Server setting.png\": 845,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/17 Automatically restart.png\": 846,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/3 Install Destination Location.png\": 847,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/4 Select Features.png\": 848,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/5 Open Source Download.png\": 849,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/6 Topology Configuration.png\": 850,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/7 Identity Configuration.png\": 851,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/8 Telemetry Server Configuration.png\": 852,\n\t\"./assets/MSTR2020/WINDOWS_CUSTOM/pics/9 MicroStrategy Web (ASP .NET) setting.png\": 853,\n\t\"./assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressGeneratorComment\": 39,\n\t\"./assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressGeneratorComment.js\": 39,\n\t\"./assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressMaps4Generator\": 136,\n\t\"./assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressMaps4Generator.js\": 136,\n\t\"./assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressPageObjects\": 77,\n\t\"./assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressPageObjects.json\": 77,\n\t\"./assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressStates\": 206,\n\t\"./assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressStates.json\": 206,\n\t\"./assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressSummaryStructure\": 200,\n\t\"./assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressSummaryStructure.json\": 200,\n\t\"./index\": 143,\n\t\"./index.css\": 287,\n\t\"./index.js\": 143,\n\t\"./serviceWorker\": 207,\n\t\"./serviceWorker.js\": 207\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 485;","\n\nconst comment = {};\n\ncomment.expressMode = `\n######################################\n## MicroStrategy 11.2 Response File ##\n######################################\n#\n# This file contains entries targeted to Custom Mode, which will install and configure the full platform on one machine.\n#\n# For more information on Silent Install please refer to the section on \"Installing and configuring with a response.ini file\" in the Installation and Configuration guide available at http://www2.microstrategy.com/producthelp/manuals/en/InstallationConfig.pdf.\n#\n# We are working to improve our Silent and Automated installation use-cases.  Feedback on Silent or Automated installations is welcomed via the MicroStrategy Community (Platform Services > Platform > Secure Enterprise - Windows) or via Technical Support to the Deployment Team.\n# Here is a direct link (as of Jun 2017) to the Community sub-section on platform deployment: https://success.microstrategy.com/s/topic/0TO44000000FlkJGAS/Secure%20Enterprise%20-%20Windows%20-%20U092?tabset-215d6=1\n#\n######################################\n##\t\tUsage\t\t                ##\n######################################\n#\n# In an Administrator Command Line window (Windows Button > CMD, Right Click and Run As Administrator)\n#\n# Silent Install Usage: #PathToSetupExe# --responseFile=\"#PathToResponseIni#\" -s -f1#PathToSetupIss# -f2#PathToLogFile#\n#\n# Example: C:\\\\Setup.exe --responseFile=\"C:\\\\response_custom.ini\" -s -f1C:\\\\Setup.iss -f2C:\\\\Setup.log\n#\n# This assumes the following:\n#\n# Setup.exe is located at: C:\\\\Setup.exe\n# MicroStrategy Response File is located at: C:\\\\response_custom.ini\n# Installer Setup.iss is located at: C:\\\\Setup.iss\n# Output Log file should be written to: C\\\\Setup.log\n#\n#\n# Response entries start here, replace any text between angled brackets (<>) with your own text\n\n[Installer]\n`;\n\ncomment.forceReboot = `\n\n# After initial installation is finished, choose whether to automatically reboot the machine.\n# A reboot is required.\n# TRUE  - Indicates the machine will automatically reboot (recommended)\n# FALSE - Indicates that no automatic reboot will be performed.  Task Manager (setup.exe) or the Install.log may be used to determine once the installation is finished as no other indication will be provided.\n`;\n\ncomment.logFile = `\n###ConfigWizardResponseFile=Response.ini\n# Path and File Name for the Installation Log file.\n# If no value is specified, the default location will be used: C:\\\\Program Files (x86)\\\\Common Files\\\\MicroStrategy\\\\install.log\n`;\n\ncomment.hideWelcomeDialog = `\n\n[Welcome]\n`;\n\ncomment.hideUserRegistrationDialog = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Customer Information\n#\n# Please specify your first name, last name, email address, the name of the company\n# for which you work and the license key.\n#\n# If MicroStrategy Identity is installed, this information is used to create the initial MicroStrategy Identity Network and user badge.\n\n[UserRegistration]\n`;\n\ncomment.userFirstName = `\n\n# First name of user\n`;\n\ncomment.userLastName = `\n\n# Last name of user\n`;\n\ncomment.userEmail = `\n\n# Email address of user\n`;\n\ncomment.companyName = `\n\n# Company\n`;\n\ncomment.licenseKey = `\n\n# License key\n`;\n\ncomment.hideLicenseDetailDialog = `\n\n[LicenseDetail]\n`;\n\ncomment.hideSetupExpressDialog = `\n\n[SetupExpress]\n`;\n\ncomment.hideSuiteTargetDialog = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Product Install Location.\n# Use the following values to specify the install location for MicroStrategy products.\n# The default path of TargetDirectory is C:\\\\Program Files (x86)\\\\MicroStrategy\n# The default path of COMMONFILES is C:\\\\Program Files (x86)\\\\Common Files\\\\MicroStrategy\n\n[SuiteTarget]\n`;\n\n\ncomment.commonFiles = `\n\n[InitialPaths]\n`;\n\ncomment.hideComponentSelectionDialog = `\n\n[ComponentSelection]\n`;\n\ncomment.developerVisible = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Product Visibility State\n#\n# For GUI based installations, this section provides a visibility state setting for every MicroStrategy product. \n# Legal values are:\n# \n#    TRUE  - Indicates that the product is visible for selection or deselection\n#    FALSE - Indicates that the product is not visible for selection or deselection\n# \n# The default value for visibility state settings is \"true\".\n#\n# For example, to make \"MicroStrategy Intelligence\" visible\n# for selection or deselection\n# \n#    IntelligenceVisible=TRUE\n#\n# All licensed products are visible by default, so in case you want to prevent \n# them from being visible, make sure they are set to false.\n\n`;\n\ncomment.identityServerVisible = `\n# New in 10.3\n`;\n\ncomment.telemetryServerVisible = `\n# New in 10.5\n`;\n\ncomment.libraryWebMobileVisible = `\n# New in 10.9\n`;\n\ncomment.dataServerVisible = `\n# New in 11.0\n`;\n\ncomment.exportVisible = `\n# New in 11.2\n`;\n\ncomment.developerSelect = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# MicroStrategy Product Selection State\n#\n# Determines which products are installed (GUI and Silent).  A selection state setting is available for every MicroStrategy product. \n# Legal values are:\n# \n#    TRUE  - Indicates that the product is selected for installation\n#    FALSE - Indicates that the product is not selected for installation\n# \n# The default value for Selection state settings is \"true\".\n#\n# For example, to select \"MicroStrategy Intelligence\" \n# for installation use\n# \n#    IntelligenceSelect=TRUE\n#\n# Most licensed products are selected by default, so in case you want to prevent \n# them from being installed make sure they are unselected too.\n\n`;\n\ncomment.identityServerSelect = `\n# New in 10.3\n`;\n\ncomment.telemetryServerSelect = `\n# New in 10.5\n`;\n\ncomment.libraryWebMobileSelect = `\n# New in 10.9\n`;\n\ncomment.dataServerSelect = `\n# New in 11.0\n`;\ncomment.exportSelect = `\n# New in 11.2\n`;\n\ncomment.hideServicesRegConfigDialog = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n# Topology Configuration\n# The Workstation Topology helps administrators to monitor and manage services \n# in a MicroStrategy environment. Choose your configuration below.\n\n[ServicesRegConfig]\n`;\n\ncomment.multipleMachineEnvironment = `\n\n# If MultipleMachineEnvironment=FALSE, this machine will be set as a server node in the environment.\n# Otherwise, please specify server nodes in ServersInCluster option.\n`;\n\n\ncomment.serversInCluster = `\n\n# The input below will be entered identically for all configured machines in this environment.\n# Example: servername1.acme.com; servername2.acme.com; servername3.acme.com\n# It is recommended to configure an odd number of servers in a cluster\n`;\n\ncomment.hideTelemetryServerConfigDialog = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n# Telemetry Server Cluster Configuration\n[TelemetryServerConfig]\n`;\n\ncomment.telemetryServerLocalNode = `\n# Please provide local node's hostname\n`;\n\ncomment.telemetryServerRemoteNodes = `\n# Please provide a semicolon separated list of remote nodes' hostname\n`;\n\ncomment.hideIdentityConfigDialog = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n# MicroStrategy Identity Product Configuration\n# The parameters in [IdentityConfig] section only apply when MicroStrategy Identity Products are selected.\n[IdentityConfig]\n`;\n\ncomment.expressSkipIdentityConfig = `\n\n# For Custom install, ExpressSkipIdentityConfig has to be FALSE for installation to proceed\n# For Express install, if ExpressSkipIdentityConfig=TRUE, the rest of the values in this section will be ignored and MicroStrategy Identity will NOT be configured\n`;\n\ncomment.caCertificateChain = `\n\n# Path and File Name for the Certificate Bundle (Chain), typically .pem. e.g. C:\\\\certs\\\\labs.pem\n`;\n\ncomment.serverCertificate = `\n\n# Path and File Name for the Server Certificate. e.g. C:\\\\certs\\\\labs.crt\n`;\n\n\ncomment.serverCertificateKey = `\n\n# Path and File Name for the Server Certificate Key file. e.g. C:\\\\certs\\\\labs.key\n`;\n\ncomment.serverCertificateKeyPasswordFile = `\n\n# Optional: Path and File Name to the file which contains the password to the Server Certificate Key (.key) file.\n`;\n\ncomment.smtpServer = `\n\n\n# SMTP Server name\n`;\n\ncomment.smtpServerPort = `\n\n# SMTP Server port number\n`\n\ncomment.smtpUseSSL = `\n\n# Optional: SMTP Server Using SSL \n`;\n\ncomment.smtpUser = `\n\n# Optional: SMTP User name\n`\n\ncomment.smtpUserPassword = `\n\n# Optional: SMTP user password\n`;\n\ncomment.smtpEmail = `\n\n# SMTP email \n`;\n\ncomment.fqdn = `\n\n# Fully Qualified Domain Name\n`;\n\ncomment.hideOpenSourceSoftwareDialogDialog = `\n\n# New in 10.8\n[OpenSourceSoftwareDialog]\n`;\n\ncomment.agreeToDownloadOpenSourceSoftware = `\n\n## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##\n#\n# Agreement to download Open Source Software Installation Files\n# MicroStrategy Identity require MySQL\n# TRUE - Indicates you agree for the installation to automatically download the required open source software installation files on your behalf.\n# FALSE - Indicates the open source software files are pre-downloaded in the User's Downloads folder. (Typically C:\\\\Users\\\\<user>\\\\Downloads)\n# Default is FALSE\n`;\n\n\n\n\ncomment.hideServerDefinitionSettingDialog = `\n\n\n\n[ServerDefinitionSetting]\n`;\n\ncomment.hideAnalyticsSettingDialog = `\n\n[AnalyticsSetting]\n`;\n\ncomment.HideWebVirtualDirectoryDialog = `\n\n[WebVirtualDirectory]\n`;\n\ncomment.hideMobileVirtualDirectoryDialog = `\n\n[MobileVirtualDirectory]\n`;\n\ncomment.hidePortalVirtualDirectoryDialog = `\n\n[PortalVirtualDirectory]\n`;\n\ncomment.hideWebServicesVirtualDirectoryDialog = `\n\n[WebServicesVirtualDirectory]\n`;\n\n\ncomment.hideOfficeWebServicesURLDialog = `\n\n[OfficeWebServicesURL]\n`;\n\n\ncomment.hideMSOfficeLoadOptionsDialog = `\n\n[MSOfficeLoadOptions]\n`;\n\n\ncomment.hideIntelligenceServiceAccountDialog = `\n\n[IntelligenceServiceAccount]\n`;\n\n\ncomment.hideNarrowcastServiceAccountDialog = `\n\n[NarrowcastServiceAccount]\n`;\n\n\n\ncomment.hideSummaryDialog = `\n\n[Summary]\n`;\n\n\ncomment.hideFinishDialog = `\n\n[Finish]\n`;\n\nexport default comment;","\n/**\n *  Mapping the key of TreeNode to states in WindowsInstall.js\n * the key is the value of 'key' for each TreeNode in FeatureSelection Page\n * the value is the corresponding state of that TreeNode\n * @type {Map}\n */\nexport const featureKey2StateMap = new Map([\n  ['7.2', 'developerSelect'],\n  ['7.1', 'analystSelect'],\n  ['7.3', 'architectSelect'],\n  ['7.4', 'serverAdminSelect'],\n  ['7.3.1', 'functionPluginSelect'],\n  ['10', 'commandManagerSelect'],\n  ['11', 'enterpriseManagerSelect'],\n  ['9', 'objectManagerSelect'],\n  ['12', 'integrityManagerSelect'],\n  ['1', 'intelligenceSelect'],\n  ['1.4', 'intelligenceOLAPServicesSelect'],\n  ['1.3', 'intelligenceReportServicesSelect'],\n  ['1.5', 'intelligenceDistributionServicesSelect'],\n  ['1.6', 'intelligenceTransactionServicesSelect'],\n  ['2.3', 'webAnalystSelect'],\n  ['2.4', 'webProfessionalSelect'],\n  ['2.5', 'webReporterSelect'],\n  ['2.1', 'webServerASPNETSelect'],\n  ['2.2', 'webServerJSPSelect'],\n  ['4.2.1', 'webServicesASPNETSelect'],\n  ['4.2.2', 'webServicesJSPSelect'],\n  ['4.1', 'officeSelect'],\n  ['5', 'mobileSelect'],\n  ['5.1', 'mobileServerASPSelect'],\n  ['5.2', 'mobileServerJSPSelect'],\n  ['17', 'analyticsModulesSelect'],\n  ['14.1', 'ncsAdminSelect'],\n  ['14.2', 'deliveryEngineSelect'],\n  ['14.3', 'subscriptionPortalSelect'],\n  ['14.4.1', 'tutorialDeliveryInstallSelect'],\n  ['14.4.2', 'tutorialDeliveryConfigureSelect'],\n  ['21.1', 'sequeLinkSelect'],\n  ['2.6', 'portletsSelect'],\n  ['21.2', 'mdxCubeProviderSelect'],\n  ['2.7', 'gisConnectorsSelect'],\n  ['13', 'systemManagerSelect'],\n  ['19.1', 'identityServerSelect'],\n  ['19.2', 'identityManagerSelect'],\n  ['20', 'usherProfessionalSelect'],\n  ['8', 'telemetryServerSelect'],\n  ['21.3', 'tomcatSelect'],\n  ['21.4', 'mySQLSelect'],\n  ['3.1', 'libraryWebMobileSelect'],\n  ['3.2', 'collaborationSelect'],\n  ['6', 'communityConnectorsSelect'],\n  ['16', 'platformAnalyticsSelect'],\n  ['15', 'certificateStoreSelect'],\n  ['18', 'exportSelect'],\n]);\n\n/**\n * Mapping the picture url to specific state in order to control the picture\n * display in wev&mobileVDS and portal&mdxVDS pages in Windows Installation.\n * The key is the url of picture\n * The value is the state in WindowsInstall.js\n * @type {Map}\n */\nexport const pic2StateMap = new Map([\n  // windows 2020\n  [\n    'assets/MSTR2020/WINDOWS_CUSTOM/pics/9 MicroStrategy Web (ASP .NET) setting.png',\n    'webServerASPNETSelect',\n  ],\n  [\n    'assets/MSTR2020/WINDOWS_CUSTOM/pics/5 Open Source Download.png',\n    'mySQLSelect'\n  ],\n  [\n    'assets/MSTR2020/WINDOWS_CUSTOM/pics/10 MicroStrategy Mobile Server (ASP .NET) Virtual Directory Name.png',\n    'mobileServerASPSelect',\n  ],\n  [\n    'assets/MSTR2020/WINDOWS_CUSTOM/pics/11 MicroStrategy Subscription Portal Virtual Directory Name.png',\n    'subscriptionPortalSelect',\n  ],\n  [\n    'assets/MSTR2020/WINDOWS_CUSTOM/pics/12 MicroStrategy MDX Cube Provider Virtual Directory Name.png',\n    'mdxCubeProviderSelect',\n  ],\n]);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"licenseContainer\":\"LicenseAgreePage_licenseContainer__Q9NIy\",\"licensePage\":\"LicenseAgreePage_licensePage__1GyDT\",\"inputBoxesContainer\":\"LicenseAgreePage_inputBoxesContainer__3xdUJ\",\"licenseModeSelector\":\"LicenseAgreePage_licenseModeSelector__2MQnC\",\"licenseVersionBotMargin\":\"LicenseAgreePage_licenseVersionBotMargin__2KgU2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step\":\"Navigation_step__G03VV\"};","module.exports = __webpack_public_path__ + \"static/media/1 Customer Information.4928762b.png\";","module.exports = __webpack_public_path__ + \"static/media/10 register as a service.6f69a4f0.png\";","module.exports = __webpack_public_path__ + \"static/media/2 Install Location.a5253581.png\";","module.exports = __webpack_public_path__ + \"static/media/3 Select Components.b66cec6e.png\";","module.exports = __webpack_public_path__ + \"static/media/4 Identity Server 1.c8d70353.png\";","module.exports = __webpack_public_path__ + \"static/media/5 Identity Server 2.c667c80b.png\";","module.exports = __webpack_public_path__ + \"static/media/6 Identity Server 3.060e97ae.png\";","module.exports = __webpack_public_path__ + \"static/media/7 Identity Server Manager.8016bd23.png\";","module.exports = __webpack_public_path__ + \"static/media/8 Telemetry Server.70520c56.png\";","module.exports = __webpack_public_path__ + \"static/media/9 Topology Configure.585cdc08.png\";","module.exports = __webpack_public_path__ + \"static/media/1 - Customer Information.b4c6ece8.png\";","module.exports = __webpack_public_path__ + \"static/media/10 MicroStrategy Mobile Server (ASP .NET) Virtual Directory Name.9ae1dee2.png\";","module.exports = __webpack_public_path__ + \"static/media/11 MicroStrategy Subscription Portal Virtual Directory Name.2cede58a.png\";","module.exports = __webpack_public_path__ + \"static/media/12 MicroStrategy MDX Cube Provider Virtual Directory Name.e265cc37.png\";","module.exports = __webpack_public_path__ + \"static/media/13 Office URL.6a853275.png\";","module.exports = __webpack_public_path__ + \"static/media/14 Office Configuration.e31f0223.png\";","module.exports = __webpack_public_path__ + \"static/media/15 Intelligence Setting.08addd4d.png\";","module.exports = __webpack_public_path__ + \"static/media/16 MicroStrategy Narrowcast Server setting.772ac072.png\";","module.exports = __webpack_public_path__ + \"static/media/17 Automatically restart.da0f524e.png\";","module.exports = __webpack_public_path__ + \"static/media/3 Install Destination Location.762db511.png\";","module.exports = __webpack_public_path__ + \"static/media/4 Select Features.93422bff.png\";","module.exports = __webpack_public_path__ + \"static/media/5 Open Source Download.6052cf75.png\";","module.exports = __webpack_public_path__ + \"static/media/6 Topology Configuration.23b5eb58.png\";","module.exports = __webpack_public_path__ + \"static/media/7 Identity Configuration.3e4cbfb6.png\";","module.exports = __webpack_public_path__ + \"static/media/8 Telemetry Server Configuration.68edf57d.png\";","module.exports = __webpack_public_path__ + \"static/media/9 MicroStrategy Web (ASP .NET) setting.496e01d8.png\";","/**\n * @file Describe the file\n * @author Haonan Yu(haoyu@microStrategy.com)\n */\n\nimport {\n    linState2PrefixMap,\n    linState2CommentMap\n} from '../../assets/MSTR2020/LINUX/Lin20Maps4Generator';\nimport {\n    winCustomState2PrefixMap,\n    winCustomState2CommentMap\n} from '../../assets/MSTR2020/WINDOWS_CUSTOM/Win20CustomMaps4Generator';\nimport {\n    winExpressState2PrefixMap,\n    winExpressState2CommentMap\n} from '../../assets/MSTR2020/WINDOWS_EXPRESS/Win20ExpressMaps4Generator';\n\nimport linComments from '../../assets/MSTR2020/LINUX/Lin20GeneratorComment';\n\n\n/**\n * for specific use cases, if the content is an array: ['a', 'b', 'c'],\n * flatten it and return a string  'a;b;c;'\n * @param {value} state the state name\n * @param {Object} props an object that contains functions and variables needed\n * @return {String} return the flatten string generated from the array.\n */\nconst generateValueFromArray = (state, props) => {\n    let array = props.getOriginState(state);\n    if (typeof array === 'undefined' || array.length === 0) {\n        return '';\n    }\n    let res = '';\n    array.forEach((key, index) => {\n        if (typeof key !== 'undefined' && key.length !== 0) {\n            if (index > 0) {\n                res = res + ';';\n            }\n            res = res + key;\n        }\n    });\n    return res;\n};\n\n/**\n * Generate a string that contains all the content of the Option.txt file.\n * @param {Object} states an Object that contains function and variable to get and set the states\n * @return {String} a string that contains all the content of the Option.txt file.\n */\nexport const generateLinuxFile = props => {\n    let res = '';\n    linState2PrefixMap.forEach((value, key) => {\n        let inputValue = null;\n        if (\n            key === 'telemetryServerClusterRemotenodes' ||\n            key === 'servicesRegistrationServerHosts'\n        ) {\n            inputValue = generateValueFromArray(key, props);\n        } else {\n            inputValue = props.getOriginState(key);\n        }\n        res = res + linState2CommentMap.get(key) + value + inputValue + '\\n';\n    });\n\n    res = res + linComments.guide;\n    return res;\n};\n\n/**\n * Generate a string that contains all the content of the Response.ini file for Custom Installation Mode.\n * @param {Object} states an Object that contains function and variable to get and set the states\n * @return {String} a string that contains all the content of the Option.txt file.\n */\nexport const generateWinCustomFile = props => {\n    let res = '';\n    winCustomState2PrefixMap.forEach((value, key) => {\n        let inputValue = null;\n        if (\n            key === 'telemetryServerRemoteNodes' ||\n            key === 'serversInCluster'\n        ) {\n            inputValue = generateValueFromArray(key, props);\n        } else {\n            inputValue = props.getOriginState(key);\n            if (typeof inputValue === 'boolean') {\n                inputValue = inputValue ? 'TRUE' : 'FALSE';\n            }\n        }\n        res =\n            res +\n            winCustomState2CommentMap.get(key) +\n            value +\n            inputValue +\n            '\\n';\n    });\n    return res;\n};\n\n/**\n * Generate a string that contains all the content of the Response.ini file c.\n * @param {Object} states an Object that contains function and variable to get and set the states\n * @return {String} a string that contains all the content of the Option.txt file.\n */\nexport const generateWinExpressFile = props => {\n    let res = '';\n    winExpressState2PrefixMap.forEach((value, key) => {\n        let inputValue = null;\n        inputValue = props.getOriginState(key);\n        if (typeof inputValue === 'boolean') {\n            inputValue = inputValue ? 'TRUE' : 'FALSE';\n        }\n        res =\n            res +\n            winExpressState2CommentMap.get(key) +\n            value +\n            inputValue +\n            '\\n';\n    });\n    return res;\n};\n","\n/**\n * Mapping the features whose installation directory can be set\n * to the state that aim to store the directory path.\n * The key is the key of TreeNode in feature selection page\n * The value is the state name\n * @type {Map}\n */\n\nexport const featureDirectory2StateMap = new Map([\n  ['2', 'webUniversalDeployDirectory'],\n  ['2.4', 'portletsInstallDirectory'],\n  ['2.5', 'gISConnectorsInstallDirectory'],\n  ['5', 'communityConnectorsInstallDirectory'],\n  ['6', 'webServicesInstallDirectory'],\n  ['4.1', 'mobileServerInstallDirectory'],\n  ['9', 'commandManagerInstallDirectory'],\n  ['10', 'systemManagerInstallDirectory'],\n  ['11', 'platformAnalyticsInstallDirectory'],\n  ['15.1', 'identityServerInstallDirectory'],\n  ['15.2', 'identityManagerInstallDirectory'],\n  ['16', 'identityMobileInstallDirectory'],\n]);\n\n\n/**\n * Mapping the features' keys to the states.\n * The key is the key of TreeNode in feature selection page\n * The value is the state name\n * @type {Map}\n */\nexport const featureKey2StateMap = new Map([\n  ['1', 'intelligenceActive'],\n  ['1.3', 'reportServicesActive'],\n  ['1.2', 'oLAPServicesActive'],\n  ['1.1', 'distributionServicesActive'],\n  ['1.4', 'transactionServicesActive'],\n  ['2.1', 'webReporterActive'],\n  ['2.2', 'webAnalystActive'],\n  ['2.3', 'webProfessionalActive'],\n  ['2.4', 'portletsActive'],\n  ['2.5', 'gISConnectorsActive'],\n  ['6', 'webServicesActive'],\n  ['4.1', 'mobileServerActive'],\n  ['5', 'communityConnectorsActive'],\n  ['9', 'commandManagerActive'],\n  ['10', 'systemManagerActive'],\n  ['11', 'platformAnalyticsActive'],\n  ['13', 'enterpriseManagerActive'],\n  ['8', 'integrityManagerActive'],\n  ['15.1', 'identityServerActive'],\n  ['15.2', 'identityManagerActive'],\n  ['16', 'identityMobileActive'],\n  ['7', 'telemetryServerActive'],\n  ['3.1', 'libraryWebMobileActive'],\n  ['3.2', 'collaborationActive'],\n  ['12', 'certificateStoreActive'],\n  ['14', 'exportActive'],\n]);\n"],"sourceRoot":""}